package main

import "github.com/tidwall/gjson"

templ Layout(content templ.Component, pageId string) {
	<!DOCTYPE html>
	<html lang="en-us">
		<head>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<title>Plangs</title>
			<link rel="stylesheet" href="/index.css"/>
			<link rel="apple-touch-icon" sizes="180x180" href="/favicon/apple-touch-icon.png"/>
			<link rel="icon" type="image/png" sizes="32x32" href="/favicon/favicon-32x32.png"/>
			<link rel="icon" type="image/png" sizes="16x16" href="/favicon/favicon-16x16.png"/>
			<link rel="manifest" href="/favicon/site.webmanifest"/>
		</head>
		<body>
			<header id="plangs-header">
				<a id="plangs" href="/">$> Plangs</a>
			</header>
			<main id={ pageId }>
				@content
			</main>
		</body>
	</html>
}

templ Home(data gjson.Result) {
	<nav id="home-nav">
		@Facet("General") {
			Name<br/>
			Extensions<br/>
			Known Releases<br/>
			Known Logo<br/>
			Known Website<br/>
			Known Wikipedia<br/>
		}
		@Facet("Type System") {
			@FacetOptions(sortArray(data.Get("vtables.tsys")))
		}
		@Facet("Paradigm") {
			@FacetOptions(sortArray(data.Get("vtables.para")))
		}
		@Facet("Platform") {
			@FacetOptions(sortArray(data.Get("vtables.platf")))
		}
		@Facet("Compiles To") {
			TODO<br/>
		}
		@Facet("Lineage") {
			Influenced By<br/>
			Influenced<br/>

			Dialect Of<br/>
			Standard For<br/>
			
			Implements<br/>
			Implemented With<br/>
		}
		@Facet("People") {
			<input type="query" placeholder="Search person ..." />
		}
		@Facet("License") {
			@FacetOptions(sortArray(data.Get("vtables.lic")))
		}
	</nav>
	<article id="home-plangs">
		@PlangsList(sortArray(data.Get("vtables.pl")))
	</article>
	<nav id="home-side">
		Side Panel
	</nav>
}

templ PlangsList(plangs []gjson.Result) {
	for _, pl := range plangs {
		<div class="plang-thumb" id={ plCssId(pl) } data-has-wiki={ plHasWikipage(pl) } data-has-home={ plHasHomepage(pl) }>
			<span class="name">{ plName(pl) }</span>
			@imgFor(plLogo(pl), plName(pl))
			<div class="links">
				@anchorFor(plHomepage(pl), "home")
				@anchorFor(plWikipedia(pl), "wiki")
			</div>
		</div>
	}
}

templ imgFor(img gjson.Result, placeholder string) {
	if img.Exists() {
		<img class="logo" src={ img.Get("url").String() } alt="Logo"/>
	} else {
		<div class="placeholder">{ placeholder }</div>
	}
}

templ anchorFor(link gjson.Result, title string) {
	if link.Exists() {
		<a href={ templ.URL(link.Get("href").String()) }>{ title }</a>
	}
}

templ About() {
	<div id="About">
		Plangs is a database of programming languages.
	</div>
}

templ NotFound() {
	<div>404</div>
}

templ Facet(title string) {
	<div class="facet">
		<div class="title">{ title }</div>
		<div class="controls">
			{ children... }
		</div>
	</div>
}

templ FacetOptions(tsys []gjson.Result) {
	for _, tsys := range tsys {
		<label>
			<input type="checkbox" name={ tsys.Get("vid").String() }/>
			{ tsys.Get("name").String() }
		</label>
	}
}
