{
  "name": "NPlangAI",
  "description": "Data for an NPlang node generated by OpenAI.\nWe let go of the string literal types and make all ids strings to make it easier to work with OpenAI.\n\nNote that this Schema must support conversion to a format that OpenAI can understand.\nhttps://platform.openai.com/docs/guides/structured-outputs#supported-schemas",
  "type": "object",
  "properties": {
    "commonData": {
      "$ref": "#/definitions/CommonNodeData",
      "description": "Basic data shared across all Node types."
    },
    "basicPlangData": {
      "description": "Base programming language data.",
      "type": "object",
      "properties": {
        "extensions": {
          "description": "File Extensions, including the dot. Example: [\".pas\", \".tpu\"].",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filenames": {
          "description": "File names are names that are associated with an specific language. Example: ['Makefile'].",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "year": {
          "description": "Year the language first appeared.",
          "type": "number"
        },
        "images": {
          "description": "Logos, screenshots or other images relevant to the language.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "isTranspiler": {
          "description": "Can this particular implementation compile source-code to source-code?",
          "type": "boolean"
        },
        "isMainstream": {
          "description": "Languages like C, C++, Java, Python, JavaScript, etc. are mainstream and production ready.",
          "type": "boolean"
        },
        "releases": {
          "description": "A list of note worthy releases, not all of them. For instance, noteworthy release could be the latest for each major version.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Release"
          }
        }
      },
      "additionalProperties": false,
      "required": ["extensions", "filenames", "images", "isMainstream", "isTranspiler", "releases", "year"]
    },
    "compilesTo": {
      "description": "List of programming languages that this language compiles to, if any.\nEach element is a key with prefix \"pl+\", for instance: \"pl+python\",\nwhere \"python\" is a unique identifier using only lowercase letters, numbers and dashes.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "dialectOf": {
      "description": "List of programming languages that this language is a dialect of, if any.\nEach element is a key with prefix \"pl+\", for instance: \"pl+python\",\nwhere \"python\" is a unique identifier using only lowercase letters, numbers and dashes.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "implements": {
      "description": "List of programming languages that this language is implements, if any.\nEach element is a key with prefix \"pl+\", for instance: \"pl+python\",\nwhere \"python\" is a unique identifier using only lowercase letters, numbers and dashes.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "influencedBy": {
      "description": "List of programming languages that this language was influenced by, if any.\nEach element is a key with prefix \"pl+\", for instance: \"pl+python\",\nwhere \"python\" is a unique identifier using only lowercase letters, numbers and dashes.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "influenced": {
      "description": "List of programming languages that this language influenced, if any.\nEach element is a key with prefix \"pl+\", for instance: \"pl+python\",\nwhere \"python\" is a unique identifier using only lowercase letters, numbers and dashes.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "licenses": {
      "description": "List of licenses for this programming language, if any.\nEach element is a key with prefix \"license+\", for instance: \"license+mit\",\nwhere \"mit\" is a unique identifier using only lowercase letters, numbers and dashes.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "paradigms": {
      "description": "List of paradigms for this programming language, if any.\nEach element is a key with prefix \"paradigm+\", for instance: \"paradigm+oop\",\nwhere \"oop\" is a unique identifier using only lowercase letters, numbers and dashes.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "platforms": {
      "description": "List of platforms for this programming language, if any.\nEach element is a key with prefix \"plat+\", for instance: \"plat+windows\",\nwhere \"windows\" is a unique identifier using only lowercase letters, numbers and dashes.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "tags": {
      "description": "List of tags for this programming language, if any.\nEach element is a key with prefix \"tag+\", for instance: \"tag+games\",\nwhere \"games\" is a unique identifier using only lowercase letters, numbers and dashes.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "typeSystems": {
      "description": "List of type systems for this programming language, if any.\nEach element is a key with prefix \"tsys+\", for instance: \"tsys+strong\",\nwhere \"strong\" is a unique identifier using only lowercase letters, numbers and dashes.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "writtenIn": {
      "description": "List of programming languages uses to implement this programming language, if any.\nEach element is a key with prefix \"lib+\", for instance: \"pl+python\",\nwhere \"python\" is a unique identifier using only lowercase letters, numbers and dashes.",
      "type": "array",
      "items": {
        "type": "string"
      }
    }
  },
  "additionalProperties": false,
  "required": [
    "basicPlangData",
    "commonData",
    "compilesTo",
    "dialectOf",
    "implements",
    "influenced",
    "influencedBy",
    "licenses",
    "paradigms",
    "platforms",
    "tags",
    "typeSystems",
    "writtenIn"
  ],
  "definitions": {
    "CommonNodeData": {
      "description": "Node data shared across all Node types.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "websites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "keywords": {
          "description": "Keywords can be used to match against text content.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false,
      "required": ["description", "keywords", "name", "websites"]
    },
    "Link": {
      "description": "A reference to a web page.",
      "type": "object",
      "properties": {
        "title": {
          "description": "Title of the link, generally used for anchors (<a>).",
          "type": "string"
        },
        "href": {
          "description": "Can be a complete URL including protocol (http/https) or a relative link if it links to https://plangs.page.",
          "type": "string"
        },
        "kind": {
          "description": "A link kind helps us quickly find the kind of link we are looking for.",
          "enum": ["apidocs", "faq", "homepage", "other", "plangs", "reddit", "releases", "repository", "wikipedia"],
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": ["href", "title"]
    },
    "Image": {
      "description": "An image, e.g., a logo.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of image.",
          "enum": ["logo", "other", "screenshot"],
          "type": "string"
        },
        "title": {
          "description": "A title for the image.",
          "type": "string"
        },
        "url": {
          "description": "Full URL for the image, or path if it belongs to https://plangs.page.",
          "type": "string"
        },
        "width": {
          "description": "Width in pixels.",
          "type": "number"
        },
        "height": {
          "description": "Height in pixels.",
          "type": "number"
        }
      },
      "additionalProperties": false,
      "required": ["kind", "title", "url"]
    },
    "Release": {
      "description": "A release of a programming language.",
      "type": "object",
      "properties": {
        "version": {
          "description": "Arbitrary version string used by the artifact.",
          "type": "string"
        },
        "name": {
          "description": "Name of the release, if there's any.",
          "type": "string"
        },
        "date": {
          "$ref": "#/definitions/StrDate",
          "description": "Date of the release, if it is known."
        }
      },
      "additionalProperties": false,
      "required": ["version", "name", "date"]
    },
    "StrDate": {
      "description": "A 0-padded YYYY-MM-DD date. Example: 2024-01-01.",
      "type": "string"
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}
