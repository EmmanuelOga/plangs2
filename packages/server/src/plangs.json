{
  "nodes": {
    "app": {
      "app+harlequin": {
        "name": "Harlequin",
        "keywords": ["database", "client", "terminal"],
        "description": "An easy, fast, and beautiful database client for the terminal.",
        "websites": [{ "href": "https://harlequin.sh/", "title": "Harlequin", "kind": "homepage" }]
      },
      "app+glances": {
        "name": "Glances",
        "keywords": ["monitoring", "system", "terminal"],
        "description": "Glances is a cross-platform system monitoring tool written in Python.",
        "websites": [{ "href": "https://nicolargo.github.io/glances/", "title": "Glances", "kind": "homepage" }]
      },
      "app+zulip": {
        "name": "Zulip",
        "keywords": ["chat", "group", "communication"],
        "description": "Zulip is a powerful, open source group chat application.",
        "websites": [{ "href": "https://github.com/zulip/zulip", "title": "Zulip", "kind": "homepage" }]
      },
      "app+aider": {
        "name": "Aider",
        "keywords": ["pair programming", "llm", "git"],
        "description": "Aider lets you pair program with LLMs, to edit code in your local git repository. Start a new project or work with an existing git repo. Aider works best with GPT-4o & Claude 3.5 Sonnet and can connect to almost any LLM.",
        "websites": [{ "href": "https://aider.chat/", "title": "Aider", "kind": "homepage" }]
      }
    },
    "post": {
      "post+2024_07_30_welcome": {
        "path": "2024_07_30_welcome.md",
        "title": "Welcome to Plangs!",
        "author": "Emmanuel Oga",
        "date": "2024-07-30",
        "websites": [{ "href": "/blog/2024_07_30_welcome", "title": "Welcome to Plangs!", "kind": "plangs" }]
      },
      "post+2024_09_15_python": {
        "path": "2024_09_15_python.md",
        "title": "Type checking and package management for Python",
        "author": "Emmanuel Oga",
        "date": "2024-09-15",
        "websites": [{ "href": "/blog/2024_09_15_python", "title": "Type checking and package management for Python", "kind": "plangs" }]
      }
    },
    "bundle": {
      "bundle+py-one": {
        "description": "Python is well known for having a confusing package management story, but with Pixi you can manage your dependencies with ease, including non-Python dependencies like C libraries. Ruff is a super fast linter and code formatter. Type checking in Python is optional but highly recommended, specially as code grows larger. Pyright is a full-featured, standards-compliant static type checker. This bundle also includes the Python extension for Visual Studio Code."
      }
    },
    "lib": {
      "lib+msgspec": {
        "name": "Msgspec",
        "keywords": ["serialization", "validation", "json", "messagepack", "yaml", "toml"],
        "description": "msgspec is a fast serialization and validation library, with builtin support for JSON, MessagePack, YAML, and TOML.",
        "websites": [{ "href": "https://jcristharif.com/msgspec/", "title": "Msgspec", "kind": "homepage" }]
      },
      "lib+flask": {
        "name": "Flask",
        "keywords": ["web", "framework", "wsgi"],
        "description": "Flask is a lightweight WSGI web application framework.",
        "websites": [{ "href": "https://flask.palletsprojects.com/", "title": "Flask", "kind": "homepage" }]
      }
    },
    "license": {
      "license+bsd": {
        "name": "BSD",
        "keywords": ["bsd", "bsd3", "bsd4"],
        "description": "BSD licenses are a family of permissive free software licenses, imposing minimal restrictions on the use and distribution of covered software.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/BSD_licenses", "title": "BSD licenses" }, {}],
        "spdx": "BSD-3-Clause",
        "isFSFLibre": true,
        "isOSIApproved": true
      },
      "license+afl": {
        "name": "Academic Free License",
        "keywords": ["afl", "afl-3"],
        "description": "The Academic Free License is a permissive free software license with provisions for academic use.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Academic_Free_License", "title": "Academic Free License" }],
        "spdx": "AFL-3.0",
        "isFSFLibre": true,
        "isOSIApproved": true
      },
      "license+agpl": {
        "name": "Affero General Public License",
        "keywords": ["agpl", "agpl-3.0-or-later"],
        "description": "The Affero General Public License is a free software license that requires the source code to be made available to all users who interact with the software over a network.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Affero_General_Public_License", "title": "Affero General Public License" }
        ],
        "spdx": "AGPL-3.0-only",
        "isFSFLibre": true,
        "isOSIApproved": true
      },
      "license+apache": {
        "name": "Apache License 2.0",
        "keywords": ["apache", "apache-2"],
        "description": "The Apache License 2.0 is a permissive free software license written by the Apache Software Foundation, providing an explicit grant of patent rights from contributors to users.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Apache_License_2.0", "title": "Apache License 2.0" }],
        "spdx": "Apache-2.0",
        "isFSFLibre": true,
        "isOSIApproved": true
      },
      "license+apsl": {
        "name": "Apple Public Source License",
        "keywords": ["apsl"],
        "description": "The Apple Public Source License is a free software license used by Apple for its open-source projects.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Apple_Public_Source_License", "title": "Apple Public Source License" }
        ],
        "spdx": "APSL-2.0",
        "isFSFLibre": false,
        "isOSIApproved": true
      },
      "license+artistic": {
        "name": "Artistic License 2.0",
        "keywords": ["artistic", "artistic-2", "artistic-2.0"],
        "description": "The Artistic License 2.0 is a free software license used for the Perl programming language and its associated libraries.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Artistic_License_2.0", "title": "Artistic License 2.0" }],
        "spdx": "Artistic-2.0",
        "isFSFLibre": true,
        "isOSIApproved": true
      },
      "license+boost": {
        "name": "Boost Software License",
        "keywords": ["boost"],
        "description": "The Boost Software License is a permissive free software license used by the Boost C++ Libraries.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Boost_Software_License", "title": "Boost Software License" }],
        "spdx": "BSL-1.0",
        "isFSFLibre": true,
        "isOSIApproved": true
      },
      "license+cecill": {
        "name": "CeCILL",
        "keywords": ["cecill"],
        "description": "The CeCILL license is a French free software license compatible with the GNU General Public License.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/CeCILL", "title": "CeCILL" }],
        "spdx": "CECILL-2.1",
        "isFSFLibre": true,
        "isOSIApproved": false
      },
      "license+cpl": {
        "name": "Common Public License",
        "keywords": ["cpl"],
        "description": "The Common Public License is a free software license used by IBM for some of its software projects.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Common_Public_License", "title": "Common Public License" }],
        "spdx": "CPL-1.0",
        "isFSFLibre": true,
        "isOSIApproved": true
      },
      "license+cc-by": {
        "name": "Creative Commons Attribution",
        "keywords": ["cc-by"],
        "description": "The Creative Commons Attribution license allows for the sharing and adaptation of works, provided that appropriate credit is given.",
        "websites": [
          {
            "kind": "wikipedia",
            "href": "https://en.wikipedia.org/wiki/Creative_Commons_license#Attribution",
            "title": "Creative Commons Attribution"
          }
        ],
        "spdx": "CC-BY-4.0",
        "isFSFLibre": false,
        "isOSIApproved": false
      },
      "license+dual": {
        "name": "Dual License",
        "keywords": ["dual-license"],
        "description": "A dual license allows software to be licensed under two different licenses, providing users with a choice.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Dual_license", "title": "Dual License" }]
      },
      "license+epl": {
        "name": "Eclipse Public License",
        "keywords": ["epl"],
        "description": "The Eclipse Public License is a free software license used by the Eclipse Foundation for its open-source projects.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Eclipse_Public_License", "title": "Eclipse Public License" }],
        "spdx": "EPL-2.0",
        "isFSFLibre": true,
        "isOSIApproved": true
      },
      "license+gnu-gpl": {
        "name": "GNU General Public License",
        "keywords": ["gpl", "gplv2", "gplv3"],
        "description": "The GNU General Public License is a free software license that ensures end users have the freedom to run, study, share, and modify the software.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/GNU_General_Public_License", "title": "GNU General Public License" }
        ],
        "spdx": "GPL-3.0-only",
        "isFSFLibre": true,
        "isOSIApproved": true
      },
      "license+lgpl": {
        "name": "GNU Lesser General Public License",
        "keywords": ["lgpl"],
        "description": "The GNU Lesser General Public License is a free software license that allows for linking with proprietary software.",
        "websites": [
          {
            "kind": "wikipedia",
            "href": "https://en.wikipedia.org/wiki/GNU_Lesser_General_Public_License",
            "title": "GNU Lesser General Public License"
          }
        ],
        "spdx": "LGPL-2.1-only",
        "isFSFLibre": true,
        "isOSIApproved": true
      },
      "license+isc": {
        "name": "ISC License",
        "keywords": ["isc"],
        "description": "The ISC License is a permissive free software license similar to the MIT License, with simplified terms.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/ISC_license", "title": "ISC License" }],
        "spdx": "ISC",
        "isFSFLibre": true,
        "isOSIApproved": true
      },
      "license+mit": {
        "name": "MIT License",
        "keywords": ["mit"],
        "description": "The MIT License is a permissive free software license that is very simple and permissive, with very few restrictions.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/MIT_License", "title": "MIT License" }],
        "spdx": "MIT",
        "isFSFLibre": true,
        "isOSIApproved": true
      },
      "license+mpl": {
        "name": "Mozilla Public License",
        "keywords": ["mpl"],
        "description": "The Mozilla Public License is a free software license used by Mozilla for its open-source projects.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Mozilla_Public_License", "title": "Mozilla Public License" }],
        "spdx": "MPL-2.0",
        "isFSFLibre": true,
        "isOSIApproved": true
      },
      "license+public-domain": {
        "name": "Public Domain",
        "keywords": ["public-domain"],
        "description": "Public Domain refers to works that are free from copyright restrictions and can be freely used by anyone.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Public_domain", "title": "Public Domain" }],
        "isFSFLibre": false,
        "isOSIApproved": false
      },
      "license+python": {
        "name": "Python Software Foundation License",
        "keywords": ["python-software-foundation"],
        "description": "The Python Software Foundation License is a free software license used for Python and related projects.",
        "websites": [
          {
            "kind": "wikipedia",
            "href": "https://en.wikipedia.org/wiki/Python_Software_Foundation_License",
            "title": "Python Software Foundation License"
          }
        ],
        "spdx": "Python-2.0",
        "isFSFLibre": true,
        "isOSIApproved": true
      },
      "license+zlib": {
        "name": "zlib License",
        "keywords": ["zlib"],
        "description": "The zlib License is a permissive free software license used for the zlib compression library.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Zlib_License", "title": "zlib License" }],
        "spdx": "Zlib",
        "isFSFLibre": true,
        "isOSIApproved": true
      }
    },
    "paradigm": {
      "paradigm+agents": {
        "name": "Agent-oriented",
        "keywords": ["agent"],
        "description": "Agent-oriented programming simulates the actions and interactions of autonomous agents.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Agent-based_model", "title": "Agent-based Model" },
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Agent-oriented_programming", "title": "Agent-oriented Programming" }
        ]
      },
      "paradigm+array": {
        "name": "Array Programming",
        "keywords": ["array", "vector"],
        "description": "In computer science, array programming refers to solutions that allow the application of operations to an entire set of values at once. Such solutions are commonly used in scientific and engineering settings.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Array_programming", "title": "Array Data Structure" }]
      },
      "paradigm+aspect": {
        "name": "Aspect-oriented",
        "keywords": ["aspect"],
        "description": "Programming paradigm that aims to increase modularity by allowing the separation of cross-cutting concerns. This allows behaviors that are not central to the business logic (such as logging) to be added to a program without cluttering the code of core functions.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Aspect-oriented_programming", "title": "Aspect-oriented Programming" }
        ]
      },
      "paradigm+assembly": {
        "name": "Assembly",
        "keywords": ["assembly"],
        "description": "Assembly language is a low-level programming language for a computer, or other programmable device, in which there is a very strong (generally one-to-one) correspondence between the language and the architecture's machine code instructions.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Assembly_language", "title": "Assembly Language" }]
      },
      "paradigm+oop": {
        "name": "Object-oriented",
        "keywords": ["object", "oop", "class-based"],
        "description": "Programming paradigm based on the concept of objects, which can contain data and code: data in the form of fields (often known as attributes or properties), and code in the form of procedures (often known as methods). In OOP, computer programs are designed by making them out of objects that interact with one another.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Object-orientation", "title": "Object-orientation" }]
      },
      "paradigm+multi": {
        "name": "Multi-paradigm",
        "keywords": ["multi-paradigm", "multiparadigm"],
        "description": "A programming paradigm is a relatively high-level way to conceptualize and structure the implementation of a computer program. Many/most languages are based on more than one paradigm.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Multi-paradigm_programming_language", "title": "Multi-paradigm Programming" }
        ]
      },
      "paradigm+compiled": {
        "name": "Compiled Language",
        "keywords": ["compiled", "compilation", "compiler"],
        "description": "A compiled language is a programming language for which source code is typically compiled; not interpreted. The term is vague since, in principle, any language can be compiled or interpreted and in practice some languages are both (in different environments). In some environments, source code is first compiled (to an intermediate form; often bytecode) and then interpreted.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Compiled_language", "title": "Compiled Language" },
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Compiler", "title": "Compiler" }
        ]
      },
      "paradigm+concurrent": {
        "name": "Concurrent",
        "keywords": ["concurrent", "parallel"],
        "description": "Concurrent computing is a form of computing in which several computations are executed during overlapping time periods, concurrently, instead of sequentially. Concurrent computing is a form of modular programming. In its paradigm an overall computation is factored into subcomputations that may be executed concurrently.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Concurrent_computing", "title": "Concurrent Computing" }]
      },
      "paradigm+constraint": {
        "name": "Constraint Programming",
        "keywords": ["constraint"],
        "description": "In constraint programming, users declaratively state the constraints on the feasible solutions for a set of decision variables.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Constraint_programming", "title": "Constraint Programming" }]
      },
      "paradigm+visual": {
        "name": "Visual Programming",
        "keywords": ["visual", "block-based", "block-coding", "diagrammatic", "graphical"],
        "description": "A programming language that lets users create programs by manipulating program elements graphically rather than by specifying them textually.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Visual_programming_language", "title": "Visual Programming Language" }
        ]
      },
      "paradigm+declarative": {
        "name": "Declarative Programming",
        "keywords": ["declarative"],
        "description": "A style of building the structure and elements of computer programs—that expresses the logic of a computation without describing its control flow.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Declarative_programming", "title": "Declarative Programming" }]
      },
      "paradigm+concatenative": {
        "name": "Concatenative Programming",
        "keywords": ["concatenative"],
        "description": "A concatenative programming language is a point-free computer programming language in which all expressions denote functions, and the juxtaposition of expressions denotes function composition.",
        "websites": [
          {
            "kind": "wikipedia",
            "href": "https://en.wikipedia.org/wiki/Concatenative_programming_language",
            "title": "Concatenative Programming Language"
          }
        ]
      },
      "paradigm+data-driven": {
        "name": "Data-centric Programming",
        "keywords": ["data-driven"],
        "description": "Programs describe the data to be matched and the processing required rather than defining a sequence of steps to be taken.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Data-driven_programming", "title": "Data-driven Programming" }]
      },
      "paradigm+validation": {
        "name": "Data Validation",
        "keywords": ["validation"],
        "description": "Data validation ensures that data conforms to predefined rules before it is processed.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Data_Validation", "title": "Data Validation" }]
      },
      "paradigm+data-exchange": {
        "name": "Data Exchange",
        "keywords": ["data exchange"],
        "description": "Data exchange languages allow data to be shared between systems in a structured format.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Data_exchange_language", "title": "data exchange" }]
      },
      "paradigm+dataflow": {
        "name": "Dataflow Programming",
        "keywords": ["dataflow"],
        "description": "Models a program as a directed graph of the data flowing between operations, thus implementing dataflow principles and architecture.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Dataflow_programming", "title": "Dataflow programming" }]
      },
      "paradigm+distributed": {
        "name": "Distributed Programming",
        "keywords": ["distributed"],
        "description": "Distributed programming involves multiple computers working together on a single task.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Distributed_programming", "title": "distributed" }]
      },
      "paradigm+dsl": {
        "name": "Domain-Specific Language",
        "keywords": ["domain-specific", "dsl"],
        "description": "A domain-specific language is tailored to a particular application domain.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Domain-specific_language", "title": "domain-specific" }]
      },
      "paradigm+educational": {
        "name": "Educational Programming",
        "keywords": ["educational"],
        "description": "Educational programming languages are designed mainly to teach programming concepts.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Educational_programming_language", "title": "educational" }]
      },
      "paradigm+embedded": {
        "name": "Embedded Systems",
        "keywords": ["embedded"],
        "description": "Embedded systems are specialized computing systems integrated into larger systems.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Embedded_system", "title": "embedded" }]
      },
      "paradigm+esoteric": {
        "name": "Esoteric Programming",
        "keywords": ["esoteric"],
        "description": "Esoteric programming languages are created as experiments, jokes, or for artistic purposes.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Esoteric_programming_language", "title": "esoteric" }]
      },
      "paradigm+event-driven": {
        "name": "Event-Driven Programming",
        "keywords": ["event-driven"],
        "description": "Event-driven programming centers around responding to user actions or other events.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Event-driven_programming", "title": "event-driven" }]
      },
      "paradigm+expert-system": {
        "name": "Expert System",
        "keywords": ["expert system"],
        "description": "Expert systems use rule-based algorithms to simulate decision-making.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Expert_system", "title": "expert system" }]
      },
      "paradigm+exp-oriented": {
        "name": "Expression-Oriented Programming",
        "keywords": ["exp-oriented", "expression-oriented"],
        "description": "Expression-oriented programming emphasizes the use of expressions over statements.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Expression-oriented_programming_language", "title": "exp-oriented" }
        ]
      },
      "paradigm+extensible": {
        "name": "Extensible Programming",
        "keywords": ["extensible"],
        "description": "Extensible programming languages are designed to be extended with new features.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Extensible_programming", "title": "extensible" }]
      },
      "paradigm+frp": {
        "name": "Functional Reactive Programming",
        "keywords": ["functional reactive", "frp"],
        "description": "Functional reactive programming is a programming paradigm for reactive systems using functional programming.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Functional_reactive_programming", "title": "functional reactive" }]
      },
      "paradigm+macro": {
        "name": "Macro Processor",
        "keywords": ["macro", "macros"],
        "description": "A macro (short for \"macro instruction\") is a rule or pattern that specifies how a certain input should be mapped to a replacement output.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Macro_(computer_science)", "title": "Macro" },
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/General-purpose_macro_processor", "title": "general-purpose macro processor" }
        ]
      },
      "paradigm+general-purpose": {
        "name": "General-Purpose Programming",
        "keywords": ["general-purpose"],
        "description": "General-purpose programming languages are designed to solve a wide range of problems.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/General-purpose_programming_language", "title": "general-purpose" }
        ]
      },
      "paradigm+imperative": {
        "name": "Imperative Programming",
        "keywords": ["imperative"],
        "description": "Imperative programming uses statements to change a program's state.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Imperative_programming", "title": "Imperative" }]
      },
      "paradigm+data-hiding": {
        "name": "Data and Procedure Hiding",
        "keywords": ["hiding", "hiding"],
        "description": "Data and procedure hiding restrict access to certain parts of a program's code.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Information_hiding", "title": "Data and procedure hiding" }]
      },
      "paradigm+protocol": {
        "name": "Protocol-Oriented Programming",
        "keywords": ["protocol", "interface"],
        "description": "Protocol-oriented programming focuses on the design and use of interfaces or protocols to define program behavior.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Interface_(object-oriented_programming)", "title": "protocol-oriented" }
        ]
      },
      "paradigm+interpreted": {
        "name": "Interpreted Programming",
        "keywords": ["interpreted"],
        "description": "Interpreted languages are executed directly, without prior compilation.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Interpreted_language", "title": "interpreted" }]
      },
      "paradigm+language-oriented": {
        "name": "Language-Oriented Programming",
        "keywords": ["language-oriented"],
        "description": "Language-oriented programming involves the creation of domain-specific languages to solve specific problems.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Language_oriented_programming", "title": "language oriented programming" }
        ]
      },
      "paradigm+lazy": {
        "name": "Lazy Evaluation",
        "keywords": ["lazy"],
        "description": "Lazy evaluation delays the evaluation of an expression until its value is needed.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Lazy_evaluation", "title": "lazy" }]
      },
      "paradigm+logic": {
        "name": "Logic Programming",
        "keywords": ["logic"],
        "description": "Logic programming is based on formal logic, using facts and rules to derive conclusions.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Logic_Programming", "title": "Logic Programming" }]
      },
      "paradigm+low-code": {
        "name": "Low-Code Development",
        "keywords": ["low-code"],
        "description": "Low-code platforms enable software development with minimal hand-coding.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Low-code_development_platform", "title": "Low-code" }]
      },
      "paradigm+message-passing": {
        "name": "Message Passing",
        "keywords": ["message-passing"],
        "description": "Message passing involves communication between processes through the exchange of messages.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Message_passing", "title": "message passing" }]
      },
      "paradigm+metaprogramming": {
        "name": "Metaprogramming",
        "keywords": ["metaprogramming", "meta"],
        "description": "Metaprogramming refers to writing programs that generate or manipulate other programs.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Metaprogramming", "title": "metaprogramming" }]
      },
      "paradigm+modular": {
        "name": "Modular Programming",
        "keywords": ["modular"],
        "description": "Modular programming involves dividing a program into separate, independent modules.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Modular_programming", "title": "Modular" }]
      },
      "paradigm+multi-dispatch": {
        "name": "Multiple Dispatch",
        "keywords": ["multi-dispatch"],
        "description": "Multiple dispatch selects a function to invoke based on the runtime types of multiple arguments.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Multiple_dispatch", "title": "multi-dispatch multi-dis" }]
      },
      "paradigm+natural-language": {
        "name": "Natural Language Programming",
        "keywords": ["natural language programming"],
        "description": "Natural language programming enables the development of software using human language commands.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Natural_language_programming", "title": "Natural language programming" }
        ]
      },
      "paradigm+parallel": {
        "name": "Parallel Programming",
        "keywords": ["parallel programming"],
        "description": "Parallel programming executes multiple tasks simultaneously to improve performance.",
        "websites": [
          {
            "kind": "wikipedia",
            "href": "https://en.wikipedia.org/wiki/Parallel_programming_model",
            "title": "Parallel programming, pgas, mpmd, spmd"
          }
        ]
      },
      "paradigm+pattern-matching": {
        "name": "Pattern-Matching",
        "keywords": ["pattern-matching"],
        "description": "Pattern-matching allows for checking and decomposing data structures based on patterns.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Pattern-matching", "title": "Pattern-matching" }]
      },
      "paradigm+pipeline": {
        "name": "Pipeline Programming",
        "keywords": ["pipeline"],
        "description": "Pipeline programming passes data through a series of processing stages, each stage producing input for the next.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Pipeline_(software)", "title": "pipeline" }]
      },
      "paradigm+procedural": {
        "name": "Procedural Programming",
        "keywords": ["procedural"],
        "description": "Procedural programming focuses on the use of procedures or functions to perform tasks.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Procedural_programming", "title": "Procedural" }]
      },
      "paradigm+process-oriented": {
        "name": "Process-Oriented Programming",
        "keywords": ["process-oriented"],
        "description": "Process-oriented programming is based on the concept of processes as the primary abstraction.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Process-oriented_programming", "title": "process-oriented" }]
      },
      "paradigm+rules": {
        "name": "Rule-Based Processing",
        "keywords": ["rule", "rules"],
        "description": "Rule-based processing involves defining rules that control the logic of decision-making systems.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Production_system_(computer_science)", "title": "rule processing" }
        ]
      },
      "paradigm+prototype": {
        "name": "Prototype-Based Programming",
        "keywords": ["prototype"],
        "description": "Prototype-based programming is a style of object-oriented programming where objects are created by cloning existing ones.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Prototype-based_programming", "title": "Prototype-Based Programming" }
        ]
      },
      "paradigm+functional": {
        "name": "Functional Programming",
        "keywords": ["functional", "lambda", "pure"],
        "description": "A programming paradigm where programs are constructed by applying and composing functions. It is a declarative programming paradigm in which function definitions are trees of expressions that map values to other values.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Functional_programming", "title": "Functional Programming" },
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Purely_functional_programming", "title": "Purely functional, pure" }
        ]
      },
      "paradigm+quantum": {
        "name": "Quantum Programming",
        "keywords": ["quantum"],
        "description": "Quantum programming deals with the development of algorithms for quantum computers.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Quantum_programming", "title": "Quantum" }]
      },
      "paradigm+query": {
        "name": "Query Language",
        "keywords": ["query"],
        "description": "A query language is used to make queries in databases and information systems.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Query_language", "title": "Query language" }]
      },
      "paradigm+reactive": {
        "name": "Reactive Programming",
        "keywords": ["reactive"],
        "description": "Reactive programming focuses on asynchronous data streams and the propagation of change.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Reactive_programming", "title": "reactive" }]
      },
      "paradigm+real-time": {
        "name": "Real-Time Computing",
        "keywords": ["real-time"],
        "description": "Real-time computing involves tasks that must be completed within strict timing constraints.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Real-time_computing", "title": "real-time" }]
      },
      "paradigm+reflective": {
        "name": "Reflective Programming",
        "keywords": ["reflective"],
        "description": "Reflective programming allows a program to inspect and modify its own structure and behavior at runtime.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Reflective_programming", "title": "Reflective Programming" }]
      },
      "paradigm+scientific": {
        "name": "Scientific Workflow",
        "keywords": ["scientific"],
        "description": "Scientific workflow systems support the automation of complex scientific processes.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Scientific_workflow_system", "title": "scientific workflow" }]
      },
      "paradigm+scripting": {
        "name": "Scripting Language",
        "keywords": ["scripting"],
        "description": "Scripting languages are used for automating tasks within a software environment.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Scripting_language", "title": "scripting" }]
      },
      "paradigm+shared-memory": {
        "name": "Shared Memory",
        "keywords": ["shared memory"],
        "description": "Shared memory systems allow multiple processes to access the same memory space.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Shared_memory", "title": "shared memory" }]
      },
      "paradigm+simulation": {
        "name": "Simulation Language",
        "keywords": ["simulation"],
        "description": "Simulation languages are specialized for modeling and simulating complex systems.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Simulation_language", "title": "Simulation language" }]
      },
      "paradigm+stack-oriented": {
        "name": "Stack-Oriented Programming",
        "keywords": ["stack-oriented"],
        "description": "Stack-oriented programming uses a stack-based data structure for passing parameters.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Stack-oriented_programming_language", "title": "stack-oriented" }]
      },
      "paradigm+structured": {
        "name": "Structured Programming",
        "keywords": ["structured"],
        "description": "Structured programming emphasizes control structures like loops and conditionals, avoiding the use of 'goto' statements.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Structured_programming", "title": "Structured programming" }]
      },
      "paradigm+symbolic": {
        "name": "Symbolic Programming",
        "keywords": ["symbolic"],
        "description": "Symbolic programming involves manipulating symbols rather than numeric data.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Symbolic_programming", "title": "symbolic" }]
      },
      "paradigm+synchronous": {
        "name": "Synchronous Programming",
        "keywords": ["synchronous"],
        "description": "Synchronous programming operates in a time-driven manner where operations occur sequentially and in sync with a clock.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Synchronous_programming_language", "title": "synchronous" }]
      },
      "paradigm+point-free": {
        "name": "Point-free Programming",
        "keywords": ["point-free", "tacit"],
        "description": "Point-free (aka tacit) programming avoids specifying arguments in function definitions, focusing on composition rather than application.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Tacit_programming", "title": "Tacit programming" }]
      },
      "paradigm+rewriting": {
        "name": "Term Rewriting",
        "keywords": ["rewriting", "term-rewriting"],
        "description": "Term-rewriting involves transforming expressions according to a set of rules to perform computation.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Term-rewriting", "title": "Term-rewriting" }]
      },
      "paradigm+async": {
        "name": "Task-Driven Asynchronous Programming",
        "keywords": ["task-driven", "async"],
        "description": "Task-driven asynchronous programming allows tasks to be executed independently, enabling concurrency and efficient resource utilization.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Asynchronous_method_invocation", "title": "Asynchronous method invocation" }
        ]
      }
    },
    "pl": {
      "pl+.net": {
        "name": ".NET",
        "description": "The .NET platform (pronounced as \"dot net\") is a free and open-source, managed computer software framework for Windows, Linux, and macOS operating systems. The project is mainly developed by Microsoft employees by way of the .NET Foundation and is released under an MIT License.",
        "websites": [
          { "href": "http://dotnet.microsoft.com/", "title": "dotnet.microsoft.com", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/.NET", "title": ".NET", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "8.0.8", "date": "2024-01-01" }, { "version": "9.0.0", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": ".NET", "url": "/images/plangs/_/_net/logo.png" }]
      },
      "pl+actionscript": {
        "name": "ActionScript",
        "description": "ActionScript is an object-oriented programming language originally developed by Macromedia Inc. (later acquired by Adobe). It is influenced by HyperTalk, the scripting language for HyperCard. It is now an implementation of ECMAScript (meaning it is a superset of the syntax and semantics of the language more widely known as JavaScript), though it originally arose as a sibling, both being influenced by HyperTalk. ActionScript code is usually converted to byte-code format by a compiler.",
        "firstAppeared": "1998-01-01",
        "websites": [
          {
            "href": "https://www.adobe.com/devnet/actionscript/articles/actionscript3_overview.html",
            "title": "adobe.com/devnet/actionscript/",
            "kind": "other"
          },
          { "href": "https://en.wikipedia.org/wiki/ActionScript", "title": "ActionScript", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.0", "date": "2006-01-01" }],
        "images": [{ "kind": "logo", "title": "ActionScript", "url": "/images/plangs/a/actionscript/other.png" }]
      },
      "pl+ada": {
        "name": "Ada",
        "description": "Ada is a structured, statically typed, imperative, and object-oriented high-level programming language, inspired by Pascal and other languages. It has built-in language support for design by contract (DbC), extremely strong typing, explicit concurrency, tasks, synchronous message passing, protected objects, and non-determinism. Ada improves code safety and maintainability by using the compiler to find errors in favor of runtime errors. Ada is an international technical standard, jointly defined by the International Organization for Standardization (ISO), and the International Electrotechnical Commission (IEC). As of May 2023, the standard, called Ada 2022 informally, is ISO/IEC 8652:2023.",
        "firstAppeared": "1980-01-01",
        "extensions": [".adb", ".ads"],
        "websites": [
          { "href": "https://www.adaic.org/", "title": "www.adaic.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Ada_programming_language", "title": "Ada", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "logo", "title": "Ada", "url": "/images/plangs/a/ada/logo.png" }]
      },
      "pl+agda": {
        "name": "Agda",
        "description": "Agda is a dependently typed functional programming language originally developed by Ulf Norell at Chalmers University of Technology with implementation described in his PhD thesis. The original Agda system was developed at Chalmers by Catarina Coquand in 1999. The current version, originally known as Agda 2, is a full rewrite, which should be considered a new language that shares a name and tradition.",
        "firstAppeared": "2007-01-01",
        "extensions": [".agda", ".lagda", ".lagda.md", ".lagda.rst", ".lagda.tex"],
        "websites": [
          { "href": "http://wiki.portal.chalmers.se/agda", "title": "wiki.portal.chalmers.se/agda", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Agda_(programming_language)", "title": "Agda", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2.6.3", "date": "2023-01-01" }],
        "images": [{ "kind": "logo", "title": "Agda", "url": "/images/plangs/a/agda/logo.png" }]
      },
      "pl+algol": {
        "name": "ALGOL",
        "description": "ALGOL (/ˈælɡɒl, -ɡɔːl/; short for \"Algorithmic Language\") is a family of imperative computer programming languages originally developed in 1958. ALGOL heavily influenced many other languages and was the standard method for algorithm description used by the Association for Computing Machinery (ACM) in textbooks and academic sources for more than thirty years.",
        "firstAppeared": "1958-01-01",
        "websites": [{ "href": "https://en.wikipedia.org/wiki/ALGOL", "title": "ALGOL", "kind": "wikipedia" }],
        "images": [{ "kind": "other", "title": "ALGOL", "url": "/images/plangs/a/algol/other.jpg" }]
      },
      "pl+alice": {
        "name": "Alice",
        "description": "Alice is an object-based educational programming language with an integrated development environment (IDE). Alice uses a drag and drop environment to create computer animations using 3D models. The software was developed first at University of Virginia in 1994, then Carnegie Mellon (from 1997), by a research group led by Randy Pausch.",
        "firstAppeared": "2000-01-01",
        "websites": [
          { "href": "http://www.alice.org/", "title": "www.alice.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Alice_(software)", "title": "Alice", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.6.0.3", "date": "2021-01-01" }],
        "images": [{ "kind": "screenshot", "title": "Alice", "url": "/images/plangs/a/alice/screenshot.jpg" }]
      },
      "pl+ampl": {
        "name": "AMPL",
        "description": "AMPL (A Mathematical Programming Language) is an algebraic modeling language to describe and solve high-complexity problems for large-scale mathematical computing (e.g. large-scale optimization and scheduling-type problems).\nIt was developed by Robert Fourer, David Gay, and Brian Kernighan at Bell Laboratories.\nAMPL supports dozens of solvers, both open source and commercial software, including CBC, CPLEX, FortMP, MOSEK, MINOS, IPOPT, SNOPT, KNITRO, and LGO. Problems are passed to solvers as nl files.\nAMPL is used by more than 100 corporate clients, and by government agencies and academic institutions.",
        "firstAppeared": "1985-01-01",
        "extensions": [".dat", ".mod", ".run"],
        "websites": [
          { "href": "http://www.ampl.com/", "title": "www.ampl.com", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/AMPL", "title": "AMPL", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "other", "title": "AMPL", "url": "/images/plangs/a/ampl/other.jpg" }]
      },
      "pl+apl": {
        "name": "APL",
        "description": "APL (named after the book A Programming Language) is a programming language developed in the 1960s by Kenneth E. Iverson. Its central datatype is the multidimensional array. It uses a large range of special graphic symbols to represent most functions and operators, leading to very concise code. It has been an important influence on the development of concept modeling, spreadsheets, functional programming, and computer math packages. It has also inspired several other programming languages.",
        "firstAppeared": "1966-01-01",
        "websites": [
          { "href": "https://aplwiki.com/", "title": "aplwiki.com", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/APL_programming_language", "title": "APL", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "logo", "title": "APL", "url": "/images/plangs/a/apl/logo.png" }]
      },
      "pl+asm.js": {
        "name": "asm.js",
        "description": "asm.js is a subset of JavaScript designed to allow computer software written in languages such as C to be run as web applications while maintaining performance characteristics considerably better than standard JavaScript, which is the typical language used for such applications.",
        "firstAppeared": "2013-01-01",
        "websites": [
          { "href": "http://asmjs.org/", "title": "asmjs.org", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Asm.js", "title": "asm.js", "kind": "wikipedia" }
        ]
      },
      "pl+assembly": {
        "name": "Assembly language",
        "description": "In computer programming,  assembly language (alternatively assembler language or symbolic machine code), often referred to simply as assembly and commonly abbreviated as ASM or asm, is any low-level programming language with a very strong correspondence between the instructions in the language and the architecture's machine code instructions. Assembly language usually has one statement per machine instruction (1:1), but  constants, comments, assembler directives, symbolic labels of, e.g., memory locations, registers, and macros are generally also supported.",
        "firstAppeared": "1947-01-01",
        "extensions": [".SRC", ".asm", ".inc", ".s", ".wla"],
        "websites": [{ "href": "https://en.wikipedia.org/wiki/Assembly_language", "title": "Assembly language", "kind": "wikipedia" }],
        "images": [{ "kind": "other", "title": "Assembly language", "url": "/images/plangs/a/assembly/other.png" }]
      },
      "pl+assemblyscript": {
        "name": "AssemblyScript",
        "description": "AssemblyScript is a TypeScript-based programming language that is optimized for, and statically compiled to, WebAssembly (currently using asc, the reference AssemblyScript compiler). Resembling ECMAScript and JavaScript, but with static types, the language is developed by the AssemblyScript Project with contributions from the AssemblyScript community.",
        "firstAppeared": "2017-01-01",
        "extensions": [".ts"],
        "websites": [
          { "href": "https://www.assemblyscript.org/", "title": "www.assemblyscript.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/AssemblyScript", "title": "AssemblyScript", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "0.27.29", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "AssemblyScript", "url": "/images/plangs/a/assemblyscript/logo.png" }]
      },
      "pl+awk": {
        "name": "AWK",
        "description": "AWK (/ɔːk/) is a domain-specific language designed for text processing and typically used as a data extraction and reporting tool. Like sed and grep, it is a filter, and is a standard feature of most Unix-like operating systems.",
        "firstAppeared": "1977-01-01",
        "websites": [{ "href": "https://en.wikipedia.org/wiki/AWK_programming_language", "title": "AWK", "kind": "wikipedia" }],
        "images": [{ "kind": "other", "title": "AWK", "url": "/images/plangs/a/awk/other.png" }]
      },
      "pl+ballerina": {
        "name": "Ballerina",
        "description": "Ballerina is an open source general-purpose programming language designed by WSO2 for cloud-era application programmers.",
        "firstAppeared": "2017-01-01",
        "websites": [
          { "href": "http://ballerina.io/", "title": "ballerina.io", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Ballerina_(programming_language)", "title": "Ballerina", "kind": "wikipedia" }
        ]
      },
      "pl+bash": {
        "name": "Bash",
        "description": "Bash, short for Bourne-Again SHell, is a shell program and command language  supported by the Free Software Foundation and first developed for the GNU Project by Brian Fox. Designed as a 100% free software alternative for the Bourne shell, it was initially released in 1989. Its moniker is a play on words, referencing both its predecessor, the Bourne shell, and the concept of rebirth.",
        "websites": [
          { "href": "http://www.gnu.org/software/bash/", "title": "www.gnu.org/software/bash/", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Bash_(Unix_shell)", "title": "Bash", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "5.2.32", "date": "2024-01-01" }],
        "images": [{ "kind": "screenshot", "title": "Bash", "url": "/images/plangs/b/bash/screenshot.png" }]
      },
      "pl+basic": {
        "name": "BASIC",
        "description": "BASIC (Beginners' All-purpose Symbolic Instruction Code) is a family of general-purpose, high-level programming languages designed for ease of use. The original version was created by John G. Kemeny and Thomas E. Kurtz at Dartmouth College in 1963. They wanted to enable students in non-scientific fields to use computers. At the time, nearly all computers required writing custom software, which only scientists and mathematicians tended to learn.",
        "firstAppeared": "1964-01-01",
        "websites": [{ "href": "https://en.wikipedia.org/wiki/BASIC", "title": "BASIC", "kind": "wikipedia" }],
        "images": [{ "kind": "other", "title": "BASIC", "url": "/images/plangs/b/basic/other.png" }]
      },
      "pl+befunge": {
        "name": "Befunge",
        "description": "Befunge is a two-dimensional stack-based, reflective, esoteric programming language. It differs from conventional languages in that programs are arranged on a two-dimensional grid. \"Arrow\" instructions direct the control flow to the left, right, up or down, and loops are constructed by sending the control flow in a cycle. It has been described as \"a cross between Forth and Lemmings\".",
        "firstAppeared": "1993-01-01",
        "websites": [
          { "href": "http://catseye.tc/node/Befunge-93.html", "title": "catseye.tc/node/Befunge-93.html", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Befunge", "title": "Befunge", "kind": "wikipedia" }
        ]
      },
      "pl+boo": {
        "name": "Boo",
        "description": "Boo is an object-oriented, statically typed, general-purpose programming language that seeks to make use of the Common Language Infrastructure's support for Unicode, internationalization, and web applications, while using a Python-inspired syntax and a special focus on language and compiler extensibility. Some features of note include type inference, generators, multimethods, optional duck typing, macros, true closures, currying, and first-class functions.",
        "firstAppeared": "2003-01-01",
        "websites": [
          { "href": "https://github.com/boo-lang", "title": "github.com/boo-lang", "kind": "repository" },
          { "href": "https://en.wikipedia.org/wiki/Boo_(programming_language)", "title": "Boo", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "0.9.7", "date": "2013-01-01" }]
      },
      "pl+boomerang": {
        "name": "Boomerang",
        "description": "Boomerang is a programming language for writing lenses—well-behaved bidirectional transformations —that operate on ad-hoc, textual data formats.",
        "firstAppeared": "2008-01-01",
        "websites": [
          { "href": "http://www.seas.upenn.edu/~harmony/", "title": "www.seas.upenn.edu/~harmony/", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Boomerang_(programming_language)", "title": "Boomerang", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "0.2", "date": "2009-01-01" }]
      },
      "pl+borland-turbo-c": {
        "name": "Borland Turbo C",
        "description": "Turbo C is a discontinued integrated development environment (IDE) and compiler for the C programming language from Borland. First introduced in 1987, it was noted for its integrated development environment, small size, fast compile speed, comprehensive manuals and low price.",
        "websites": [{ "href": "https://en.wikipedia.org/wiki/Borland_Turbo_C", "title": "Borland Turbo C", "kind": "wikipedia" }],
        "images": [{ "kind": "other", "title": "Borland Turbo C", "url": "/images/plangs/b/borland-turbo-c/other.jpg" }]
      },
      "pl+brainfuck": {
        "name": "Brainfuck",
        "description": "Brainfuck is an esoteric programming language created in 1993 by Swiss student Urban Müller. Designed to be extremely minimalistic, the language consists of only eight simple commands, a data pointer and an instruction pointer.",
        "firstAppeared": "1993-01-01",
        "extensions": [".b", ".bf"],
        "websites": [
          { "href": "https://brainfuck.org/", "title": "brainfuck.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Brainfuck", "title": "Brainfuck", "kind": "wikipedia" }
        ]
      },
      "pl+c++": {
        "name": "C++",
        "description": "C++ (/ˈsiː plʌs plʌs/, pronounced \"C plus plus\" and sometimes abbreviated as CPP) is a high-level, general-purpose programming language created by Danish computer scientist Bjarne Stroustrup. First released in 1985 as an extension of the C programming language, it has since expanded significantly over time; as of 1997, C++ has object-oriented, generic, and functional features, in addition to facilities for low-level memory manipulation for systems like microcomputers or to make operating systems like Linux or Windows. It is usually implemented as a compiled language, and many vendors provide C++ compilers, including the Free Software Foundation, LLVM, Microsoft, Intel, Embarcadero, Oracle, and IBM.",
        "firstAppeared": "1985-01-01",
        "extensions": [".C", ".H", ".c++", ".cc", ".cpp", ".cppm", ".cxx", ".h", ".h++", ".hh", ".hpp", ".hxx", ".ixx"],
        "websites": [
          { "href": "https://isocpp.org/", "title": "isocpp.org", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/C%2B%2B", "title": "C++", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "logo", "title": "C++", "url": "/images/plangs/c/c++/logo.png" }]
      },
      "pl+c-sharp": {
        "name": "C#",
        "description": "C# (/ˌsiː ˈʃɑːrp/ see SHARP) is a general-purpose high-level programming language supporting multiple paradigms. C# encompasses static typing, strong typing, lexically scoped, imperative, declarative, functional, generic, object-oriented (class-based), and component-oriented programming disciplines.",
        "firstAppeared": "2000-01-01",
        "extensions": [".cs", ".csx"],
        "websites": [
          { "href": "https://learn.microsoft.com/en-us/dotnet/csharp/", "title": "learn.microsoft.com/en-us/dotnet/csharp/", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/C%EF%BC%83_(programming_language)", "title": "C#", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "12.0", "date": "2023-01-01" }],
        "images": [{ "kind": "logo", "title": "C#", "url": "/images/plangs/c/c-sharp/logo.png" }]
      },
      "pl+c": {
        "name": "C",
        "description": "C (pronounced /ˈsiː/ – like the letter c) is a general-purpose programming language. It was created in the 1970s by Dennis Ritchie and remains very widely used and influential. By design, C's features cleanly reflect the capabilities of the targeted CPUs. It has found lasting use in operating systems code (especially in kernels), device drivers, and protocol stacks, but its use in application software has been decreasing. C is commonly used on computer architectures that range from the largest supercomputers to the smallest microcontrollers and embedded systems.",
        "firstAppeared": "1972-01-01",
        "extensions": [".c", ".h"],
        "websites": [
          { "href": "https://www.iso.org/standard/74528.html", "title": "www.iso.org/standard/74528.html", "kind": "other" },
          { "href": "http://www.open-std.org/jtc1/sc22/wg14/", "title": "www.open-std.org/jtc1/sc22/wg14/", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/C_(programming_language)", "title": "C", "kind": "wikipedia" }
        ]
      },
      "pl+ceylon": {
        "name": "Ceylon",
        "description": "Ceylon was an object-oriented, strongly statically typed programming language with an emphasis on immutability, created by Red Hat. Ceylon programs run on the Java virtual machine (JVM), and could be compiled to JavaScript.\nThe language design focuses on source code readability, predictability, toolability, modularity, and metaprogrammability.",
        "firstAppeared": "2011-01-01",
        "extensions": [".ceylon"],
        "websites": [
          { "href": "http://ceylon-lang.org/", "title": "ceylon-lang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Ceylon_(programming_language)", "title": "Ceylon", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.3.3", "date": "2017-01-01" }],
        "images": [{ "kind": "logo", "title": "Ceylon", "url": "/images/plangs/c/ceylon/logo.png" }]
      },
      "pl+cg": {
        "name": "Cg/HLSL",
        "description": "Cg (short for C for Graphics) and High-Level Shader Language (HLSL) are two names given to a  high-level shading language developed by Nvidia and Microsoft for programming shaders. Cg/HLSL is based on the C programming language and although they share the same core syntax, some features of C were modified and new data types were added to make Cg/HLSL more suitable for programming graphics processing units.",
        "websites": [
          { "href": "https://developer.nvidia.com/cg-toolkit", "title": "developer.nvidia.com/cg-toolkit", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Cg_(programming_language)", "title": "Cg/HLSL", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "other", "title": "Cg/HLSL", "url": "/images/plangs/c/cg/other.png" }]
      },
      "pl+chuck": {
        "name": "ChucK",
        "description": "ChucK is a concurrent, strongly timed audio programming language for real-time synthesis, composition, and performance,\nwhich runs on Linux, Mac OS X, Microsoft Windows, and iOS. It is designed to favor readability and flexibility for the programmer over other considerations such as raw performance. It natively supports deterministic concurrency and multiple, simultaneous, dynamic control rates. Another key feature is the ability to live code; adding, removing, and modifying code on the fly, while the program is running, without stopping or restarting. It has a highly precise timing/concurrency model, allowing for arbitrarily fine granularity. It offers composers and researchers a powerful and flexible programming tool for building and experimenting with complex audio synthesis programs, and real-time interactive control.",
        "firstAppeared": "2003-01-01",
        "websites": [
          { "href": "http://chuck.cs.princeton.edu/", "title": "chuck.cs.princeton.edu", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/ChucK", "title": "ChucK", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.5.2.4", "date": "2024-01-01" }],
        "images": [{ "kind": "other", "title": "ChucK", "url": "/images/plangs/c/chuck/other.png" }]
      },
      "pl+ciao": {
        "name": "Ciao",
        "description": "Ciao is a general-purpose programming language which supports logic, constraint, functional, higher-order, and object-oriented programming styles. Its main design objectives are high expressive power, extensibility, safety, reliability, and efficient execution.",
        "firstAppeared": "1984-01-01",
        "websites": [
          { "href": "http://www.ciao-lang.org/", "title": "www.ciao-lang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Ciao_(programming_language)", "title": "Ciao", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "logo", "title": "Ciao", "url": "/images/plangs/c/ciao/logo.png" }]
      },
      "pl+cilk": {
        "name": "Cilk",
        "description": "Cilk, Cilk++, Cilk Plus and OpenCilk are general-purpose programming languages designed for multithreaded parallel computing. They are based on the C and C++ programming languages, which they extend with constructs to express parallel loops and the fork–join idiom.",
        "firstAppeared": "1994-01-01",
        "websites": [
          { "href": "https://cilk.mit.edu/", "title": "cilk.mit.edu", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Cilk", "title": "Cilk", "kind": "wikipedia" }
        ]
      },
      "pl+circuitpython": {
        "name": "CircuitPython",
        "description": "CircuitPython is an open-source derivative of the MicroPython programming language targeted toward students and beginners. Development of CircuitPython is supported by Adafruit Industries. It is a software implementation of the Python 3 programming language, written in C. It has been ported to run on several modern microcontrollers.",
        "websites": [
          { "href": "https://circuitpython.org/", "title": "circuitpython.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/CircuitPython", "title": "CircuitPython", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "9.1.1", "date": "2024-01-01" }],
        "images": [{ "kind": "other", "title": "CircuitPython", "url": "/images/plangs/c/circuitpython/other.png" }]
      },
      "pl+clang": {
        "name": "Clang",
        "description": "Clang (/ˈklæŋ/) is a compiler front end for the C, C++, Objective-C, and Objective-C++ programming languages, as well as the OpenMP, OpenCL, RenderScript, CUDA, SYCL, and HIP frameworks. It acts as a drop-in replacement for the GNU Compiler Collection (GCC), supporting most of its compilation flags and unofficial language extensions. It includes a static analyzer, and several code analysis tools.",
        "websites": [
          { "href": "https://clang.llvm.org/", "title": "clang.llvm.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Clang", "title": "Clang", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "18.1.8", "date": "2024-01-01" }]
      },
      "pl+clean": {
        "name": "Clean",
        "description": "Clean is a general-purpose purely functional programming language. Originally called the Concurrent Clean System or the Clean System, it has been developed by a group of researchers from the Radboud University in Nijmegen since 1987. Although development of the language has slowed, some researchers are still working in the language. In 2018, a spin-off company was founded that uses Clean.",
        "firstAppeared": "1987-01-01",
        "extensions": [".abc", ".dcl", ".icl"],
        "websites": [
          { "href": "http://clean.cs.ru.nl/", "title": "clean.cs.ru.nl", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Clean_(programming_language)", "title": "Clean", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.1", "date": "2022-01-01" }],
        "images": [{ "kind": "logo", "title": "Clean", "url": "/images/plangs/c/clean/logo.png" }]
      },
      "pl+clojure": {
        "name": "Clojure",
        "description": "Clojure (/ˈkloʊʒər/, like closure) is a dynamic and functional dialect of the Lisp programming language on the Java platform.",
        "firstAppeared": "2007-01-01",
        "extensions": [".clj", ".cljc", ".cljd", ".cljr", ".cljs", ".edn"],
        "websites": [
          { "href": "https://clojure.org/", "title": "clojure.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Clojure_(programming_language)", "title": "Clojure", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.11.2", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Clojure", "url": "/images/plangs/c/clojure/logo.png" }]
      },
      "pl+clozure": {
        "name": "Clozure CL",
        "description": "Clozure CL (CCL) is a Common Lisp implementation. It implements the full ANSI Common Lisp standard with several extensions (CLOS MOP, threads, CLOS conditions, CLOS streams, ...). It contains a command line development environment, an experimental integrated development environment (IDE) for Mac OS X using the Hemlock editor, and can also be used with SLIME (a Common Lisp development environment for GNU Emacs).  Clozure CL is open source and the project is hosted by Clozure Associates.",
        "websites": [
          { "href": "http://ccl.clozure.com/", "title": "ccl.clozure.com", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Clozure_CL", "title": "Clozure CL", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.12.2", "date": "2023-01-01" }]
      },
      "pl+clu": {
        "name": "CLU",
        "description": "CLU is a  programming language created at the Massachusetts Institute of Technology (MIT) by Barbara Liskov and her students starting in 1973. While it did not find extensive use, it introduced many features that are used widely now, and is seen as a step in the development of object-oriented programming (OOP).",
        "firstAppeared": "1975-01-01",
        "websites": [
          { "href": "http://pmg.csail.mit.edu/CLU.html", "title": "pmg.csail.mit.edu/CLU.html", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/CLU_(programming_language)", "title": "CLU", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.5", "date": "1989-01-01" }]
      },
      "pl+cobra": {
        "name": "Cobra",
        "description": "Cobra is a discontinued general-purpose, object-oriented programming language. Cobra is designed by Charles Esterbrook, and runs on the Microsoft .NET and Mono platforms. It is strongly influenced by Python, C#, Eiffel, Objective-C, and other programming languages. It supports both static and dynamic typing. It has support for unit tests and contracts. It has lambda expressions, closures, list comprehensions, and generators.",
        "firstAppeared": "2006-01-01",
        "extensions": [".cobra"],
        "websites": [
          { "href": "http://cobra-language.com/", "title": "cobra-language.com", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Cobra_(programming_language)", "title": "Cobra", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "0.9.6", "date": "2013-01-01" }]
      },
      "pl+codemonkey": {
        "name": "CodeMonkey",
        "description": "CodeMonkey is an educational computer coding environment that allows beginners to learn computer programming concepts and languages. CodeMonkey is intended for students ages 6–14. Students learn text-based coding on languages like  Python, Blockly and CoffeeScript, as well as learning the fundamentals of computer science and math.\nThe software was first released in 2014, and was originally developed by Jonathan Schor, Ido Schor and Yishai Pinchover, supported by the Center for Educational Technology in Israel.",
        "websites": [
          { "href": "https://www.codemonkey.com/", "title": "www.codemonkey.com", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/CodeMonkey_(software)", "title": "CodeMonkey", "kind": "wikipedia" }
        ]
      },
      "pl+coffeescript": {
        "name": "CoffeeScript",
        "description": "CoffeeScript is a programming language that compiles to JavaScript. It adds syntactic sugar inspired by Ruby, Python, and Haskell in an effort to enhance JavaScript's brevity and readability. Specific additional features include list comprehension and destructuring assignment.",
        "firstAppeared": "2009-01-01",
        "extensions": [".coffee", ".litcoffee[]"],
        "websites": [
          { "href": "https://coffeescript.org/", "title": "coffeescript.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/CoffeeScript", "title": "CoffeeScript", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2.7.0", "date": "2022-01-01" }]
      },
      "pl+coldfusion": {
        "name": "Adobe ColdFusion",
        "description": "Adobe ColdFusion is a commercial rapid web-application development computing platform created by J. J. Allaire in 1995. (The programming language used with that platform is also commonly called ColdFusion, though is more accurately known as CFML.) ColdFusion was originally designed to make it easier to connect simple HTML pages to a database. By version 2 (1996) it had become a full platform that included an IDE in addition to a full scripting language.",
        "websites": [
          { "href": "https://adobe.com/products/coldfusion-family.html", "title": "adobe.com/products/coldfusion-family.html", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/ColdFusion", "title": "Adobe ColdFusion", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "logo", "title": "Adobe ColdFusion", "url": "/images/plangs/c/coldfusion/logo.png" }]
      },
      "pl+colorforth": {
        "name": "colorForth",
        "description": "colorForth is a programming language from the Forth language's creator, Charles H. Moore, developed in the 1990s. The language combines elements of Moore's earlier Forth systems and adds color as a way of indicating how words should be interpreted. Program text is tokenized as it is edited; the compiler operates on the tokenized form, so there is less work at compile time.",
        "firstAppeared": "1990-01-01",
        "websites": [
          { "href": "https://colorforth.github.io/", "title": "colorforth.github.io", "kind": "repository" },
          { "href": "https://en.wikipedia.org/wiki/ColorForth", "title": "colorForth", "kind": "wikipedia" }
        ]
      },
      "pl+common-lisp": {
        "name": "Common Lisp",
        "description": "Common Lisp (CL) is a dialect of the Lisp programming language, published in American National Standards Institute (ANSI) standard document ANSI INCITS 226-1994 (S2018) (formerly X3.226-1994 (R1999)). The Common Lisp HyperSpec, a hyperlinked HTML version, has been derived from the ANSI Common Lisp standard.",
        "firstAppeared": "1984-01-01",
        "extensions": [".cl", ".fasl", ".l", ".lisp", ".lsp"],
        "websites": [
          { "href": "http://common-lisp.net/", "title": "common-lisp.net", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Common_Lisp", "title": "Common Lisp", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "logo", "title": "Common Lisp", "url": "/images/plangs/c/common-lisp/logo.png" }]
      },
      "pl+coq": {
        "name": "Coq",
        "description": "Coq is an interactive theorem prover first released in 1989. It allows for expressing mathematical assertions, mechanically checks proofs of these assertions, helps find formal proofs, and extracts a certified program from the constructive proof of its formal specification. Coq works within the theory of the calculus of inductive constructions, a derivative of the calculus of constructions. Coq is not an automated theorem prover but includes automatic theorem proving tactics (procedures) and various decision procedures.",
        "websites": [
          { "href": "https://coq.inria.fr/", "title": "coq.inria.fr", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Coq_(software)", "title": "Coq", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "4.10", "date": "1989-01-01" }, { "version": "8.19.2", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Coq", "url": "/images/plangs/c/coq/logo.png" }]
      },
      "pl+cpython": {
        "name": "CPython",
        "description": "CPython is the reference implementation of the Python programming language. Written in C and Python, CPython is the default and most widely used implementation of the Python language.",
        "websites": [
          { "href": "https://www.python.org/", "title": "www.python.org", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/CPython", "title": "CPython", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.12.0", "date": "2023-01-01" }]
      },
      "pl+crystal": {
        "name": "Crystal",
        "description": "Crystal is a high-level general-purpose, object-oriented programming language, designed and developed by Ary Borenszweig, Juan Wajnerman, Brian Cardiff and more than 400 contributors. With syntax inspired by the language Ruby, it is a compiled language with static type-checking, but specifying the types of variables or method arguments is generally unneeded. Types are resolved by an advanced global type inference algorithm. Crystal \nis currently in active development. It is released as free and open-source software under the Apache License version 2.0.",
        "firstAppeared": "2014-01-01",
        "extensions": [".cr"],
        "websites": [
          { "href": "https://crystal-lang.org/", "title": "crystal-lang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Crystal_(programming_language)", "title": "Crystal", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.13.2", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Crystal", "url": "/images/plangs/c/crystal/logo.png" }]
      },
      "pl+csound": {
        "name": "Csound",
        "description": "Csound is a domain-specific computer programming language for audio programming. It is called Csound because it is written in C, as opposed to some of its predecessors.",
        "websites": [
          { "href": "http://csound.com/", "title": "csound.com", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Csound", "title": "Csound", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "6.18.1", "date": "2022-01-01" }]
      },
      "pl+curry": {
        "name": "Curry",
        "description": "Curry is a declarative programming language, an implementation of the functional logic programming paradigm, and based on the Haskell language. It merges elements of functional and logic programming, including constraint programming integration.",
        "firstAppeared": "1995-01-01",
        "websites": [
          {
            "href": "http://curry.pages.ps.informatik.uni-kiel.de/curry-lang.org",
            "title": "curry.pages.ps.informatik.uni-kiel.de/curry-lang.org",
            "kind": "homepage"
          },
          { "href": "https://en.wikipedia.org/wiki/Curry_(programming_language)", "title": "Curry", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.6.0", "date": "2023-01-01" }]
      },
      "pl+cython": {
        "name": "Cython",
        "description": "Cython (/ˈsaɪθɒn/) is a superset of the programming language Python, which allows developers to write Python code (with optional, C-inspired syntax extensions) that yields performance comparable to that of C.",
        "firstAppeared": "2007-01-01",
        "extensions": [".pxd", ".pxi", ".pyx"],
        "websites": [
          { "href": "https://cython.org/", "title": "cython.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Cython", "title": "Cython", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.0.11", "date": "2024-01-01" }, { "version": "3.0.0", "date": "2023-01-01" }],
        "images": [{ "kind": "logo", "title": "Cython", "url": "/images/plangs/c/cython/logo.png" }]
      },
      "pl+d": {
        "name": "D",
        "description": "D, also known as dlang, is a multi-paradigm system programming language created by Walter Bright at Digital Mars and released in 2001. Andrei Alexandrescu joined the design and development effort in 2007. Though it originated as a re-engineering of C++, D is now a very different language. As it has developed, it has drawn inspiration from other high-level programming languages. Notably, it has been influenced by Java, Python, Ruby, C#, and Eiffel.",
        "firstAppeared": "2001-01-01",
        "extensions": [".d"],
        "websites": [
          { "href": "http://dlang.org/", "title": "dlang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/D_(programming_language)", "title": "D", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2.109.1", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "D", "url": "/images/plangs/d/d/logo.png" }]
      },
      "pl+dart": {
        "name": "Dart",
        "description": "Dart is a programming language designed by Lars Bak and Kasper Lund and developed by Google. It can be used to develop web and mobile apps as well as server and desktop applications.",
        "firstAppeared": "2011-01-01",
        "extensions": [".dart"],
        "websites": [
          { "href": "https://dart.dev/", "title": "dart.dev", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Dart_(programming_language)", "title": "Dart", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.5.2", "date": "2024-01-01" }]
      },
      "pl+datalog": {
        "name": "Datalog",
        "description": "Datalog is a declarative logic programming language.  While it is syntactically a subset of Prolog, Datalog generally uses a bottom-up rather than top-down evaluation model.  This difference yields significantly different behavior and properties from Prolog.  It is often used as a query language for deductive databases. Datalog has been applied to problems in data integration, networking, program analysis, and more.",
        "firstAppeared": "1977-01-01",
        "websites": [{ "href": "https://en.wikipedia.org/wiki/Datalog", "title": "Datalog", "kind": "wikipedia" }]
      },
      "pl+datomic": {
        "name": "Datomic",
        "description": "Datomic is a distributed database and implementation of Datalog. It has ACID transactions, joins, and a logical query language, Datalog. A distinguishing feature of Datomic is that time is a basic feature of data entities.",
        "websites": [
          { "href": "http://datomic.com/", "title": "datomic.com", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Datomic", "title": "Datomic", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.0.7180" }]
      },
      "pl+delphi": {
        "name": "Delphi",
        "description": "Delphi is a general-purpose programming language and a software product that uses the Delphi dialect of the Object Pascal programming language and provides an integrated development environment (IDE) for rapid application development of desktop, mobile, web, and console software, currently developed and maintained by Embarcadero Technologies.",
        "websites": [
          { "href": "https://www.embarcadero.com/products/delphi", "title": "www.embarcadero.com/products/delphi", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Delphi_(software)", "title": "Delphi", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "12.1", "date": "2024-01-01" }],
        "images": [{ "kind": "screenshot", "title": "Delphi", "url": "/images/plangs/d/delphi/screenshot.png" }]
      },
      "pl+dylan": {
        "name": "Dylan",
        "description": "Dylan is a multi-paradigm programming language that includes support for functional and object-oriented programming (OOP), and is dynamic and reflective while providing a programming model designed to support generating efficient machine code, including fine-grained control over dynamic and static behaviors. It was created in the early 1990s by a group led by Apple Computer.",
        "firstAppeared": "1992-01-01",
        "websites": [
          { "href": "https://opendylan.org/", "title": "opendylan.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Dylan_(programming_language)", "title": "Dylan", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2022.1", "date": "2022-01-01" }],
        "images": [{ "kind": "logo", "title": "Dylan", "url": "/images/plangs/d/dylan/logo.png" }]
      },
      "pl+ecmascript": {
        "name": "ECMAScript",
        "description": "ECMAScript (/ˈɛkməskrɪpt/; ES) is a standard for scripting languages, including JavaScript, JScript, and ActionScript. It is best known as a JavaScript standard intended to ensure the interoperability of web pages across different web browsers. It is standardized by Ecma International in the document ECMA-262.",
        "firstAppeared": "1997-01-01",
        "websites": [
          {
            "href": "https://www.ecma-international.org/publications-and-standards/standards/ecma-262/",
            "title": "www.ecma-international.org/publications-and-standards/standards/ecma-262/",
            "kind": "other"
          },
          { "href": "https://en.wikipedia.org/wiki/ECMAScript", "title": "ECMAScript", "kind": "wikipedia" }
        ]
      },
      "pl+eiffel": {
        "name": "Eiffel",
        "description": "Eiffel is an object-oriented programming language designed by Bertrand Meyer (an object-orientation proponent and author of Object-Oriented Software Construction) and Eiffel Software. Meyer conceived the language in 1985 with the goal of increasing the reliability of commercial software development; the first version becoming available in 1986. In 2005, Eiffel became an ISO-standardized language.",
        "firstAppeared": "1986-01-01",
        "extensions": [".e"],
        "websites": [
          { "href": "http://eiffel.org/", "title": "eiffel.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Eiffel_(programming_language)", "title": "Eiffel", "kind": "wikipedia" }
        ]
      },
      "pl+elixir": {
        "name": "Elixir",
        "description": "Elixir is a functional, concurrent, high-level general-purpose programming language that runs on the BEAM virtual machine, which is also used to implement the Erlang programming language. Elixir builds on top of Erlang and shares the same abstractions for building distributed, fault-tolerant applications. Elixir also provides tooling and an extensible design. The latter is supported by compile-time metaprogramming with macros and polymorphism via protocols.",
        "firstAppeared": "2012-01-01",
        "extensions": [".ex", ".exs"],
        "websites": [
          { "href": "https://elixir-lang.org/", "title": "elixir-lang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Elixir_(programming_language)", "title": "Elixir", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.17.2", "date": "2024-01-01" }]
      },
      "pl+emacs-lisp": {
        "name": "Emacs Lisp",
        "description": "Emacs Lisp is a  Lisp dialect made for Emacs.\nIt is used for implementing most of the editing functionality built into Emacs, the remainder being written in C, as is the Lisp interpreter.",
        "firstAppeared": "1985-01-01",
        "extensions": [".el", ".elc", ".eln"],
        "websites": [
          { "href": "http://www.gnu.org/software/emacs", "title": "www.gnu.org/software/emacs", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Emacs_Lisp", "title": "Emacs Lisp", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "29.4", "date": "2024-01-01" }],
        "images": [{ "kind": "other", "title": "Emacs Lisp", "url": "/images/plangs/e/emacs-lisp/other.png" }]
      },
      "pl+erlang": {
        "name": "Erlang",
        "description": "Erlang (/ˈɜːrlæŋ/ UR-lang) is a general-purpose, concurrent, functional high-level programming language, and a garbage-collected runtime system. The term Erlang is used interchangeably with Erlang/OTP, or Open Telecom Platform (OTP), which consists of the Erlang runtime system, several ready-to-use components (OTP) mainly written in Erlang, and a set of design principles for Erlang programs.",
        "firstAppeared": "1986-01-01",
        "extensions": [".erl", ".hrl"],
        "websites": [
          { "href": "https://www.erlang.org/", "title": "www.erlang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Erlang_(programming_language)", "title": "Erlang", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "27.0.1", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Erlang", "url": "/images/plangs/e/erlang/logo.png" }]
      },
      "pl+euphoria": {
        "name": "Euphoria",
        "description": "Euphoria is a programming language created by Robert Craig of Rapid Deployment Software in Toronto, Ontario, Canada. Initially developed (though not publicly released) on the Atari ST, the first commercial release was for MS-DOS as proprietary software. In 2006, with the release of version 3, Euphoria became open-source software. The openEuphoria Group continues to administer and develop the project.  In December 2010, the openEuphoria Group released version 4 of openEuphoria along with a new identity and mascot for the project. OpenEuphoria is currently available for Windows, Linux, macOS and three flavors of *BSD.",
        "firstAppeared": "1993-01-01",
        "extensions": [".e", ".edb", ".ex", ".exw"],
        "websites": [
          { "href": "http://openeuphoria.org/", "title": "openeuphoria.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Euphoria_(programming_language)", "title": "Euphoria", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "4.1.0", "date": "2021-01-01" }]
      },
      "pl+extempore": {
        "name": "Extempore",
        "description": "Extempore is a live coding environment focused on real-time audiovisual software development. It is designed to accommodate the demands of cyber-physical computing. Extempore consists of two integrated languages, Scheme (with extensions) and Extempore Language. It uses the LLVM cross-language compiler to achieve performant digital signal processing and related low-level features, on-the-fly.",
        "firstAppeared": "2011-01-01",
        "websites": [
          { "href": "https://github.com/digego/extempore", "title": "github.com/digego/extempore", "kind": "repository" },
          { "href": "https://en.wikipedia.org/wiki/Extempore_(software)", "title": "Extempore", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "0.8.9", "date": "2021-01-01" }]
      },
      "pl+f-sharp": {
        "name": "F#",
        "description": "F# (pronounced F sharp) is a general-purpose, high-level, strongly typed, multi-paradigm programming language that encompasses functional, imperative, and object-oriented programming methods. It is most often used as a cross-platform Common Language Infrastructure (CLI) language on .NET, but can also generate JavaScript and graphics processing unit (GPU) code.",
        "firstAppeared": "2005-01-01",
        "extensions": [".fs", ".fsi", ".fsscript", ".fsx"],
        "websites": [
          { "href": "https://fsharp.org/", "title": "fsharp.org", "kind": "other" },
          { "href": "https://learn.microsoft.com/en-us/dotnet/fsharp", "title": "learn.microsoft.com/en-us/dotnet/fsharp", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/F_Sharp_programming_language", "title": "F#", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "8.0.0", "date": "2023-01-01" }],
        "images": [{ "kind": "logo", "title": "F#", "url": "/images/plangs/f/f-sharp/logo.png" }]
      },
      "pl+factor": {
        "name": "Factor",
        "description": "Factor is a stack-oriented programming language created by Slava Pestov. Factor is dynamically typed and has automatic memory management, as well as powerful metaprogramming features. The language has a single implementation featuring a self-hosted optimizing compiler and an interactive development environment. The Factor distribution includes a large standard library.",
        "firstAppeared": "2003-01-01",
        "websites": [
          { "href": "http://factorcode.org/", "title": "factorcode.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Factor_(programming_language)", "title": "Factor", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "0.99", "date": "2023-01-01" }],
        "images": [{ "kind": "logo", "title": "Factor", "url": "/images/plangs/f/factor/logo.png" }]
      },
      "pl+fantom": {
        "name": "Fantom",
        "description": "Fantom is a general-purpose object-oriented programming language, created by Brian Frank and Andy Frank. It runs on the Java Runtime Environment (JRE), JavaScript, and the .NET Common Language Runtime (CLR) (.NET support is considered \"prototype\" status). Its stated goal is to provide a standard library API. Fantom uses a curly brace syntax, supports functional programming through closures and concurrency through the Actor model, and blends aspects of both static and dynamic typing.",
        "firstAppeared": "2005-01-01",
        "extensions": [".fan", ".fwt", ".pod"],
        "websites": [
          { "href": "http://www.fantom.org/", "title": "www.fantom.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Fantom_(programming_language)", "title": "Fantom", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.0.79", "date": "2023-01-01" }]
      },
      "pl+faust": {
        "name": "FAUST",
        "description": "FAUST (Functional AUdio STream) is a domain-specific purely functional programming language for implementing signal processing algorithms in the form of libraries, audio plug-ins, or standalone applications. A FAUST program denotes a signal processor: a mathematical function that is applied to some input signal and then fed out.",
        "websites": [
          { "href": "http://faust.grame.fr/", "title": "faust.grame.fr", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/FAUST_(programming_language)", "title": "FAUST", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2.60.3", "date": "2023-01-01" }]
      },
      "pl+flix": {
        "name": "Flix",
        "description": "Flix is a functional, imperative, and logic programming language developed at Aarhus University, with funding from the Independent Research Fund Denmark, and by a community of open source contributors. The Flix language supports algebraic data types, pattern matching, parametric polymorphism, currying, higher-order functions, extensible records, channel and process-based concurrency, and tail call elimination. Two notable features of Flix are its type and effect system and its support for first-class Datalog constraints.",
        "extensions": [".flix"],
        "websites": [
          { "href": "https://flix.dev/", "title": "flix.dev", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Flix_(programming_language)", "title": "Flix", "kind": "wikipedia" }
        ]
      },
      "pl+flutter": {
        "name": "Flutter",
        "description": "Flutter is an open-source UI software development kit created by Google. It can be used to develop cross platform applications from a single codebase for the web, Fuchsia, Android, iOS, Linux, macOS, and Windows. First described in 2015, Flutter was released in May 2017. Flutter is used internally by Google in apps such as Google Pay and Google Earth as well as other software developers including ByteDance and Alibaba.",
        "websites": [
          { "href": "https://flutter.dev/", "title": "flutter.dev", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Flutter_(software)", "title": "Flutter", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "0.0.6", "date": "2017-01-01" }, { "version": "3.24.1", "date": "2024-01-01" }]
      },
      "pl+forth": {
        "name": "Forth",
        "description": "Forth is a stack-oriented programming language and interactive integrated development environment designed by Charles H. \"Chuck\" Moore and first used by other programmers in 1970. Although not an acronym, the language's name in its early years was often spelled in all capital letters as FORTH. The FORTH-79 and FORTH-83 implementations, which were not written by Moore, became de facto standards, and an official technical standard of the language was published in 1994 as ANS Forth. A wide range of Forth derivatives existed before and after ANS Forth. The free and open-source software Gforth implementation is actively maintained, as are several commercially supported systems.",
        "firstAppeared": "1970-01-01",
        "extensions": [".4th", ".f", ".forth[]", ".fs", ".fth"],
        "websites": [
          { "href": "https://forth-standard.org/", "title": "forth-standard.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Forth_(programming_language)", "title": "Forth", "kind": "wikipedia" }
        ]
      },
      "pl+fortran": {
        "name": "Fortran",
        "description": "Fortran (/ˈfɔːrtræn/; formerly FORTRAN) is a third generation, compiled, imperative programming language that is especially suited to numeric computation and scientific computing.",
        "firstAppeared": "1957-01-01",
        "extensions": [".f", ".f90", ".for"],
        "websites": [
          { "href": "https://fortran-lang.org/", "title": "fortran-lang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Fortran", "title": "Fortran", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "other", "title": "Fortran", "url": "/images/plangs/f/fortran/other.jpg" }]
      },
      "pl+fortress": {
        "name": "Fortress",
        "description": "Fortress is a discontinued experimental programming language for high-performance computing, created by Sun Microsystems with funding from DARPA's High Productivity Computing Systems project. One of the language designers was Guy L. Steele Jr., whose previous work includes Scheme, Common Lisp, and Java.",
        "firstAppeared": "2006-01-01",
        "websites": [
          { "href": "https://github.com/stokito/fortress-lang", "title": "github.com/stokito/fortress-lang", "kind": "repository" },
          { "href": "https://en.wikipedia.org/wiki/Fortress_(programming_language)", "title": "Fortress", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.0" }]
      },
      "pl+fp": {
        "name": "FP",
        "description": "FP (short for functional programming) is a programming language created by John Backus to support the function-level programming paradigm. It allows building programs from a set of generally useful primitives and avoiding named variables (a style also called tacit programming or \"point free\"). It was heavily influenced by APL developed by Kenneth E. Iverson in the early 1960s.",
        "firstAppeared": "1977-01-01",
        "websites": [{ "href": "https://en.wikipedia.org/wiki/FP_(programming_language)", "title": "FP", "kind": "wikipedia" }]
      },
      "pl+free-pascal": {
        "name": "Free Pascal",
        "description": "Free Pascal Compiler (FPC) is a compiler for the closely related programming-language dialects Pascal and Object Pascal. It is free software released under the GNU General Public License, with exception clauses that allow static linking against its runtime libraries and packages for any purpose in combination with any other software license.",
        "websites": [
          { "href": "http://www.freepascal.org/", "title": "www.freepascal.org", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Free_Pascal", "title": "Free Pascal", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.2.2", "date": "2021-01-01" }, { "version": "3.3.1" }],
        "images": [{ "kind": "screenshot", "title": "Free Pascal", "url": "/images/plangs/f/free-pascal/screenshot.png" }]
      },
      "pl+freebasic": {
        "name": "FreeBASIC",
        "description": "FreeBASIC is a free and open source multiplatform compiler and programming language based on BASIC licensed under the GNU GPL  for Microsoft Windows, protected-mode MS-DOS (DOS extender), Linux, FreeBSD and Xbox.  The Xbox version is no longer maintained.",
        "firstAppeared": "2004-01-01",
        "websites": [
          { "href": "http://www.freebasic.net/", "title": "www.freebasic.net", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/FreeBASIC", "title": "FreeBASIC", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.10.1", "date": "2023-01-01" }],
        "images": [{ "kind": "logo", "title": "FreeBASIC", "url": "/images/plangs/f/freebasic/logo.gif" }]
      },
      "pl+frink": {
        "name": "Frink",
        "description": "Frink is a computer programming language. It is, according to creator of the language, \"designed to make physical calculations simple, to help ensure that answers come out right, and to make a tool that's really useful in the real world. It tracks units of measure (feet, meters, kilograms, watts, etc.) through all calculations, allowing you to mix units of measure transparently, and helps you easily verify that your answers make sense.\"",
        "firstAppeared": "2001-01-01",
        "extensions": [".frink"],
        "websites": [
          { "href": "https://frinklang.org/", "title": "frinklang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Frink_(programming_language)", "title": "Frink", "kind": "wikipedia" }
        ]
      },
      "pl+futhark": {
        "name": "Futhark",
        "description": "Futhark is a multi-paradigm, high-level, functional, data parallel, array programming language. It is a dialect of the language ML, originally developed at UCPH Department of Computer Science (DIKU) as part of the HIPERFIT project. It focuses on enabling data parallel programs written in a functional style to be executed with high performance on massively parallel hardware, especially graphics processing units (GPUs). Futhark is strongly inspired by NESL, and its implementation uses a variant of the flattening transformation, but imposes constraints on how parallelism can be expressed in order to enable more aggressive compiler optimisations. In particular, irregular nested data parallelism is not supported. It is free and open-source software released under an ISC license.",
        "firstAppeared": "2014-01-01",
        "websites": [
          { "href": "http://futhark-lang.org/", "title": "futhark-lang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Futhark_(programming_language)", "title": "Futhark", "kind": "wikipedia" }
        ]
      },
      "pl+g95": {
        "name": "G95",
        "description": "G95 is a free, portable, open-source Fortran 95 compiler. It implements the Fortran 95 standard, part of the Fortran 2003 standard, as well as some old and new extensions including features for the Fortran 2008 standard like coarray Fortran. It also supports the F programming language subset.",
        "websites": [
          { "href": "http://g95.org/", "title": "g95.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/G95", "title": "G95", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "0.93", "date": "2012-01-01" }]
      },
      "pl+gambit": {
        "name": "Gambit",
        "description": "Gambit, also called Gambit-C, is a programming language, a variant of the language family Lisp, and its variants named Scheme. The Gambit implementation consists of a Scheme interpreter, and a compiler which compiles Scheme into the language C, which makes it cross-platform software. It conforms to the standards RRS, RRS, and Institute of Electrical and Electronics Engineers (IEEE), and to several Scheme Requests for Implementations (SRFIs). Gambit was released first in 1988, and Gambit-C (Gambit with a C backend) was released first in 1994. They are free and open-source software released under a GNU Lesser General Public License (LGPL) 2.1, and Apache License 2.0.",
        "firstAppeared": "1988-01-01",
        "websites": [
          { "href": "http://gambitscheme.org/", "title": "gambitscheme.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Gambit_(scheme_implementation)", "title": "Gambit", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "4.9.5", "date": "2023-01-01" }]
      },
      "pl+gdscript": {
        "name": "Godot Engine",
        "description": "Godot (/ˈɡɒdoʊ/) is a cross-platform, free and open-source game engine released under the permissive MIT license. It was initially developed in Buenos Aires by Argentine software developers Juan Linietsky and Ariel Manzur for several companies in Latin America prior to its public release in 2014. The development environment runs on many platforms, and can export to several more. It is designed to create both 2D and 3D games targeting PC, mobile, and web platforms and can also be used to develop non-game software, including editors.",
        "websites": [
          { "href": "https://godotengine.org/", "title": "godotengine.org", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/GDScript", "title": "Godot Engine", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "4.3", "date": "2024-01-01" }],
        "images": [{ "kind": "other", "title": "Godot Engine", "url": "/images/plangs/g/gdscript/other.png" }]
      },
      "pl+gforth": {
        "name": "Gforth",
        "description": "Gforth is a free and portable implementation of the Forth programming language for Unix-like systems, Microsoft Windows, and other operating systems. A primary goal of Gforth is to adhere to the ANS Forth standard. Gforth is free software as part of the GNU Project.",
        "websites": [
          { "href": "http://gnu.org/s/gforth/", "title": "gnu.org/s/gforth/", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Gforth", "title": "Gforth", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "0.7.3", "date": "2014-01-01" }, { "version": "0.7.9", "date": "2020-01-01" }],
        "images": [{ "kind": "logo", "title": "Gforth", "url": "/images/plangs/g/gforth/logo.png" }]
      },
      "pl+gleam": {
        "name": "Gleam",
        "description": "Gleam is a general-purpose, concurrent, functional high-level programming language that compiles to Erlang or JavaScript source code.",
        "firstAppeared": "2016-01-01",
        "extensions": [".gleam"],
        "websites": [
          { "href": "https://gleam.run/", "title": "gleam.run", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Gleam_(programming_language)", "title": "Gleam", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.4.1", "date": "2024-01-01" }],
        "images": [{ "kind": "other", "title": "Gleam", "url": "/images/plangs/g/gleam/other.png" }]
      },
      "pl+gnat": {
        "name": "GNAT",
        "description": "GNAT is a free-software compiler for the Ada programming language which forms part of the GNU Compiler Collection (GCC). It supports all versions of the language, i.e. Ada 2012, Ada 2005, Ada 95 and Ada 83. Originally its name was an acronym that stood for GNU NYU Ada Translator, but that name no longer applies. The front-end and run-time are written in Ada.",
        "websites": [
          { "href": "http://www.getadanow.com/", "title": "www.getadanow.com", "kind": "other" },
          { "href": "http://www.adacore.com/gnatpro/", "title": "www.adacore.com/gnatpro/", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/GNAT", "title": "GNAT", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "14.1", "date": "2024-05-07" }],
        "images": [{ "kind": "other", "title": "GNAT", "url": "/images/plangs/g/gnat/other.png" }]
      },
      "pl+go": {
        "name": "Go",
        "description": "Go is a statically typed, compiled high-level programming language designed at Google by Robert Griesemer, Rob Pike, and Ken Thompson. It is syntactically similar to C, but also has memory safety, garbage collection, structural typing, and CSP-style concurrency. It is often referred to as Golang because of its former domain name, golang.org, but its proper name is Go.",
        "firstAppeared": "2009-01-01",
        "extensions": [".go"],
        "websites": [
          { "href": "https://go.dev/", "title": "go.dev", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Go_(programming_language)", "title": "Go", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.23.0", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Go", "url": "/images/plangs/g/go/logo.png" }]
      },
      "pl+graalvm": {
        "name": "GraalVM",
        "description": "GraalVM is a Java Development Kit (JDK) written in Java. The open-source distribution of GraalVM is based on OpenJDK, and the enterprise distribution is based on Oracle JDK. As well as just-in-time (JIT) compilation, GraalVM can compile a Java application ahead of time. This allows for faster initialization, greater runtime performance, and decreased resource consumption, but the resulting executable can only run on the platform it was compiled for.",
        "websites": [
          { "href": "https://www.graalvm.org/", "title": "www.graalvm.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/GraalVM#Language_and_Runtime_Support", "title": "GraalVM", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "logo", "title": "GraalVM", "url": "/images/plangs/g/graalvm/logo.png" }]
      },
      "pl+gremlin": {
        "name": "Gremlin",
        "description": "Gremlin is a graph traversal language and virtual machine developed by Apache TinkerPop of the Apache Software Foundation. Gremlin works for both OLTP-based graph databases as well as OLAP-based graph processors. Gremlin's automata and functional language foundation enable Gremlin to naturally support: imperative and declarative querying; host language agnosticism; user-defined domain specific languages; an extensible compiler/optimizer, single- and multi-machine execution models; hybrid depth- and breadth-first evaluation with Turing completeness.",
        "firstAppeared": "2009-01-01",
        "websites": [
          { "href": "https://tinkerpop.apache.org/", "title": "tinkerpop.apache.org", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Gremlin_(programming_language)", "title": "Gremlin", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.7.0", "date": "2023-01-01" }],
        "images": [{ "kind": "other", "title": "Gremlin", "url": "/images/plangs/g/gremlin/other.png" }]
      },
      "pl+groovy": {
        "name": "Groovy",
        "description": "Apache Groovy is a Java-syntax-compatible object-oriented programming language for the Java platform. It is both a static and dynamic language with features similar to those of Python, Ruby, and Smalltalk. It can be used as both a programming language and a scripting language for the Java Platform, is compiled to Java virtual machine (JVM) bytecode, and interoperates seamlessly with other Java code and libraries. Groovy uses a curly-bracket syntax similar to Java's. Groovy supports closures, multiline strings, and expressions embedded in strings. Much of Groovy's power lies in its AST transformations, triggered through annotations.",
        "firstAppeared": "2003-01-01",
        "extensions": [".groovy", ".gsh", ".gvy", ".gy"],
        "websites": [
          { "href": "https://groovy-lang.org/", "title": "groovy-lang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Groovy_(programming_language)", "title": "Groovy", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "4.0.22", "date": "2024-01-01" }, { "version": "4.0.0", "date": "2021-01-01" }],
        "images": [{ "kind": "logo", "title": "Groovy", "url": "/images/plangs/g/groovy/logo.png" }]
      },
      "pl+hack": {
        "name": "Hack",
        "description": "Hack is a programming language for the HipHop Virtual Machine (HHVM), created by Meta (formerly Facebook) as a dialect of PHP. The language implementation is open-source, licensed under the MIT License.",
        "firstAppeared": "2014-01-01",
        "websites": [
          { "href": "https://hacklang.org/", "title": "hacklang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Hack_(programming_language)", "title": "Hack", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "4.172", "date": "2022-01-01" }]
      },
      "pl+hackety-hack": {
        "name": "Hackety Hack",
        "description": "Hackety Hack is an open source application that teaches individuals how to create software. It combines an IDE with an extensive Lessons system. The cross-platform desktop application also has integration with the website, where \"Hackers\" can share what they've learned, ask questions, and submit feedback.",
        "websites": [
          { "href": "https://github.com/hacketyhack/hacketyhack", "title": "github.com/hacketyhack/hacketyhack", "kind": "repository" },
          { "href": "https://en.wikipedia.org/wiki/Hackety_Hack", "title": "Hackety Hack", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.0", "date": "2010-01-01" }],
        "images": [{ "kind": "other", "title": "Hackety Hack", "url": "/images/plangs/h/hackety-hack/other.png" }]
      },
      "pl+haskell": {
        "name": "Haskell",
        "description": "Haskell (/ˈhæskəl/) is a general-purpose, statically-typed, purely functional programming language with type inference and lazy evaluation. Designed for teaching, research, and industrial applications, Haskell has pioneered a number of programming language features such as type classes, which enable type-safe operator overloading, and monadic input/output (IO). It is named after logician Haskell Curry. Haskell's main implementation is the Glasgow Haskell Compiler (GHC).",
        "firstAppeared": "1990-01-01",
        "extensions": [".hs", ".lhs"],
        "websites": [
          { "href": "http://haskell.org/", "title": "haskell.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Haskell_(programming_language)", "title": "Haskell", "kind": "wikipedia" }
        ]
      },
      "pl+haxe": {
        "name": "Haxe",
        "description": "Haxe is a high-level cross-platform programming language and compiler that can produce applications and source code for many different computing platforms from one code-base. It is free and open-source software, released under an MIT License. The compiler, written in OCaml, is released under the GNU General Public License (GPL) version 2.",
        "firstAppeared": "2005-01-01",
        "extensions": [".hx", ".hxml"],
        "websites": [
          { "href": "https://haxe.org/", "title": "haxe.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Haxe", "title": "Haxe", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "4.3.6", "date": "2024-01-01" }]
      },
      "pl+hhvm": {
        "name": "HHVM",
        "description": "HipHop Virtual Machine (HHVM) is an open-source virtual machine based on just-in-time (JIT) compilation that serves as an execution engine for the Hack programming language. By using the principle of JIT compilation, Hack code is first transformed into intermediate HipHop bytecode (HHBC), which is then dynamically translated into x86-64 machine code, optimized, and natively executed.  This contrasts with PHP's usual interpreted execution, in which the Zend Engine transforms PHP source code into opcodes that serve as a form of bytecode, and executes the opcodes directly on the Zend Engine's virtual CPU.",
        "websites": [
          { "href": "https://hhvm.com/", "title": "hhvm.com", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/HHVM", "title": "HHVM", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.15.0", "date": "2016-01-01" }]
      },
      "pl+high-level-assembly": {
        "name": "High Level Assembly",
        "description": "High-Level Assembly (HLA) is a language developed by Randall Hyde that allows the use of higher-level language constructs to aid both beginners and advanced assembly developers. It supports advanced data types and object-oriented programming. It uses a syntax loosely based on several high-level programming languages (HLLs), such as Pascal, Ada, Modula-2, and C++, to allow the creation of readable assembly language programs, and to allow HLL programmers to learn HLA as fast as possible.",
        "websites": [
          { "href": "http://plantation-productions.com/Webster", "title": "plantation-productions.com/Webster", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/High_Level_Assembly", "title": "High Level Assembly", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2.16", "date": "2011-01-01" }]
      },
      "pl+hotspot": {
        "name": "Java HotSpot Virtual Machine",
        "description": "HotSpot, released as Java HotSpot Performance Engine, is a Java virtual machine for desktop and server computers, developed by Sun Microsystems which was purchased by and became a division of Oracle Corporation in 2010. Its features improved performance via methods such as just-in-time compilation and adaptive optimization. It is the de facto Java Virtual Machine, serving as the reference implementation of the Java programming language.",
        "websites": [
          { "href": "https://openjdk.org/groups/hotspot/", "title": "openjdk.org/groups/hotspot/", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/HotSpot_(virtual_machine)", "title": "Java HotSpot Virtual Machine", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "23.25", "date": "2016-01-01" }]
      },
      "pl+hy": {
        "name": "Hy",
        "description": "Hy is a dialect of the Lisp programming language designed to interact with Python by translating s-expressions into Python's abstract syntax tree (AST). Hy was introduced at Python Conference (PyCon) 2013 by Paul Tagliamonte. Lisp allows operating on code as data (metaprogramming), thus Hy can be used to write domain-specific languages.",
        "firstAppeared": "2013-01-01",
        "extensions": [".hy"],
        "websites": [
          { "href": "http://hylang.org/", "title": "hylang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Hy_(programming_language)", "title": "Hy", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "0.29.0", "date": "2024-01-01" }, { "version": "1.0", "date": "2022-01-01" }],
        "images": [{ "kind": "other", "title": "Hy", "url": "/images/plangs/h/hy/other.png" }]
      },
      "pl+icon": {
        "name": "Icon",
        "description": "Icon is a very high-level programming language based on the concept of \"goal-directed execution\" in which code returns a \"success\" along with valid values, or a \"failure\", indicating that there is no valid data to return. The success and failure of a given block of code is used to direct further processing, whereas conventional languages would typically use boolean logic written by the programmer to achieve the same ends. Because the logic for basic control structures is often implicit in Icon, common tasks can be completed with less explicit code.",
        "firstAppeared": "1977-01-01",
        "websites": [
          { "href": "http://www.cs.arizona.edu/icon", "title": "www.cs.arizona.edu/icon", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Icon_programming_language", "title": "Icon", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "9.5.24", "date": "2024-01-01" }]
      },
      "pl+idris": {
        "name": "Idris",
        "description": "Idris is a purely-functional programming language with dependent types, optional lazy evaluation, and features such as a totality checker. Idris may be used as a proof assistant, but is designed to be a general-purpose programming language similar to Haskell.",
        "firstAppeared": "2007-01-01",
        "extensions": [".idr", ".lidr"],
        "websites": [
          { "href": "http://idris-lang.org/", "title": "idris-lang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Idris_(programming_language)", "title": "Idris", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.3.4", "date": "2021-01-01" }, { "version": "0.7.0", "date": "2023-01-01" }]
      },
      "pl+impromptu": {
        "name": "Impromptu",
        "description": "Impromptu is a Mac OS X programming environment for live coding. Impromptu is built around the Scheme language, which is a member of the Lisp family of languages. The source code of its core has been opened as the Extempore project.",
        "firstAppeared": "2005-01-01",
        "websites": [
          { "href": "http://impromptu.moso.com.au/", "title": "impromptu.moso.com.au", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Impromptu_(programming_environment)", "title": "Impromptu", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2.5" }],
        "images": [{ "kind": "other", "title": "Impromptu", "url": "/images/plangs/i/impromptu/other.jpg" }]
      },
      "pl+inform": {
        "name": "Inform",
        "description": "Inform is a programming language and design system for interactive fiction originally created in 1993 by Graham Nelson. Inform can generate programs designed for the Z-code or Glulx virtual machines. Versions 1 through 5 were released between 1993 and 1996. Around 1996, Nelson rewrote Inform from first principles to create version 6 (or Inform 6). Over the following decade, version 6 became reasonably stable and a popular language for writing interactive fiction. In 2006, Nelson released Inform 7 (briefly known as Natural Inform), a completely new language based on principles of natural language and a new set of tools based around a book-publishing metaphor.",
        "websites": [
          { "href": "https://ganelson.github.io/inform-website/", "title": "https://ganelson.github.io/inform-website/", "kind": "repository" },
          { "href": "https://en.wikipedia.org/wiki/Inform_(programming_language)", "title": "Inform", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "10.1.1", "date": "2022-01-01" }]
      },
      "pl+intel-fortran-compiler": {
        "name": "Intel Fortran Compiler",
        "description": "Intel Fortran Compiler, as part of Intel OneAPI HPC toolkit, is a group of Fortran compilers from Intel for Windows, macOS, and Linux.",
        "websites": [
          {
            "href": "http://software.intel.com/content/www/us/en/develop/tools/oneapi/components/fortran-compiler.html",
            "title": "software.intel.com/content/www/us/en/develop/tools/oneapi/components/fortran-compiler.html",
            "kind": "other"
          },
          { "href": "https://en.wikipedia.org/wiki/Intel_Fortran_Compiler", "title": "Intel Fortran Compiler", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2023.2.1", "date": "2023-01-01" }]
      },
      "pl+io": {
        "name": "Io",
        "description": "Io is a pure object-oriented programming language inspired by Smalltalk, Self, Lua, Lisp, Act1, and NewtonScript. Io has a prototype-based object model similar to those in Self and NewtonScript, eliminating the distinction between instance and class. Like Smalltalk, everything is an object and it uses dynamic typing. Like Lisp, programs are just data trees. Io uses actors for concurrency.",
        "firstAppeared": "2002-01-01",
        "websites": [
          { "href": "https://iolanguage.org/", "title": "iolanguage.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Io_(programming_language)", "title": "Io", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2019.05.22", "date": "2019-05-22" }]
      },
      "pl+ironpython": {
        "name": "IronPython",
        "description": "IronPython is an implementation of the Python programming language targeting the .NET and Mono frameworks. The project is currently maintained by a group of volunteers at GitHub. It is free and open-source software, and can be implemented with Python Tools for Visual Studio, which is a free and open-source extension for Microsoft's Visual Studio IDE.",
        "websites": [
          { "href": "https://ironpython.net/", "title": "ironpython.net", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/IronPython", "title": "IronPython", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.4.1", "date": "2023-01-01" }, { "version": "3.4.0", "date": "2022-01-01" }]
      },
      "pl+ironruby": {
        "name": "IronRuby",
        "description": "IronRuby is an implementation of the Ruby programming language targeting Microsoft .NET Framework. It is implemented on top of the Dynamic Language Runtime (DLR), a library running on top of the Common Language Infrastructure that provides dynamic typing and dynamic method dispatch, among other things, for dynamic languages.",
        "websites": [
          { "href": "http://www.ironruby.net/", "title": "www.ironruby.net", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/IronRuby", "title": "IronRuby", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.0", "date": "2010-01-01" }, { "version": "1.1.3", "date": "2011-01-01" }]
      },
      "pl+isabelle": {
        "name": "Isabelle",
        "description": "The Isabelle automated theorem prover is a higher-order logic (HOL) theorem prover, written in Standard ML and Scala. As an LCF-style theorem prover, it is based on a small logical core (kernel) to increase the trustworthiness of proofs without requiring — yet supporting — explicit proof objects.",
        "websites": [
          { "href": "https://isabelle.in.tum.de/", "title": "isabelle.in.tum.de", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Isabelle_(proof_assistant)", "title": "Isabelle", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "other", "title": "Isabelle", "url": "/images/plangs/i/isabelle/other.png" }]
      },
      "pl+javascript": {
        "name": "JavaScript",
        "description": "JavaScript (/ˈdʒɑːvəskrɪpt/), often abbreviated as JS, is a programming language and core technology of the Web, alongside HTML and CSS. 99% of websites use JavaScript on the client side for webpage behavior.",
        "firstAppeared": "1995-01-01",
        "extensions": [".cjs", ".js", ".mjs"],
        "websites": [
          {
            "href": "https://ecma-international.org/publications-and-standards/standards/ecma-262/",
            "title": "ecma-international.org/publications-and-standards/standards/ecma-262/",
            "kind": "other"
          },
          { "href": "https://en.wikipedia.org/wiki/Javascript_(programming_language)", "title": "JavaScript", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "other", "title": "JavaScript", "url": "/images/plangs/j/javascript/other.png" }]
      },
      "pl+javascriptcore": {
        "name": "WebKit",
        "description": "WebKit is a browser engine primarily used in Apple's Safari web browser, as well as all web browsers on iOS and iPadOS. WebKit is also used by the PlayStation consoles starting with the PS3, the Tizen mobile operating systems, the Amazon Kindle e-book reader, Nintendo consoles starting with the 3DS Internet Browser, and the discontinued BlackBerry Browser.",
        "websites": [
          { "href": "http://webkit.org/", "title": "webkit.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/JavaScriptCore", "title": "WebKit", "kind": "wikipedia" }
        ]
      },
      "pl+joy": {
        "name": "Joy",
        "description": "The Joy programming language in computer science is a purely functional programming language that was produced by Manfred von Thun of La Trobe University in Melbourne, Australia. Joy is based on composition of functions rather than lambda calculus. It has turned out to have many similarities to Forth, due not to design but to an independent evolution and convergence. It was also inspired by the function-level programming style of John Backus's FP.",
        "firstAppeared": "2001-01-01",
        "websites": [{ "href": "https://en.wikipedia.org/wiki/Joy_(programming_language)", "title": "Joy", "kind": "wikipedia" }]
      },
      "pl+jq": {
        "name": "jq",
        "description": "jq is a very high-level lexically scoped functional programming language in which every JSON value is a constant. jq supports backtracking and managing indefinitely long streams of JSON data. It is related to the Icon and Haskell programming languages. The language supports a namespace-based module system and has some support for closures. In particular, functions and functional expressions can be used as parameters of other functions.",
        "firstAppeared": "2012-01-01",
        "websites": [
          { "href": "https://jqlang.github.io/jq", "title": "jqlang.github.io/jq", "kind": "repository" },
          { "href": "https://en.wikipedia.org/wiki/Jq_(programming_language)", "title": "jq", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.7.1", "date": "2023-01-01" }],
        "images": [{ "kind": "logo", "title": "jq", "url": "/images/plangs/j/jq/logo.png" }]
      },
      "pl+jruby": {
        "name": "JRuby",
        "description": "JRuby is an implementation of the Ruby programming language atop the Java Virtual Machine, written largely in Java. It is free software released under a three-way EPL/GPL/LGPL license. JRuby is tightly integrated with Java to allow the embedding of the interpreter into any Java application with full two-way access between the Java and the Ruby code (similar to Jython for the Python language).",
        "websites": [
          { "href": "https://www.jruby.org/", "title": "www.jruby.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/JRuby", "title": "JRuby", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "9.4.5.0", "date": "2023-01-01" }]
      },
      "pl+julia": {
        "name": "Julia",
        "description": "Julia is a high-level, general-purpose dynamic programming language, most commonly used for numerical analysis and computational science. Distinctive aspects of Julia's design include a type system with parametric polymorphism and the use of multiple dispatch as a core programming paradigm, efficient garbage collection, and a just-in-time (JIT) compiler (with support for ahead-of-time compilation).",
        "firstAppeared": "2012-01-01",
        "extensions": [".jl"],
        "websites": [
          { "href": "https://julialang.org/", "title": "JuliaLang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Julia_programming_language", "title": "Julia", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.10.5", "date": "2024-01-01" }, { "version": "1.11.0", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Julia", "url": "/images/plangs/j/julia/logo.png" }]
      },
      "pl+jython": {
        "name": "Jython",
        "description": "Jython is an implementation of the Python programming language designed to run on the Java platform. It was known as JPython until 1999.",
        "websites": [
          { "href": "https://www.jython.org/", "title": "www.jython.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Jython", "title": "Jython", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2.7.4", "date": "2024-01-01" }]
      },
      "pl+k": {
        "name": "K",
        "description": "K is a proprietary array processing programming language developed by Arthur Whitney and commercialized by Kx Systems. The language serves as the foundation for kdb+, an in-memory, column-based database, and other related financial products. The language, originally developed in 1993, is a variant of APL and contains elements of Scheme. Advocates of the language emphasize its speed, facility in handling arrays, and expressive syntax.",
        "firstAppeared": "1993-01-01",
        "websites": [
          { "href": "http://kx.com/", "title": "kx.com", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/K_(programming_language)", "title": "K", "kind": "wikipedia" }
        ]
      },
      "pl+kornshell": {
        "name": "KornShell",
        "description": "KornShell (ksh) is a Unix shell which was developed by David Korn at Bell Labs in the early 1980s and announced at USENIX on July 14, 1983.  The initial development was based on Bourne shell source code.  Other early contributors were Bell Labs developers Mike Veach and Pat Sullivan, who wrote the Emacs and vi-style line editing modes' code, respectively. KornShell is backward-compatible with the Bourne shell and includes many features of the C shell, inspired by the requests of Bell Labs users.",
        "websites": [
          { "href": "http://kornshell.com/", "title": "kornshell.com", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/KornShell", "title": "KornShell", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "other", "title": "KornShell", "url": "/images/plangs/k/kornshell/other.png" }]
      },
      "pl+kotlin": {
        "name": "Kotlin",
        "description": "Kotlin (/ˈkɒtlɪn/) is a cross-platform, statically typed, general-purpose high-level programming language with type inference. Kotlin is designed to interoperate fully with Java, and the JVM version of Kotlin's standard library depends on the Java Class Library,\nbut type inference allows its syntax to be more concise. Kotlin mainly targets the JVM, but also compiles to JavaScript (e.g., for frontend web applications using React) or native code via LLVM (e.g., for native iOS apps sharing business logic with Android apps). Language development costs are borne by JetBrains, while the Kotlin Foundation protects the Kotlin trademark.",
        "firstAppeared": "2011-01-01",
        "extensions": [".kexe", ".klib", ".kt", ".kts"],
        "websites": [
          { "href": "https://kotlinlang.org/", "title": "kotlinlang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Kotlin_(programming_language)", "title": "Kotlin", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2.0.0", "date": "2024-01-01" }]
      },
      "pl+labview": {
        "name": "LabVIEW",
        "description": "Laboratory Virtual Instrument Engineering Workbench (LabVIEW) is a graphical system design and development platform produced and distributed by National Instruments, based on a programming environment that uses a visual programming language. It is widely used for data acquisition, instrument control, and industrial automation. It provides tools for designing and deploying complex test and measurement systems.",
        "websites": [
          { "href": "https://www.ni.com/labview", "title": "www.ni.com/labview", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/LabVIEW", "title": "LabVIEW", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "5.1", "date": "2023-01-01" }],
        "images": [{ "kind": "logo", "title": "LabVIEW", "url": "/images/plangs/l/labview/logo.jpg" }]
      },
      "pl+lisp": {
        "name": "Lisp",
        "description": "Lisp (historically LISP, an abbreviation of \"list processing\") is a family of programming languages with a long history and a distinctive, fully parenthesized prefix notation.\nOriginally specified in the late 1950s, it is the second-oldest high-level programming language still in common use, after Fortran. Lisp has changed since its early days, and many dialects have existed over its history. Today, the best-known general-purpose Lisp dialects are Common Lisp, Scheme, Racket, and Clojure.",
        "firstAppeared": "1960-01-01",
        "websites": [{ "href": "https://en.wikipedia.org/wiki/Lisp_programming_language", "title": "Lisp", "kind": "wikipedia" }],
        "images": [{ "kind": "logo", "title": "Lisp", "url": "/images/plangs/l/lisp/logo.png" }]
      },
      "pl+llvm": {
        "name": "LLVM",
        "description": "LLVM is a set of compiler and toolchain technologies that can be used to develop a frontend for any programming language and a backend for any instruction set architecture. LLVM is designed around a language-independent intermediate representation (IR) that serves as a portable, high-level assembly language that can be optimized with a variety of transformations over multiple passes. The name LLVM originally stood for Low Level Virtual Machine, though the project has expanded and the name is no longer officially an initialism.",
        "websites": [
          { "href": "https://www.llvm.org/", "title": "www.llvm.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/LLVM", "title": "LLVM", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "18.1.8", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "LLVM", "url": "/images/plangs/l/llvm/logo.png" }]
      },
      "pl+logtalk": {
        "name": "Logtalk",
        "description": "Logtalk is an object-oriented logic programming language that extends and leverages the Prolog language with a feature set suitable for programming in the large. It provides support for encapsulation and data hiding, separation of concerns and enhanced code reuse. Logtalk uses standard Prolog syntax with the addition of a few operators and directives.",
        "firstAppeared": "1998-01-01",
        "websites": [
          { "href": "https://logtalk.org/", "title": "logtalk.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Logtalk", "title": "Logtalk", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.66.0", "date": "2023-01-01" }]
      },
      "pl+lua": {
        "name": "Lua",
        "description": "Lua (/ˈluːə/ LOO-ə; from Portuguese: lua [ˈlu(w)ɐ] meaning moon) is a lightweight, high-level, multi-paradigm programming language designed mainly for embedded use in applications. Lua is cross-platform software, since the interpreter of compiled bytecode is written in ANSI C, and Lua has a relatively simple C application programming interface (API) to embed it into applications.",
        "firstAppeared": "1993-01-01",
        "extensions": [".lua"],
        "websites": [
          { "href": "https://www.lua.org/", "title": "www.lua.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Lua_(programming_language)", "title": "Lua", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "5.4.7", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Lua", "url": "/images/plangs/l/lua/logo.png" }]
      },
      "pl+luajit": {
        "name": "LuaJIT",
        "description": "LuaJIT is a tracing just-in-time compiler for the Lua programming language. Mike Pall, a primary maintainer of the project had resigned in 2015, resorting only to occasional patching to the future 2.1 version.",
        "websites": [
          { "href": "https://luajit.org/", "title": "luajit.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/LuaJIT", "title": "LuaJIT", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2.0.5", "date": "2023-01-01" }],
        "images": [{ "kind": "other", "title": "LuaJIT", "url": "/images/plangs/l/luajit/other.png" }]
      },
      "pl+max-msp": {
        "name": "Max",
        "description": "Max, also known as Max/MSP/Jitter, is a visual programming language for music and multimedia developed and maintained by San Francisco-based software company Cycling '74. Over its more than thirty-year history, it has been used by composers, performers, software designers, researchers, and artists to create recordings, performances, and installations.",
        "websites": [
          { "href": "https://cycling74.com/products/max/", "title": "cycling74.com/products/max/", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Max/MSP", "title": "Max", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "8.6.2", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Max", "url": "/images/plangs/m/max-msp/logo.jpg" }]
      },
      "pl+micropython": {
        "name": "MicroPython",
        "description": "MicroPython is a software implementation of a programming language largely compatible with Python 3, written in C, that is optimized to run on a microcontroller.",
        "websites": [
          { "href": "https://micropython.org/", "title": "micropython.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/MicroPython", "title": "MicroPython", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.23.0", "date": "2024-01-01" }]
      },
      "pl+minizinc": {
        "name": "MiniZinc",
        "description": "MiniZinc is a constraint modelling language (or algebraic modeling language) to describe and solve high-complexity problems using a variety of well-known solving paradigms for combinatorial problems including constraint programming, integer programming, lazy clause generation, SAT, and SMT.",
        "firstAppeared": "2009-01-01",
        "extensions": [".dzn", ".fzn", ".mzn"],
        "websites": [
          { "href": "https://www.minizinc.org/", "title": "www.minizinc.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/MiniZinc", "title": "MiniZinc", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2.8.5", "date": "2024-01-01" }]
      },
      "pl+ml": {
        "name": "ML",
        "description": "ML (Meta Language) is a general-purpose, high-level, functional programming language. It is known for its use of the polymorphic Hindley–Milner type system, which automatically assigns the data types of most expressions without requiring explicit type annotations (type inference), and ensures type safety; there is a formal proof that a well-typed ML program does not cause runtime type errors. ML provides pattern matching for function arguments, garbage collection, imperative programming, call-by-value and currying. While a general-purpose programming language, ML is used heavily in programming language research and is one of the few languages to be completely specified and verified using formal semantics. Its types and pattern matching make it well-suited and commonly used to operate on other formal languages, such as in compiler writing, automated theorem proving, and formal verification.",
        "firstAppeared": "1973-01-01",
        "websites": [{ "href": "https://en.wikipedia.org/wiki/ML_programming_language", "title": "ML", "kind": "wikipedia" }]
      },
      "pl+mlton": {
        "name": "MLton",
        "description": "MLton is a whole-program optimizing compiler for the programming language Standard ML. MLton development began in 1997, and continues with a worldwide community of developers and users, who have helped to port MLton to several computing platforms. It is free and open-source software released under a Historical Permission Notice and Disclaimer. MLton was a participating organization in the 2013 Google Summer of Code.",
        "firstAppeared": "1997-01-01",
        "extensions": [".sml"],
        "websites": [
          { "href": "http://mlton.org/", "title": "mlton.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/MLton", "title": "MLton", "kind": "wikipedia" }
        ]
      },
      "pl+modelica": {
        "name": "Modelica",
        "description": "Modelica is an object-oriented, declarative, multi-domain modeling language for component-oriented modeling of complex systems, e.g., systems containing mechanical, electrical, electronic, hydraulic, thermal, control, electric power or process-oriented subcomponents.\nThe free Modelica language\nis developed by the non-profit Modelica Association. The Modelica Association also develops the free Modelica Standard Library that contains about 1400 generic model components and 1200 functions in various domains, as of version 4.0.0.",
        "firstAppeared": "1997-01-01",
        "extensions": [".mo"],
        "websites": [
          { "href": "https://www.modelica.org/", "title": "www.modelica.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Modelica", "title": "Modelica", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.6", "date": "2023-01-01" }],
        "images": [{ "kind": "other", "title": "Modelica", "url": "/images/plangs/m/modelica/other.png" }]
      },
      "pl+modula": {
        "name": "Modula",
        "description": "The Modula programming language is a descendant of the Pascal language. It was developed in Switzerland, at ETH Zurich, in the mid-1970s by Niklaus Wirth, the same person who designed Pascal. The main innovation of Modula over Pascal is a module system, used for grouping sets of related declarations into program units; hence the name Modula. The language is defined in a report by Wirth called Modula. A language for modular multiprogramming published 1976.",
        "firstAppeared": "1975-01-01",
        "websites": [{ "href": "https://en.wikipedia.org/wiki/Modula_programming_language", "title": "Modula", "kind": "wikipedia" }]
      },
      "pl+mono": {
        "name": "Mono",
        "description": "Mono is a free and open-source .NET Framework-compatible software framework. Originally by Ximian which was acquired by Novell, it was later developed by Xamarin which was acquired by Microsoft. In August 2024, Microsoft transferred ownership of Mono to WineHQ. Mono can be run on many software systems.",
        "websites": [
          { "href": "https://www.mono-project.com/", "title": "www.mono-project.com", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Mono_(software)", "title": "Mono", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "6.12.0.206", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Mono", "url": "/images/plangs/m/mono/logo.png" }]
      },
      "pl+moonscript": {
        "name": "Moonscript",
        "description": "MoonScript is a dynamic scripting language that compiles into Lua. It gives the full power of Lua in a more concise syntax.",
        "extensions": [".moon"],
        "websites": [{ "href": "https://moonscript.org/", "title": "moonscript.org", "kind": "homepage" }]
      },
      "pl+mruby": {
        "name": "mruby",
        "description": "mruby is an interpreter for the Ruby programming language with the intention of being lightweight and easily embeddable. The project is headed by Yukihiro Matsumoto, with over 100 contributors currently working on the project.",
        "websites": [
          { "href": "https://mruby.org/", "title": "mruby.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Mruby", "title": "mruby", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.3.0", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "mruby", "url": "/images/plangs/m/mruby/logo.png" }]
      },
      "pl+mzscheme": {
        "name": "Racket",
        "description": "Racket is a general-purpose, multi-paradigm programming language. The Racket language is a modern dialect of Lisp and a descendant of Scheme. It is designed as a platform for programming language design and implementation. In addition to the core Racket language, Racket is also used to refer to the family of programming languages and set of tools supporting development on and with Racket. Racket is also used for scripting, computer science education, and research.",
        "firstAppeared": "1995-01-01",
        "extensions": [".rkt"],
        "websites": [
          { "href": "https://racket-lang.org/", "title": "racket-lang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Mzscheme", "title": "Racket", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "8.14", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Racket", "url": "/images/plangs/m/mzscheme/logo.png" }]
      },
      "pl+netlogo": {
        "name": "NetLogo",
        "description": "NetLogo is a programming language and integrated development environment (IDE) for agent-based modeling.",
        "firstAppeared": "1999-01-01",
        "extensions": [".nlogo", ".nlogo3d", ".nls"],
        "websites": [
          { "href": "http://ccl.northwestern.edu/netlogo", "title": "ccl.northwestern.edu/netlogo", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/NetLogo", "title": "NetLogo", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "6.4.0", "date": "2023-01-01" }],
        "images": [{ "kind": "logo", "title": "NetLogo", "url": "/images/plangs/n/netlogo/logo.png" }]
      },
      "pl+netrexx": {
        "name": "NetRexx",
        "description": "NetRexx is an open source, originally IBM's, variant of the REXX programming language to run on the Java virtual machine.  It supports a classic REXX syntax, with no reserved keywords, along with considerable additions to support object-oriented programming in a manner compatible with Java's object model, yet can be used as both a compiled and an interpreted language, with an option of using only data types native to the JVM or the NetRexx runtime package. The latter offers the standard Rexx data type that combines string processing with unlimited precision decimal arithmetic.",
        "firstAppeared": "1996-01-01",
        "extensions": [".nrx"],
        "websites": [
          { "href": "https://www.netrexx.org/", "title": "www.netrexx.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/NetRexx", "title": "NetRexx", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "4.06", "date": "2024-01-01" }]
      },
      "pl+newlisp": {
        "name": "newLISP",
        "description": "newLISP is a scripting language, a dialect of the Lisp family of programming languages. It was designed and developed by Lutz Mueller. Because of its small resource requirements, newLISP is excellent for embedded systems applications. Most of the functions you will ever need are already built in. This includes networking functions, support for distributed and multicore processing, and Bayesian statistics. newLISP is free and open-source software released under the GNU General Public License, version 3 or later.",
        "firstAppeared": "1991-01-01",
        "websites": [
          { "href": "http://www.newlisp.org/", "title": "www.newlisp.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/NewLISP", "title": "newLISP", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "10.7.5", "date": "2019-01-01" }, { "version": "10.7.4", "date": "2018-01-01" }],
        "images": [{ "kind": "logo", "title": "newLISP", "url": "/images/plangs/n/newlisp/logo.png" }]
      },
      "pl+newspeak": {
        "name": "Newspeak",
        "description": "Newspeak is a programming language and platform in the tradition of Smalltalk and Self being developed by a team led by Gilad Bracha. The platform includes an integrated development environment (IDE), a graphical user interface (GUI) library, and standard libraries. Starting in 2006, Cadence Design Systems funded its development and employed the main contributors, but ended funding in January 2009.",
        "firstAppeared": "2006-01-01",
        "websites": [
          { "href": "http://newspeaklanguage.org/", "title": "newspeaklanguage.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Newspeak_(programming_language)", "title": "Newspeak", "kind": "wikipedia" }
        ]
      },
      "pl+nim": {
        "name": "Nim",
        "description": "Nim is a general-purpose, multi-paradigm, statically typed, compiled high-level system programming language, designed and developed by a team around Andreas Rumpf. Nim is designed to be \"efficient, expressive, and elegant\", supporting metaprogramming, functional, message passing, procedural, and object-oriented programming styles by providing several features such as compile time code generation, algebraic data types, a foreign function interface (FFI) with C, C++, Objective-C, and JavaScript, and supporting compiling to those same languages as intermediate representations.",
        "firstAppeared": "2008-01-01",
        "extensions": [".nim", ".nimble", ".nims"],
        "websites": [
          { "href": "http://nim-lang.org/", "title": "nim-lang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Nim_(programming_language)", "title": "Nim", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2.0.8", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Nim", "url": "/images/plangs/n/nim/logo.png" }]
      },
      "pl+oberon": {
        "name": "Oberon",
        "description": "Oberon is a general-purpose programming language first published in 1987 by Niklaus Wirth and the latest member of the Wirthian family of ALGOL-like languages (Euler, ALGOL W, Pascal, Modula, and Modula-2). Oberon was the result of a concentrated effort to increase the power of Modula-2, the direct successor of Pascal, and simultaneously to reduce its complexity. Its principal new feature is the concept of data type extension of record types. It permits constructing new data types on the basis of existing ones and to relate them, deviating from the dogma of strict static typing of data. Type extension is Wirth's way of inheritance reflecting the viewpoint of the parent site. Oberon was developed as part of the implementation of an operating system, also named Oberon at ETH Zurich in Switzerland. The name was inspired both by the Voyager space probe's pictures of the moon of the planet Uranus, named Oberon, and because Oberon is famous as the king of the elves.",
        "firstAppeared": "1987-01-01",
        "websites": [
          { "href": "https://projectoberon.net/", "title": "projectoberon.net", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Oberon_programming_language", "title": "Oberon", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "logo", "title": "Oberon", "url": "/images/plangs/o/oberon/logo.png" }]
      },
      "pl+ocaml": {
        "name": "OCaml",
        "description": "OCaml (/oʊˈkæməl/ oh-KAM-əl, formerly Objective Caml) is a general-purpose, high-level, multi-paradigm programming language which extends the Caml dialect of ML with object-oriented features. OCaml was created in 1996 by Xavier Leroy, Jérôme Vouillon, Damien Doligez, Didier Rémy, Ascánder Suárez, and others.",
        "firstAppeared": "1996-01-01",
        "extensions": [".ml", ".mli"],
        "websites": [
          { "href": "https://ocaml.org/", "title": "ocaml.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/OCaml", "title": "OCaml", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "5.2.0", "date": "2024-01-01" }]
      },
      "pl+pascal": {
        "name": "Pascal",
        "description": "Pascal is an imperative and procedural programming language, designed by Niklaus Wirth as a small, efficient language intended to encourage good programming practices using structured programming and data structuring. It is named after French mathematician, philosopher and physicist Blaise Pascal.",
        "firstAppeared": "1970-01-01",
        "websites": [
          {
            "href": "https://en.wikipedia.org/wiki/Pascal_(programming_language)#ISO/IEC_10206:1990_Extended_Pascal",
            "title": "Pascal",
            "kind": "wikipedia"
          }
        ]
      },
      "pl+perl": {
        "name": "Perl",
        "description": "Perl is a high-level, general-purpose, interpreted, dynamic programming language. Though Perl is not officially an acronym, there are various backronyms in use, including \"Practical Extraction and Reporting Language\".",
        "firstAppeared": "1987-01-01",
        "extensions": [".cgi", ".pl", ".pls", ".plx", ".pm", ".pod", ".psgi", ".t", ".xs"],
        "websites": [
          { "href": "https://www.perl.org/", "title": "perl.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Perl", "title": "Perl", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "5.40.0", "date": "2024-01-01" }, { "version": "5.41.3", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Perl", "url": "/images/plangs/p/perl/logo.png" }]
      },
      "pl+powerbasic": {
        "name": "PowerBASIC",
        "description": "PowerBASIC, formerly Turbo Basic, is the brand of several commercial compilers by PowerBASIC Inc. that compile a dialect of the BASIC programming language. There are both MS-DOS and Windows versions, and two kinds of the latter: Console and Windows. The MS-DOS version has a syntax similar to that of QBasic and QuickBASIC. The Windows versions use a BASIC syntax expanded to include many Windows functions, and the statements can be combined with calls to the Windows API.",
        "firstAppeared": "1989-01-01",
        "websites": [
          { "href": "https://www.powerbasic.com/", "title": "www.powerbasic.com", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/PowerBASIC", "title": "PowerBASIC", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "10.0", "date": "2011-01-01" }],
        "images": [{ "kind": "screenshot", "title": "PowerBASIC", "url": "/images/plangs/p/powerbasic/screenshot.png" }]
      },
      "pl+processing": {
        "name": "Processing",
        "description": "Processing is a free graphics library and integrated development environment (IDE) built for the electronic arts, new media art, and visual design communities with the purpose of teaching non-programmers the fundamentals of computer programming in a visual context.",
        "firstAppeared": "2001-01-01",
        "extensions": [".pde"],
        "websites": [
          { "href": "http://processing.org/", "title": "processing.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Processing_(programming_language)", "title": "Processing", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "4.3", "date": "2023-01-01" }],
        "images": [{ "kind": "logo", "title": "Processing", "url": "/images/plangs/p/processing/logo.png" }]
      },
      "pl+prolog": {
        "name": "Prolog",
        "description": "Prolog is a logic programming language that has its origins in artificial intelligence, automated theorem proving and computational linguistics.",
        "firstAppeared": "1972-01-01",
        "extensions": [".P", ".pl", ".pro"],
        "websites": [
          { "href": "https://www.iso.org/standard/21413.html", "title": "www.iso.org/standard/21413.html", "kind": "other" },
          { "href": "https://www.iso.org/standard/20775.html", "title": "www.iso.org/standard/20775.html", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Prolog", "title": "Prolog", "kind": "wikipedia" }
        ]
      },
      "pl+pure": {
        "name": "Pure",
        "description": "Pure, successor to the equational language Q, is a dynamically typed, functional programming language based on term rewriting. It has facilities for user-defined operator syntax, macros, arbitrary-precision arithmetic (multiple-precision numbers), and compiling to native code through the LLVM. Pure is free and open-source software distributed (mostly) under the GNU Lesser General Public License version 3 or later.",
        "firstAppeared": "2008-01-01",
        "websites": [
          { "href": "http://agraef.github.io/pure-lang", "title": "agraef.github.io/pure-lang", "kind": "repository" },
          { "href": "https://en.wikipedia.org/wiki/Pure_(programming_language)", "title": "Pure", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "0.68", "date": "2018-01-01" }],
        "images": [{ "kind": "logo", "title": "Pure", "url": "/images/plangs/p/pure/logo.png" }]
      },
      "pl+purebasic": {
        "name": "PureBasic",
        "description": "PureBasic is a commercially distributed procedural computer programming language and integrated development environment based on BASIC and developed by Fantaisie Software for Windows, Linux, and macOS. An Amiga version is available, although it has been discontinued and some parts of it are released as open-source. The first public release of PureBasic for Windows was on 17 December 2000. It has been continually updated ever since.",
        "firstAppeared": "1998-01-01",
        "extensions": [".pb", ".pbf", ".pbi", ".pbp"],
        "websites": [
          { "href": "http://www.purebasic.com/", "title": "www.purebasic.com", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/PureBasic", "title": "PureBasic", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "6.11", "date": "2024-01-01" }],
        "images": [{ "kind": "other", "title": "PureBasic", "url": "/images/plangs/p/purebasic/other.png" }]
      },
      "pl+puredata": {
        "name": "Pure Data",
        "description": "Pure Data (Pd) is a visual programming language developed by Miller Puckette in the 1990s for creating interactive computer music and multimedia works. While Puckette is the main author of the program, Pd is an open-source project with a large developer base working on new extensions. It is released under BSD-3-Clause. It runs on Linux, MacOS, iOS, Android and Windows.  Ports exist for FreeBSD and IRIX.",
        "websites": [
          { "href": "http://puredata.info/", "title": "puredata.info", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/PureData", "title": "Pure Data", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "0.53", "date": "2023-01-01" }],
        "images": [{ "kind": "logo", "title": "Pure Data", "url": "/images/plangs/p/puredata/logo.png" }]
      },
      "pl+purescript": {
        "name": "PureScript",
        "description": "PureScript is a strongly-typed, purely-functional programming language that transpiles to JavaScript, C++11, Erlang, and Go. It can be used to develop web applications, server side apps, and also desktop applications with use of Electron or via C++11 and Go compilers with suitable libraries. Its syntax is mostly comparable to that of Haskell. In addition, it introduces row polymorphism and extensible records. Also, contrary to Haskell, the PureScript language is defined as having a strict evaluation strategy, although there are non-conforming back ends which implement a lazy evaluation strategy.",
        "firstAppeared": "2013-01-01",
        "extensions": [".purs"],
        "websites": [
          { "href": "https://www.purescript.org/", "title": "www.purescript.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/PureScript", "title": "PureScript", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "0.15.15", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "PureScript", "url": "/images/plangs/p/purescript/logo.png" }]
      },
      "pl+pypy": {
        "name": "PyPy",
        "description": "PyPy (/ˈpaɪpaɪ/) is an implementation of the Python programming language. PyPy often runs faster than the standard implementation CPython because PyPy uses a just-in-time compiler. Most Python code runs well on PyPy except for code that depends on CPython extensions, which either does not work or incurs some overhead when run in PyPy.",
        "websites": [
          { "href": "https://pypy.org/", "title": "pypy.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/PyPy", "title": "PyPy", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "7.3.16", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "PyPy", "url": "/images/plangs/p/pypy/logo.png" }]
      },
      "pl+python": {
        "name": "Python",
        "description": "Python is a high-level, general-purpose programming language. Its design philosophy emphasizes code readability with the use of significant indentation.",
        "firstAppeared": "1991-01-01",
        "extensions": [".py", ".pyc", ".pyd", ".pyi", ".pyw", ".pyz"],
        "websites": [
          { "href": "https://www.python.org/", "title": "python.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Python_(programming_language)", "title": "Python", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.12.5", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Python", "url": "/images/plangs/p/python/logo.png" }]
      },
      "pl+r": {
        "name": "R",
        "description": "R is a programming language for statistical computing and data visualization. It has been adopted in the fields of data mining, bioinformatics, and data analysis.",
        "firstAppeared": "1993-01-01",
        "extensions": [".r.rdata.rhistory.rds.rda"],
        "websites": [
          { "href": "https://www.r-project.org/", "title": "www.r-project.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/R_(programming_language)", "title": "R", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "4.4.1", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "R", "url": "/images/plangs/r/r/logo.png" }]
      },
      "pl+r5rs": {
        "name": "Scheme",
        "description": "Scheme is a dialect of the Lisp family of programming languages. Scheme was created during the 1970s at the MIT Computer Science and Artificial Intelligence Laboratory (MIT AI Lab) and released by its developers, Guy L. Steele and Gerald Jay Sussman, via a series of memos now known as the Lambda Papers. It was the first dialect of Lisp to choose lexical scope and the first to require implementations to perform tail-call optimization, giving stronger support for functional programming and associated techniques such as recursive algorithms. It was also one of the first programming languages to support first-class continuations. It had a significant influence on the effort that led to the development of Common Lisp.",
        "firstAppeared": "1975-01-01",
        "extensions": [".scm", ".ss"],
        "websites": [
          { "href": "https://www.scheme.org/", "title": "www.scheme.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/R5RS", "title": "Scheme", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "other", "title": "Scheme", "url": "/images/plangs/r/r5rs/other.png" }]
      },
      "pl+racket": {
        "name": "Racket",
        "description": "Racket is a general-purpose, multi-paradigm programming language. The Racket language is a modern dialect of Lisp and a descendant of Scheme. It is designed as a platform for programming language design and implementation. In addition to the core Racket language, Racket is also used to refer to the family of programming languages and set of tools supporting development on and with Racket. Racket is also used for scripting, computer science education, and research.",
        "firstAppeared": "1995-01-01",
        "extensions": [".rkt"],
        "websites": [
          { "href": "https://racket-lang.org/", "title": "racket-lang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Racket_(programming_language)", "title": "Racket", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "8.14", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Racket", "url": "/images/plangs/r/racket/logo.png" }]
      },
      "pl+raku": {
        "name": "Raku",
        "description": "Raku is a member of the Perl family of programming languages. Formerly named Perl 6, it was renamed in October 2019. Raku introduces elements of many modern and historical languages. Compatibility with Perl was not a goal, though a compatibility mode is part of the specification. The design process for Raku began in 2000.",
        "firstAppeared": "2015-01-01",
        "extensions": [".raku", ".rakudoc", ".rakumod", ".rakutest", ".t"],
        "websites": [
          { "href": "http://raku.org/", "title": "raku.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Raku_(programming_language)", "title": "Raku", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "other", "title": "Raku", "url": "/images/plangs/r/raku/other.png" }]
      },
      "pl+rakudo": {
        "name": "Rakudo",
        "description": "Rakudo is a Raku compiler targeting MoarVM, and the Java Virtual Machine, that implements the Raku specification. It is currently the only major Raku compiler in active development.",
        "websites": [
          { "href": "http://rakudo.org/", "title": "rakudo.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Rakudo", "title": "Rakudo", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2024.08", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Rakudo", "url": "/images/plangs/r/rakudo/logo.png" }]
      },
      "pl+rascal": {
        "name": "Rascal",
        "description": "Rascal is a domain-specific language for metaprogramming and language oriented programming, such as static code analysis, program transformation, program generation and implementation of domain-specific languages. It is a general meta language in the sense that it does not have a bias for any particular software language. It includes primitives from relational calculus and term rewriting. Its syntax and semantics are based on procedural (imperative) and functional programming.",
        "websites": [
          { "href": "http://www.rascal-mpl.org/", "title": "http://www.rascal-mpl.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/RascalMPL", "title": "Rascal", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "0.30.1", "date": "2023-01-01" }]
      },
      "pl+reason": {
        "name": "Reason",
        "description": "Reason, also known as ReasonML, is a general-purpose, high-level, multi-paradigm, functional and object-oriented programming language and syntax extension and toolchain for OCaml created by Jordan Walke, who also created the React framework, at Facebook. Reason uses many syntax elements from JavaScript, compiles to native code using OCaml's compiler toolchain, and can compile to JavaScript using the ReScript compiler.",
        "firstAppeared": "2016-01-01",
        "extensions": [".re", ".rei"],
        "websites": [
          { "href": "https://reasonml.github.io/", "title": "reasonml.github.io", "kind": "repository" },
          { "href": "https://en.wikipedia.org/wiki/Reason_(programming_language)", "title": "Reason", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.12.0", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Reason", "url": "/images/plangs/r/reason/logo.png" }]
      },
      "pl+rebol": {
        "name": "Rebol",
        "description": "Rebol (/ˈrɛbəl/ REB-əl; historically REBOL) is a cross-platform data exchange language and a multi-paradigm dynamic programming language designed by Carl Sassenrath for network communications and distributed computing.  It introduces the concept of dialecting: small, optimized, domain-specific languages for code and data, which is also the most notable property of the language according to its designer Carl Sassenrath:",
        "firstAppeared": "1997-01-01",
        "extensions": [".r", ".reb"],
        "websites": [
          { "href": "http://www.rebol.com/", "title": "www.rebol.com", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Rebol", "title": "Rebol", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2.7.8", "date": "2011-01-01" }, { "version": "2.101.0", "date": "2012-01-01" }]
      },
      "pl+red": {
        "name": "Red",
        "description": "Red is a programming language designed to overcome the limitations of the programming language Rebol. Red was introduced in 2011 by Nenad Rakočević, and is both an imperative and functional programming language. Its syntax and general usage overlaps that of the interpreted Rebol language.",
        "firstAppeared": "2011-01-01",
        "extensions": [".red", ".reds"],
        "websites": [
          { "href": "https://www.red-lang.org/", "title": "www.red-lang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Red_(programming_language)", "title": "Red", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "0.6.5", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Red", "url": "/images/plangs/r/red/logo.png" }]
      },
      "pl+ruby": {
        "name": "Ruby",
        "description": "Ruby is an interpreted, high-level, general-purpose programming language. It was designed with an emphasis on programming productivity and simplicity. In Ruby, everything is an object, including primitive data types. It was developed in the mid-1990s by Yukihiro \"Matz\" Matsumoto in Japan.",
        "firstAppeared": "1995-01-01",
        "extensions": [".rb", ".ru"],
        "websites": [
          { "href": "https://www.ruby-lang.org/en/", "title": "ruby-lang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Ruby_programming_language", "title": "Ruby", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.3.5", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Ruby", "url": "/images/plangs/r/ruby/logo.png" }]
      },
      "pl+rust": {
        "name": "Rust",
        "description": "Rust is a general-purpose programming language emphasizing performance, type safety, and concurrency. It enforces memory safety, meaning that all references point to valid memory, without a garbage collector. To simultaneously enforce memory safety and prevent data races, its \"borrow checker\" tracks the object lifetime of all references in a program during compiling.",
        "firstAppeared": "2015-01-01",
        "extensions": [".rlib", ".rs"],
        "websites": [
          { "href": "https://www.rust-lang.org/", "title": "www.rust-lang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Rust_(programming_language)", "title": "Rust", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.80.1", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Rust", "url": "/images/plangs/r/rust/logo.png" }]
      },
      "pl+sass": {
        "name": "Sass",
        "description": "Sass (short for syntactically awesome style sheets) is a preprocessor scripting language that is interpreted or compiled into Cascading Style Sheets (CSS). SassScript is the scripting language itself.",
        "firstAppeared": "2006-01-01",
        "extensions": [".sass", ".scss"],
        "websites": [
          { "href": "https://sass-lang.com/", "title": "sass-lang.com", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Sass_(style_sheet_language)", "title": "Sass", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "1.75.0", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Sass", "url": "/images/plangs/s/sass/logo.png" }]
      },
      "pl+sbcl": {
        "name": "SBCL",
        "description": "Steel Bank Common Lisp (SBCL) is a free Common Lisp implementation that features a high-performance native compiler, Unicode support and threading. It is open source software, with a permissive license. In addition to the compiler and runtime system for ANSI Common Lisp, it provides an interactive environment including a debugger, a statistical profiler, a code coverage tool, and many other extensions.",
        "websites": [
          { "href": "http://www.sbcl.org/", "title": "www.sbcl.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/SBCL", "title": "SBCL", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2.4.5", "date": "2024-01-01" }],
        "images": [{ "kind": "screenshot", "title": "SBCL", "url": "/images/plangs/s/sbcl/screenshot.png" }]
      },
      "pl+scala": {
        "name": "Scala",
        "description": "Scala (/ˈskɑːlɑː/ SKAH-lah) is a strong statically typed high-level general-purpose programming language that supports both object-oriented programming and functional programming. Designed to be concise, many of Scala's design decisions are intended to address criticisms of Java.",
        "firstAppeared": "2004-01-01",
        "extensions": [".sc", ".scala"],
        "websites": [
          { "href": "http://www.scala-lang.org/", "title": "www.scala-lang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Scala_programming_language", "title": "Scala", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.4.0", "date": "2024-01-01" }],
        "images": [{ "kind": "other", "title": "Scala", "url": "/images/plangs/s/scala/other.png" }]
      },
      "pl+scheme": {
        "name": "Scheme",
        "description": "Scheme is a dialect of the Lisp family of programming languages. Scheme was created during the 1970s at the MIT Computer Science and Artificial Intelligence Laboratory (MIT AI Lab) and released by its developers, Guy L. Steele and Gerald Jay Sussman, via a series of memos now known as the Lambda Papers. It was the first dialect of Lisp to choose lexical scope and the first to require implementations to perform tail-call optimization, giving stronger support for functional programming and associated techniques such as recursive algorithms. It was also one of the first programming languages to support first-class continuations. It had a significant influence on the effort that led to the development of Common Lisp.",
        "firstAppeared": "1975-01-01",
        "extensions": [".scm", ".ss"],
        "websites": [
          { "href": "https://www.scheme.org/", "title": "www.scheme.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Scheme_(programming_language)", "title": "Scheme", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "other", "title": "Scheme", "url": "/images/plangs/s/scheme/other.png" }]
      },
      "pl+scratch": {
        "name": "Scratch",
        "description": "Scratch is a high-level, block-based visual programming language and website aimed primarily at children as an educational tool, with a target audience of ages 8 to 16. Users on the site can create projects on the website using a block-like interface. Scratch was conceived and designed through collaborative National Science Foundation grants awarded to Mitchel Resnick and Yasmin Kafai. Scratch is developed by the MIT Media Lab and has been translated into 70+ languages, being used in most parts of the world. Scratch is taught and used in after-school centers, schools, and colleges, as well as other public knowledge institutions. As of 15 February 2023, community statistics on the language's official website show more than 123 million projects shared by over 103 million users, over 804 million total projects ever created (including unshared projects), and more than 95 million monthly website visits.",
        "firstAppeared": "2003-01-01",
        "extensions": [".sb", ".sb2", ".sb3", ".sprite", ".sprite2", ".sprite3"],
        "websites": [
          { "href": "https://scratch.mit.edu/", "title": "scratch.mit.edu", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Scratch_(programming_language)", "title": "Scratch", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.0", "date": "2019-01-01" }],
        "images": [{ "kind": "other", "title": "Scratch", "url": "/images/plangs/s/scratch/other.png" }]
      },
      "pl+scratchjr": {
        "name": "ScratchJr",
        "description": "ScratchJr is a visual programming language designed to introduce programming skills to children ages 5–7. The app is considered an introductory programming language. It is available as a free app for iOS, Android and Chromebook.",
        "firstAppeared": "2014-01-01",
        "websites": [
          { "href": "http://www.scratchjr.org/", "title": "www.scratchjr.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/ScratchJr", "title": "ScratchJr", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "other", "title": "ScratchJr", "url": "/images/plangs/s/scratchjr/other.png" }]
      },
      "pl+scumm": {
        "name": "Script Creation Utility for Maniac Mansion",
        "description": "Script Creation Utility for Maniac Mansion (SCUMM) is a video game engine developed at Lucasfilm Games, later renamed LucasArts, to ease development on their graphic adventure game Maniac Mansion (1987). It was subsequently used as the engine for later LucasArts adventure games and Humongous Entertainment games.",
        "firstAppeared": "1987-01-01",
        "websites": [{ "href": "https://en.wikipedia.org/wiki/SCUMM", "title": "Script Creation Utility for Maniac Mansion", "kind": "wikipedia" }],
        "images": [{ "kind": "other", "title": "Script Creation Utility for Maniac Mansion", "url": "/images/plangs/s/scumm/other.png" }]
      },
      "pl+sed": {
        "name": "sed",
        "description": "sed (\"stream editor\") is a Unix utility that parses and transforms text, using a simple, compact programming language. It was developed from 1973 to 1974 by Lee E. McMahon of Bell Labs,\nand is available today for most operating systems. sed was based on the scripting features of the interactive editor ed (\"editor\", 1971) and the earlier qed (\"quick editor\", 1965–66). It was one of the earliest tools to support regular expressions, and remains in use for text processing, most notably with the substitution command. Popular alternative tools for plaintext string manipulation and \"stream editing\" include AWK and Perl.",
        "firstAppeared": "1974-01-01",
        "websites": [{ "href": "https://en.wikipedia.org/wiki/Sed", "title": "sed", "kind": "wikipedia" }],
        "images": [{ "kind": "other", "title": "sed", "url": "/images/plangs/s/sed/other.jpg" }]
      },
      "pl+seed7": {
        "name": "Seed7",
        "description": "Seed7 is an extensible general-purpose programming language designed by Thomas Mertes. It is syntactically similar to Pascal and Ada. Along with many other features, it provides an extension mechanism. Seed7 supports introducing new syntax elements and their semantics into the language, and allows new language constructs to be defined and written in Seed7. For example, programmers can introduce syntax and semantics of new statements and user defined operator symbols. The implementation of Seed7 differs significantly from that of languages with hard-coded syntax and semantics.",
        "firstAppeared": "2005-01-01",
        "extensions": [".s7i", ".sd7"],
        "websites": [
          { "href": "https://seed7.sourceforge.net/", "title": "seed7.sourceforge.net", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Seed7", "title": "Seed7", "kind": "wikipedia" }
        ]
      },
      "pl+self": {
        "name": "Self",
        "description": "Self is a general-purpose, high-level, object-oriented programming language based on the concept of prototypes. Self began as a dialect of Smalltalk, being dynamically typed and using just-in-time compilation (JIT) with the prototype-based approach to objects: it was first used as an experimental test system for language design in the 1980s and 1990s. In 2006, Self was still being developed as part of the Klein project, which was a Self virtual machine written fully in Self. The latest version, 2017.1 was released in May 2017.",
        "firstAppeared": "1987-01-01",
        "websites": [
          { "href": "http://www.selflanguage.org/", "title": "www.selflanguage.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Self_(programming_language)", "title": "Self", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2017.1", "date": "2017-01-01" }],
        "images": [{ "kind": "logo", "title": "Self", "url": "/images/plangs/s/self/logo.png" }]
      },
      "pl+shacl": {
        "name": "SHACL",
        "description": "Shapes Constraint Language (SHACL)  is a World Wide Web Consortium (W3C) standard language for describing Resource Description Framework (RDF) graphs. SHACL has been designed to enhance the semantic and technical interoperability layers of ontologies expressed as RDF graphs.",
        "websites": [
          { "href": "https://www.w3.org/TR/shacl/", "title": "www.w3.org/TR/shacl/", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/SHACL", "title": "SHACL", "kind": "wikipedia" }
        ]
      },
      "pl+shex": {
        "name": "ShEx - Shape Expressions",
        "description": "Shape Expressions (ShEx)  is a data modelling language for validating and describing a Resource Description Framework (RDF).",
        "websites": [
          { "href": "https://www.w3.org/community/shex/", "title": "www.w3.org/community/shex/", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/ShEx", "title": "ShEx - Shape Expressions", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2.1", "date": "2018-01-01" }],
        "images": [{ "kind": "logo", "title": "ShEx - Shape Expressions", "url": "/images/plangs/s/shex/logo.png" }]
      },
      "pl+simula": {
        "name": "Simula",
        "description": "Simula is the name of two simulation programming languages, Simula I and Simula 67, developed in the 1960s at the Norwegian Computing Center in Oslo, by Ole-Johan Dahl and Kristen Nygaard. Syntactically, it is an approximate superset of ALGOL 60, and was also influenced by the design of Simscript.",
        "firstAppeared": "1962-01-01",
        "websites": [
          { "href": "http://www.simula67.info/", "title": "www.simula67.info", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Simula", "title": "Simula", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "logo", "title": "Simula", "url": "/images/plangs/s/simula/logo.png" }]
      },
      "pl+simulink": {
        "name": "Simulink",
        "description": "Simulink is a MATLAB-based graphical programming environment for modeling, simulating and analyzing multidomain dynamical systems. Its primary interface is a graphical block diagramming tool and a customizable set of block libraries. It offers tight integration with the rest of the MATLAB environment and can either drive MATLAB or be scripted from it. Simulink is widely used in automatic control and digital signal processing for multidomain simulation and model-based design.",
        "websites": [
          { "href": "https://www.mathworks.com/products/simulink.html", "title": "mathworks.com", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Simulink", "title": "Simulink", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "10.7", "date": "2023-01-01" }],
        "images": [{ "kind": "other", "title": "Simulink", "url": "/images/plangs/s/simulink/other.jpg" }]
      },
      "pl+souffle": {
        "name": "Soufflé",
        "description": "Soufflé is an open source parallel logic programming language, influenced by Datalog. Soufflé includes both an interpreter and a compiler that targets parallel C++. Soufflé has been used to build static analyzers, disassemblers, and tools for binary reverse engineering. Soufflé is considered by academic researchers to be high-performance and \"state of the art,\" and is often used in benchmarks in academic papers.",
        "extensions": [".dl"],
        "websites": [
          { "href": "https://souffle-lang.github.io/", "title": "souffle-lang.github.io", "kind": "repository" },
          { "href": "https://en.wikipedia.org/wiki/Souffl%C3%A9_(programming_language)", "title": "Soufflé", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2.3" }]
      },
      "pl+sql": {
        "name": "SQL",
        "description": "Structured Query Language (SQL) (pronounced S-Q-L; historically \"sequel\") is a domain-specific language used to manage data, especially in a relational database management system (RDBMS). It is particularly useful in handling structured data, i.e., data incorporating relations among entities and variables.",
        "firstAppeared": "1974-01-01",
        "websites": [
          { "href": "https://www.iso.org/standard/76583.html", "title": "www.iso.org/standard/76583.html", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/SQL", "title": "SQL", "kind": "wikipedia" }
        ]
      },
      "pl+squeak": {
        "name": "Squeak",
        "description": "Squeak is an object-oriented, class-based, and reflective programming language. It was derived from Smalltalk-80 by a group that included some of Smalltalk-80's original developers, initially at Apple Computer, then at Walt Disney Imagineering, where it was intended for use in internal Disney projects. The group later was supported by HP Labs, SAP, and most recently, Y Combinator.",
        "firstAppeared": "1996-01-01",
        "extensions": [".changes", ".image", ".sources", ".st"],
        "websites": [
          { "href": "http://www.squeak.org/", "title": "www.squeak.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Squeak", "title": "Squeak", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "other", "title": "Squeak", "url": "/images/plangs/s/squeak/other.png" }]
      },
      "pl+squirrel": {
        "name": "Squirrel",
        "description": "Squirrel is a high level imperative, object-oriented programming language, designed to be a lightweight scripting language that fits in the size, memory bandwidth, and real-time requirements of applications like video games.",
        "firstAppeared": "2003-01-01",
        "extensions": [".nut"],
        "websites": [
          { "href": "http://squirrel-lang.org/", "title": "squirrel-lang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Squirrel_(programming_language)", "title": "Squirrel", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.2", "date": "2022-01-01" }]
      },
      "pl+standard-ml": {
        "name": "Standard ML",
        "description": "Standard ML (SML) is a general-purpose, high-level, modular, functional programming language with compile-time type checking and type inference. It is popular for writing compilers, for programming language research, and for developing theorem provers.",
        "firstAppeared": "1983-01-01",
        "extensions": [".sml"],
        "websites": [
          { "href": "https://smlfamily.github.io/", "title": "smlfamily.github.io", "kind": "repository" },
          { "href": "https://en.wikipedia.org/wiki/Standard_ML", "title": "Standard ML", "kind": "wikipedia" }
        ]
      },
      "pl+supercollider": {
        "name": "SuperCollider",
        "description": "SuperCollider is an environment and programming language originally released in 1996 by James McCartney for real-time audio synthesis and algorithmic composition.",
        "websites": [
          { "href": "http://supercollider.github.io/", "title": "supercollider.github.io", "kind": "repository" },
          { "href": "https://en.wikipedia.org/wiki/SuperCollider", "title": "SuperCollider", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.13.0", "date": "2023-01-01" }]
      },
      "pl+swi-prolog": {
        "name": "SWI-Prolog",
        "description": "SWI-Prolog is a free implementation of the programming language Prolog, commonly used for teaching and semantic web applications. It has a rich set of features, libraries for constraint logic programming, multithreading, unit testing, GUI, interfacing to Java, ODBC and others, literate programming, a web server, SGML, RDF, RDFS, developer tools (including an IDE with a GUI debugger and GUI profiler), and extensive documentation.",
        "websites": [
          { "href": "http://swi-prolog.org/", "title": "swi-prolog.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/SWI-Prolog", "title": "SWI-Prolog", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "9.2.2", "date": "2024-01-01" }, { "version": "9.3.2", "date": "2024-01-01" }]
      },
      "pl+swift": {
        "name": "Swift",
        "description": "Swift is a high-level general-purpose, multi-paradigm, compiled programming language created by Chris Lattner in 2010 for Apple Inc. and maintained by the open-source community. Swift compiles to machine code and uses an LLVM-based compiler. Swift was first released in June 2014 and the Swift toolchain has shipped in Xcode since version 6, released in 2014.",
        "firstAppeared": "2014-01-01",
        "websites": [
          { "href": "https://www.swift.org/", "title": "www.swift.org", "kind": "homepage" },
          { "href": "https://developer.apple.com/swift/", "title": "developer.apple.com/swift/", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Swift_(programming_language)", "title": "Swift", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "5.10.1", "date": "2024-01-01" }, { "version": "6.0" }],
        "images": [{ "kind": "logo", "title": "Swift", "url": "/images/plangs/s/swift/logo.png" }],
        "extensions": [".SWIFT", ".swift"]
      },
      "pl+tcl": {
        "name": "Tcl",
        "description": "Tcl (pronounced \"tickle\" or as an initialism) is a high-level, general-purpose, interpreted, dynamic programming language. It was designed with the goal of being very simple but powerful. Tcl casts everything into the mold of a command, even programming constructs like variable assignment and procedure definition. Tcl supports multiple programming paradigms, including object-oriented, imperative, functional, and procedural styles.",
        "firstAppeared": "1988-01-01",
        "extensions": [".tbc", ".tcl"],
        "websites": [
          { "href": "https://www.tcl-lang.org/", "title": "www.tcl-lang.org", "kind": "homepage" },
          { "href": "https://www.tcl.tk/", "title": "www.tcl.tk", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Tcl", "title": "Tcl", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "8.6.14", "date": "2024-01-01" }]
      },
      "pl+tcsh": {
        "name": "TENEX C Shell",
        "description": "tcsh (/ˌtiːˈsiːʃɛl/ “tee-see-shell”, /ˈtiːʃɛl/ “tee-shell”, or as “tee see ess aitch”, tcsh) is a Unix shell based on and backward compatible with the C shell (csh).",
        "websites": [
          { "href": "http://www.tcsh.org/", "title": "www.tcsh.org", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Tcsh", "title": "TENEX C Shell", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "6.24.13", "date": "2024-01-01" }],
        "images": [{ "kind": "other", "title": "TENEX C Shell", "url": "/images/plangs/t/tcsh/other.png" }]
      },
      "pl+tex": {
        "name": "TeX",
        "description": "TeX  (/tɛx/, see below), stylized within the system as TeX, is a typesetting program which was designed and written by computer scientist and Stanford University professor Donald Knuth and first released in 1978. The term now refers to the system of extensions - which includes software programs called TeX engines, sets of TeX macros, and packages which provide extra typesetting functionality - built around the original TeX language.  TeX is a popular means of typesetting complex mathematical formulae; it has been noted as one of the most sophisticated digital typographical systems.",
        "websites": [
          { "href": "http://tug.org/", "title": "tug.org", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/TeX", "title": "TeX", "kind": "wikipedia" }
        ]
      },
      "pl+tk": {
        "name": "Tk",
        "description": "Tk is a cross-platform widget toolkit that provides a library of basic elements of GUI widgets for building a graphical user interface (GUI) in many programming languages. It is free and open-source software released under a BSD-style software license.",
        "websites": [
          { "href": "http://www.tcl.tk/", "title": "tcl.tk", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Tk_(software)", "title": "Tk", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "8.6.13", "date": "2022-01-01" }],
        "images": [{ "kind": "other", "title": "Tk", "url": "/images/plangs/t/tk/other.png" }]
      },
      "pl+turbo-pascal": {
        "name": "Turbo Pascal",
        "description": "Turbo Pascal is a software development system that includes a compiler and an integrated development environment (IDE) for the programming language Pascal running on the operating systems CP/M, CP/M-86, and DOS. It was originally developed by Anders Hejlsberg at Borland, and was notable for its very fast compiling. Turbo Pascal, and the later but similar Turbo C, made Borland a leader in PC-based development tools.",
        "websites": [{ "href": "https://en.wikipedia.org/wiki/Turbo_Pascal", "title": "Turbo Pascal", "kind": "wikipedia" }]
      },
      "pl+txl": {
        "name": "TXL",
        "description": "TXL is a special-purpose programming language originally designed by Charles Halpern-Hamu and James Cordy at the University of Toronto in 1985.  The acronym \"TXL\" originally stood for \"Turing eXtender Language\" after the language's original purpose, the specification and rapid prototyping of variants and extensions of the Turing programming language, but no longer has any meaningful interpretation.",
        "websites": [
          { "href": "https://www.txl.ca/", "title": "www.txl.ca", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/TXL_(programming_language)", "title": "TXL", "kind": "wikipedia" }
        ]
      },
      "pl+typescript": {
        "name": "TypeScript",
        "description": "TypeScript is a free and open-source high-level programming language developed by Microsoft that adds static typing with optional type annotations to JavaScript. It is designed for the development of large applications and transpiles to JavaScript. Because TypeScript is a superset of JavaScript, all JavaScript programs are syntactically valid TypeScript, but they can fail to type-check for safety reasons.",
        "firstAppeared": "2012-01-01",
        "extensions": [".cts", ".mts", ".ts", ".tsx"],
        "websites": [
          { "href": "https://www.typescriptlang.org/", "title": "www.typescriptlang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/TypeScript", "title": "TypeScript", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "5.5.4", "date": "2024-01-01" }],
        "isMainstream": true,
        "isTranspiler": true
      },
      "pl+v": {
        "name": "V",
        "description": "V, also known as vlang, is a statically typed, compiled programming language created by Alexander Medvednikov in early 2019. It was inspired by the language Go, and other influences including Oberon, Swift, and Rust. It is free and open-source software released under the MIT License, and currently in beta.",
        "firstAppeared": "2019-01-01",
        "extensions": [".v", ".vsh"],
        "websites": [
          { "href": "http://vlang.io/", "title": "vlang.io", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/V_(programming_language)", "title": "V", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "0.4.6", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "V", "url": "/images/plangs/v/v/logo.png" }]
      },
      "pl+v8": {
        "name": "V8",
        "description": "V8 is a JavaScript and WebAssembly engine developed by Google for its Chrome browser. V8 is free and open-source software that is part of the Chromium project and also used separately in non-browser contexts, notably the Node.js runtime system.",
        "websites": [
          { "href": "https://v8.dev/", "title": "v8.dev", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/V8_(JavaScript_engine)", "title": "V8", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "11.4", "date": "2023-01-01" }]
      },
      "pl+vala": {
        "name": "Vala",
        "description": "Vala is an object-oriented programming language with a self-hosting compiler that generates C code and uses the GObject system.",
        "firstAppeared": "2006-01-01",
        "extensions": [".vala", ".vapi"],
        "websites": [
          { "href": "https://vala.dev/", "title": "vala.dev", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Vala_(programming_language)", "title": "Vala", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "0.57.0", "date": "2023-01-01" }],
        "images": [{ "kind": "logo", "title": "Vala", "url": "/images/plangs/v/vala/logo.png" }]
      },
      "pl+visual-basic": {
        "name": "Visual Basic",
        "description": "Visual Basic (VB), originally called Visual Basic .NET (VB.NET), is a multi-paradigm, object-oriented programming language, implemented on .NET, Mono, and the .NET Framework. Microsoft launched VB.NET in 2002 as the successor to its original Visual Basic language, the last version of which was Visual Basic 6.0. Although the \".NET\" portion of the name was dropped in 2005, this article uses \"Visual Basic [.NET]\" to refer to all Visual Basic languages released since 2002, in order to distinguish between them and the classic Visual Basic. Along with C# and F#, it is one of the three main languages targeting the .NET ecosystem. Microsoft updated its VB language strategy on 6 February 2023, stating that VB is a stable language now and Microsoft will keep maintaining it.",
        "firstAppeared": "2001-01-01",
        "websites": [
          { "href": "https://docs.microsoft.com/dotnet/visual-basic/", "title": "docs.microsoft.com/dotnet/visual-basic/", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Visual_Basic_(.NET)", "title": "Visual Basic", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "17.9.2", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Visual Basic", "url": "/images/plangs/v/visual-basic/logo.png" }],
        "extensions": [".vb"]
      },
      "pl+vvvv": {
        "name": "vvvv",
        "description": "vvvv (German pronunciation: [faʊfiːɐ̯] = \"Vau Vier\" or \"v4\") is a digital general purpose toolkit with a special focus on real-time video synthesis and programming large media environments with physical interfaces, real-time motion graphics, audio and video. vvvv uses a dataflow approach and a visual programming interface for rapid prototyping and developing.  Applications written in vvvv are commonly called patches. Patches consist of a network of nodes. Patches can be created, edited and tested while they are running. Patches are stored on the disk in standard XML format. vvvv is written in Borland Delphi, and plugins can be developed in the .NET Framework in C#.",
        "firstAppeared": "1998-01-01",
        "websites": [
          { "href": "http://www.vvvv.org/", "title": "www.vvvv.org", "kind": "homepage" },
          { "href": "http://www.visualprogramming.net/", "title": "www.visualprogramming.net", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Vvvv", "title": "vvvv", "kind": "wikipedia" }
        ],
        "images": [{ "kind": "logo", "title": "vvvv", "url": "/images/plangs/v/vvvv/logo.png" }]
      },
      "pl+whiley": {
        "name": "Whiley",
        "description": "Whiley is an experimental programming language that combines features from the functional and imperative paradigms, and supports formal specification through function preconditions, postconditions and loop invariants. The language uses flow-sensitive typing also known as \"flow typing.\"",
        "firstAppeared": "2010-01-01",
        "websites": [
          { "href": "http://whiley.org/", "title": "whiley.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Whiley_(programming_language)", "title": "Whiley", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "0.6.1", "date": "2022-01-01" }]
      },
      "pl+wolfram-language": {
        "name": "Wolfram Language",
        "description": "The Wolfram Language (/ˈwʊlfrəm/ WUUL-frəm) is a proprietary, general, very high-level multi-paradigm programming language developed by Wolfram Research. It emphasizes symbolic computation, functional programming, and rule-based programming and can employ arbitrary structures and data. It is the programming language of the mathematical symbolic computation program Mathematica.",
        "firstAppeared": "1988-01-01",
        "extensions": [".m", ".nb", ".wl"],
        "websites": [
          { "href": "https://www.wolfram.com/language/", "title": "www.wolfram.com/language/", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Wolfram_language", "title": "Wolfram Language", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "14.1.0", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Wolfram Language", "url": "/images/plangs/w/wolfram-language/logo.png" }]
      },
      "pl+xojo": {
        "name": "Xojo",
        "description": "The Xojo programming environment and programming language is developed and commercially marketed by Xojo, Inc. of Austin, Texas for software development targeting macOS, Microsoft Windows, Linux, iOS, Android, the Web and Raspberry Pi. Xojo uses a proprietary object-oriented language.",
        "websites": [
          { "href": "http://xojo.com/", "title": "xojo.com", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Xojo", "title": "Xojo", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.1", "date": "2023-01-01" }],
        "images": [{ "kind": "logo", "title": "Xojo", "url": "/images/plangs/x/xojo/logo.png" }]
      },
      "pl+xpath": {
        "name": "XPath",
        "description": "XPath (XML Path Language) is an expression language designed to support the query or transformation of XML documents. It was defined by the World Wide Web Consortium (W3C) in 1999, and can be used to compute values (e.g., strings, numbers, or Boolean values) from the content of an XML document. Support for XPath exists in applications that support XML, such as web browsers, and many programming languages.",
        "firstAppeared": "1998-01-01",
        "websites": [{ "href": "https://en.wikipedia.org/wiki/XPath", "title": "XPath", "kind": "wikipedia" }],
        "releases": [{ "version": "3.1", "date": "2017-01-01" }]
      },
      "pl+xproc": {
        "name": "XProc",
        "description": "XProc is a W3C Recommendation to define an XML transformation language to define XML Pipelines.",
        "extensions": [".xpl"],
        "websites": [{ "href": "https://en.wikipedia.org/wiki/XProc", "title": "XProc", "kind": "wikipedia" }]
      },
      "pl+xquery": {
        "name": "XQuery",
        "description": "XQuery (XML Query) is a query and functional programming language that queries and transforms collections of structured and unstructured data, usually in the form of XML, text and with vendor-specific extensions for other data formats (JSON, binary, etc.). The language is developed by the XML Query working group of the W3C. The work is closely coordinated with the development of XSLT  by the XSL Working Group; the two groups share responsibility for XPath, which is a subset of XQuery.",
        "firstAppeared": "2007-01-01",
        "extensions": [".xq", ".xql", ".xqm", ".xquery", ".xqy"],
        "websites": [
          { "href": "http://www.w3.org/XML/Query/", "title": "www.w3.org/XML/Query/", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/XQuery", "title": "XQuery", "kind": "wikipedia" }
        ]
      },
      "pl+xsb": {
        "name": "XSB",
        "description": "XSB is the name of a dialect of the Prolog programming language and its implementation developed at Stony Brook University in collaboration with the Katholieke Universiteit Leuven, the New University of Lisbon, Uppsala University and software vendor XSB, Inc.",
        "extensions": [".P"],
        "websites": [
          { "href": "https://xsb.sourceforge.net/", "title": "Sourceforge.net", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/XSB", "title": "XSB", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "5.0", "date": "2022-01-01" }]
      },
      "pl+xslt": {
        "name": "XSLT",
        "description": "XSLT (Extensible Stylesheet Language Transformations) is a language originally designed for transforming XML documents into other XML documents, or other formats such as HTML for web pages, plain text or XSL Formatting Objects, which may subsequently be converted to other formats, such as PDF, PostScript and PNG. Support for JSON and plain-text transformation was added in later updates to the XSLT 1.0 specification.",
        "firstAppeared": "1998-01-01",
        "extensions": [".xslt"],
        "websites": [
          { "href": "https://www.w3.org/TR/xslt-30/", "title": "www.w3.org/TR/xslt-30/", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/XSLT", "title": "XSLT", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "3.0", "date": "2017-01-01" }]
      },
      "pl+xtend": {
        "name": "Xtend",
        "description": "Xtend is a general-purpose high-level programming language for the Java Virtual Machine. Syntactically and semantically Xtend has its roots in the Java programming language but focuses on a more concise syntax and some additional functionality such as type inference, extension methods, and operator overloading. Being primarily an object-oriented language, it also integrates features known from functional programming, e.g. lambda expressions. Xtend is statically typed and uses Java's type system without modifications. It is compiled to Java code and thereby seamlessly integrates with all existing Java libraries.",
        "firstAppeared": "2011-01-01",
        "websites": [
          { "href": "https://eclipse.dev/Xtext/xtend/", "title": "eclipse.dev/Xtext/xtend/", "kind": "other" },
          { "href": "https://en.wikipedia.org/wiki/Xtend", "title": "Xtend", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2.25.0", "date": "2021-01-01" }]
      },
      "pl+yabasic": {
        "name": "Yabasic",
        "description": "Yabasic (Yet Another BASIC) is a free, open-source BASIC interpreter for Microsoft Windows and Unix platforms. Yabasic was originally developed by Marc-Oliver Ihm, who released the last stable version 2.77.3 in 2016. From version 2.77.1, the project has adopted the MIT License as well as the source code being moved to GitHub to encourage others to participate in its development.",
        "websites": [
          { "href": "http://www.yabasic.de/", "title": "www.yabasic.de", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Yabasic", "title": "Yabasic", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "2.90.4", "date": "2023-01-01" }],
        "images": [{ "kind": "other", "title": "Yabasic", "url": "/images/plangs/y/yabasic/other.png" }]
      },
      "pl+yacc": {
        "name": "Yacc",
        "description": "Yacc (Yet Another Compiler-Compiler) is a computer program for the Unix operating system developed by Stephen C. Johnson.  It is a lookahead left-to-right rightmost derivation (LALR) parser generator, generating a LALR parser (the part of a compiler that tries to make syntactic sense of the source code) based on a formal grammar, written in a notation similar to Backus–Naur form (BNF). Yacc is supplied as a standard utility on BSD and AT&T Unix. GNU-based Linux distributions include Bison, a forward-compatible Yacc replacement.",
        "websites": [{ "href": "https://en.wikipedia.org/wiki/Yacc", "title": "Yacc", "kind": "wikipedia" }]
      },
      "pl+zig": {
        "name": "Zig",
        "description": "Zig is an imperative, general-purpose, statically typed, compiled system programming language designed by Andrew Kelley. It is intended as a successor to the language C, with the intent of being even smaller and simpler to program in, while offering more function. It is free and open-source software, released under an MIT License.",
        "firstAppeared": "2016-01-01",
        "extensions": [".zig", ".zigr", ".zir", ".zon"],
        "websites": [
          { "href": "https://ziglang.org/", "title": "ziglang.org", "kind": "homepage" },
          { "href": "https://en.wikipedia.org/wiki/Zig_(programming_language)", "title": "Zig", "kind": "wikipedia" }
        ],
        "releases": [{ "version": "0.13.0", "date": "2024-01-01" }],
        "images": [{ "kind": "logo", "title": "Zig", "url": "/images/plangs/z/zig/logo.png" }]
      }
    },
    "plat": {
      "plat+cross": {
        "name": "Cross-Platform",
        "keywords": ["cross-platform", "multi-platform"],
        "description": "Cross-platform software is designed to run on multiple operating systems or hardware architectures.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Cross-platform", "title": "Cross-Platform" }]
      },
      "plat+.net": {
        "name": ".NET",
        "keywords": ["dotnet", ".net", "C#", "CLR", "Common Language Runtime", "CLI"],
        "description": ".NET is a free and open-source software framework developed by Microsoft for building cross-platform applications.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/.NET", "title": ".NET" }]
      },
      "plat+x86-64": {
        "name": "x86-64",
        "keywords": ["amd64", "x86-64", "x64"],
        "description": "x86-64 is the 64-bit architecture for x86 processors, developed by AMD and used in modern processors from both Intel and AMD.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/x86-64", "title": "x86-64" }]
      },
      "plat+arm": {
        "name": "ARM",
        "keywords": ["arm32", "arm64", "aarch64", "armel", "armhf", "armv7"],
        "description": "ARM architecture is widely used in mobile devices and embedded systems, supporting 32-bit and 64-bit instruction sets.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/ARM_architecture", "title": "ARM Architecture" }]
      },
      "plat+apple": {
        "name": "Apple (macOS, iOS, etc.)",
        "keywords": ["macos", "ios", "tvos", "watchos", "visionos", "m1", "m2", "apple silicon"],
        "description": "Apple's family of operating systems includes macOS for desktops, iOS for mobile, tvOS for Apple TV, watchOS for Apple Watch, and visionOS for mixed reality.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Apple_silicon", "title": "Apple Silicon" }]
      },
      "plat+android": {
        "name": "Android",
        "keywords": ["android"],
        "description": "Android is a mobile operating system developed by Google, widely used in smartphones and other devices.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Android_(operating_system)", "title": "Android" }]
      },
      "plat+linux": {
        "name": "Linux",
        "keywords": ["linux", "gnu/linux", "ubuntu", "debian", "centos", "redhat", "openSUSE"],
        "description": "Linux is a family of open-source Unix-like operating systems, with various distributions such as Ubuntu, Debian, CentOS, and Red Hat Enterprise Linux.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Linux", "title": "Linux" }]
      },
      "plat+windows": {
        "name": "Microsoft Windows",
        "keywords": ["windows", "win32", "win64", "windows 10", "windows 11"],
        "description": "Microsoft Windows is a series of operating systems developed by Microsoft, with versions for both personal computers and servers.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Microsoft_Windows", "title": "Microsoft Windows" }]
      },
      "plat+bsd": {
        "name": "BSD",
        "keywords": ["bsd", "freebsd", "openbsd", "netbsd", "dragonflybsd"],
        "description": "BSD is a family of Unix-like operating systems derived from the Berkeley Software Distribution, including FreeBSD, OpenBSD, and NetBSD.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/BSD", "title": "BSD" }]
      },
      "plat+riscv": {
        "name": "RISC-V",
        "keywords": ["riscv", "risc-v", "open isa"],
        "description": "RISC-V is an open standard instruction set architecture (ISA) based on the reduced instruction set computer (RISC) principles.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/RISC-V", "title": "RISC-V" }]
      },
      "plat+java": {
        "name": "Java",
        "keywords": ["java", "jdk", "java-se", "jre", "java development kit"],
        "description": "Java is a high-level, class-based, object-oriented programming language and computing platform.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Java_(software_platform)", "title": "Java" }]
      },
      "plat+wasm": {
        "name": "WebAssembly",
        "keywords": ["wasm", "webassembly"],
        "description": "WebAssembly (Wasm) is a binary instruction format for a stack-based virtual machine, enabling high-performance applications in web environments.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/WebAssembly", "title": "WebAssembly" }]
      },
      "plat+dos": {
        "name": "DOS",
        "keywords": ["dos", "ms-dos", "pc-dos"],
        "description": "DOS (Disk Operating System) refers to a family of operating systems primarily for IBM PCs, known for its command-line interface.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/MS-DOS", "title": "MS-DOS" }]
      },
      "plat+arduino": {
        "name": "Arduino",
        "keywords": ["arduino", "microcontroller"],
        "description": "Arduino is an open-source electronics platform based on easy-to-use hardware and software, popular for building embedded systems.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Arduino", "title": "Arduino" }]
      },
      "plat+embedded": {
        "name": "Embedded Systems",
        "keywords": ["embedded", "embedded systems", "microcontroller"],
        "description": "An embedded system is a microprocessor-based hardware system with software designed to perform a specific function, often real-time.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Embedded_system", "title": "Embedded Systems" }]
      },
      "plat+erlang": {
        "name": "Erlang",
        "keywords": ["erlang", "otp"],
        "description": "Erlang Open Telecom Platform (OTP) is a collection of useful middleware, libraries, and tools written in the Erlang programming language.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Erlang_(programming_language)", "title": "Erlang" },
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Open_Telecom_Platform", "title": "Open Telecom Platform" }
        ]
      },
      "plat+nodejs": {
        "name": "Node.js",
        "keywords": ["nodejs", "javascript", "js", "server-side javascript"],
        "description": "Node.js is an open-source, cross-platform JavaScript runtime environment that executes JavaScript code outside a web browser.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Node.js", "title": "Node.js" }]
      },
      "plat+raspberry": {
        "name": "Raspberry Pi",
        "keywords": ["raspberry pi", "pi", "single-board computer"],
        "description": "Raspberry Pi is a low-cost, single-board computer designed to promote teaching of computer science in schools and developing countries.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Raspberry_Pi", "title": "Raspberry Pi" }]
      },
      "plat+esp32": {
        "name": "ESP32",
        "keywords": ["esp32", "esp8266", "microcontroller", "wifi", "bluetooth"],
        "description": "ESP32 is a series of low-cost, low-power system-on-chip microcontrollers with integrated Wi-Fi and dual-mode Bluetooth.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/ESP32", "title": "ESP32" }]
      }
    },
    "tag": {
      "tag+3dg": {
        "name": "3D Computer Graphics",
        "keywords": ["3D graphics", "rendering", "visualization"],
        "description": "Software and tools for creating and manipulating 3D models and rendering graphics.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/3D_computer_graphics", "title": "3D Computer Graphics" }]
      },
      "tag+4gl": {
        "name": "4GL",
        "keywords": ["4GL", "fourth-generation language", "high-level language"],
        "description": "Fourth-generation programming languages designed to be more abstract and easier to use than third-generation languages.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/4GL", "title": "4GL" }]
      },
      "tag+framework": {
        "name": "Application Framework",
        "keywords": ["framework"],
        "description": "A software framework that provides a structure for developing software applications.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Application_framework", "title": "Application Framework" }]
      },
      "tag+server": {
        "name": "Application Server",
        "keywords": ["application server", "backend server", "middleware"],
        "description": "A server that hosts and runs applications, providing essential services for enterprise-level systems.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Application_server", "title": "Application Server" }]
      },
      "tag+app": {
        "name": "Application Software",
        "keywords": ["applications"],
        "description": "Software designed to perform specific tasks for users.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Application_software", "title": "Application Software" }]
      },
      "tag+asm": {
        "name": "Assembler",
        "keywords": ["asm", "assembler", "assembly language", "low-level programming"],
        "description": "Software that translates assembly language code into machine code.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Assembly_language#Assembler", "title": "Assembler" }]
      },
      "tag+audio-dev": {
        "name": "Audio Programming",
        "keywords": ["audio", "sound", "synthesis", "audio processing"],
        "description": "Languages and environments designed for programming and synthesizing sound.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Audio_programming_language", "title": "Audio Programming Language" }
        ]
      },
      "tag+automation": {
        "name": "Automation",
        "keywords": ["automation", "automated processes", "workflow"],
        "description": "Software tools that automate repetitive tasks and processes.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Automation", "title": "Automation" }]
      },
      "tag+collab": {
        "name": "Collaborative Software",
        "keywords": ["collaborative software", "collaboration tools", "groupware", "collab"],
        "description": "Software designed to help multiple users work together on tasks and projects.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Collaborative_software", "title": "Collaborative Software" }]
      },
      "tag+cli": {
        "name": "Command Line Interface",
        "keywords": ["CLI", "command-line interface"],
        "description": "Text-based input given to a computer to perform specific tasks.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Command_(computing)", "title": "Command" }]
      },
      "tag+scripting": {
        "name": "Scripting",
        "keywords": ["scripting", "command language", "command-based language", "scripting language"],
        "description": "A language used to write commands for controlling a system or application.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Scripting_language", "title": "Scripting Language" }]
      },
      "tag+compiler": {
        "name": "Compiler",
        "keywords": ["compiler", "source code translator", "code optimization"],
        "description": "Software that translates high-level programming languages into machine code or another form.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Compiler", "title": "Compiler" }]
      },
      "tag+cas": {
        "name": "Computer Algebra System",
        "keywords": ["computer algebra", "symbolic computation", "algebra system"],
        "description": "Software systems that facilitate symbolic mathematical computations.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Computer_algebra_system", "title": "Computer Algebra System" }]
      },
      "tag+dataq": {
        "name": "Data Acquisition",
        "keywords": ["acquisition", "DAQ", "data collection"],
        "description": "Tools and systems designed to gather and analyze data from various sources.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Data_acquisition", "title": "Data Acquisition" }]
      },
      "tag+analysis": {
        "name": "Data Analysis",
        "keywords": ["analysis", "data processing", "big data"],
        "description": "Software tools designed to analyze and interpret large datasets.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Data_analysis", "title": "Data Analysis" }]
      },
      "tag+dbms": {
        "name": "Database Management System (DBMS)",
        "keywords": ["dbms", "database", "data storage", "relational database", "rdbmds", "gdbms"],
        "description": "Software for managing and interacting with databases.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Database_management_system", "title": "Database Management System (DBMS)" }
        ]
      },
      "tag+dataflow": {
        "name": "Dataflow Programming",
        "keywords": ["dataflow", "data-driven", "dataflow architecture"],
        "description": "A programming paradigm where the flow of data determines the execution of operations.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Dataflow_programming", "title": "Dataflow Programming" }]
      },
      "tag+decision": {
        "name": "Decision-making Software",
        "keywords": ["decision-making", "decision support", "DSS"],
        "description": "Tools designed to assist in making business and technical decisions.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Decision-making_software", "title": "Decision-making Software" }]
      },
      "tag+edu": {
        "name": "Educational Software",
        "keywords": ["educational software", "e-learning", "education technology"],
        "description": "Software designed to facilitate learning and instruction.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Educational_software", "title": "Educational Software" }]
      },
      "tag+embedded": {
        "name": "Embedded System",
        "keywords": ["embedded system", "firmware", "real-time systems"],
        "description": "A combination of hardware and software designed to perform a dedicated function.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Embedded_operating_system", "title": "Embedded Operating System" },
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Embedded_system", "title": "Embedded System" }
        ]
      },
      "tag+flow": {
        "name": "Flow-Based Programming",
        "keywords": ["flow-based programming", "FBP", "data flow"],
        "description": "A programming paradigm where applications are defined as networks of black-box processes that exchange data across predefined connections.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Flow-based_programming", "title": "Flow-Based Programming" }]
      },
      "tag+multivar": {
        "name": "Multivariate Analysis",
        "keywords": ["multivariate analysis", "statistical analysis", "data analysis"],
        "description": "Techniques used to analyze data that involves multiple variables to understand relationships and patterns.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Multivariate_analysis", "title": "Multivariate Analysis" }]
      },
      "tag+games": {
        "name": "Games",
        "keywords": ["game engine", "game development", "gamedev", "games"],
        "description": "Software frameworks designed for the development and creation of video games.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Game_engine", "title": "Game Engine" }]
      },
      "tag+genomics": {
        "name": "Genomics",
        "keywords": ["genomics", "bioinformatics", "genetic analysis"],
        "description": "Software for studying and analyzing genomes and genetic data.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Genomics", "title": "Genomics" }]
      },
      "tag+ui": {
        "name": "User Interface",
        "keywords": ["UI", "GUI", "interface design"],
        "description": "Software tools for designing and building user interfaces.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Graphical_user_interface", "title": "User Interface" }]
      },
      "tag+industrial": {
        "name": "Industrial Control",
        "keywords": ["industrial", "control", "automation", "SCADA"],
        "description": "Systems and software used to control and monitor industrial processes.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Industrial_control_system", "title": "Industrial Control" }]
      },
      "tag+viz": {
        "name": "Information Visualization",
        "keywords": ["data visualization", "information", "visualization", "data analysis", "viz"],
        "description": "Software for visually representing complex data to assist in understanding patterns and trends.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Information_visualization", "title": "Information Visualization" }]
      },
      "tag+instrument_control": {
        "name": "Instrument Control",
        "keywords": ["instrument control", "automation", "measurement"],
        "description": "Software used to control scientific and industrial instruments.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Instrument_control", "title": "Instrument Control" }]
      },
      "tag+if": {
        "name": "Interactive Fiction",
        "keywords": ["interactive fiction", "text-based games"],
        "description": "Software for creating and playing narrative-driven interactive stories.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Interactive_fiction", "title": "Interactive Fiction" }]
      },
      "tag+iot": {
        "name": "Internet of Things",
        "keywords": ["IoT", "connected devices", "smart devices"],
        "description": "Software and platforms designed to connect and manage IoT devices and networks.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Internet_of_things", "title": "Internet of Things" }]
      },
      "tag+interpreter": {
        "name": "Interpreter",
        "keywords": ["interpreter", "programming language", "runtime execution"],
        "description": "Software that directly executes instructions written in a programming language without requiring them to be compiled into machine code.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Interpreter_(computing)", "title": "Interpreter" }]
      },
      "tag+sci": {
        "name": "Scientific Computing",
        "keywords": ["scientific computing", "numerical analysis", "computational science"],
        "description": "Software designed for performing scientific calculations and simulations.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/List_of_numerical-analysis_software", "title": "Scientific Computing" }
        ]
      },
      "tag+stats": {
        "name": "Statistics",
        "keywords": ["statistics", "data analysis", "statistical software"],
        "description": "Software for statistical analysis and modeling of data.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/List_of_statistical_packages", "title": "Statistics" }]
      },
      "tag+low-code": {
        "name": "Low Code",
        "keywords": ["low code", "development platform", "rapid development"],
        "description": "Development platforms that enable users to create applications with minimal hand-coding.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Low-code_development_platform", "title": "Low Code" }]
      },
      "tag+midi": {
        "name": "MIDI",
        "keywords": ["MIDI", "music technology", "digital audio"],
        "description": "Musical Instrument Digital Interface (MIDI) protocol and software for controlling music hardware and software.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/MIDI", "title": "MIDI" }]
      },
      "tag+modeling": {
        "name": "Mathematical Modeling",
        "keywords": ["mathematical modeling", "simulation", "mathematics"],
        "description": "Software used for creating mathematical models and simulations.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Mathematical_modeling", "title": "Mathematical Modeling" }]
      },
      "tag+modular": {
        "name": "Modular Music Software",
        "keywords": ["modular music", "music studio", "synthesizers"],
        "description": "Software for creating and organizing music using modular components.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Modular_software_music_studio", "title": "Modular Music Software" }
        ]
      },
      "tag+multimedia": {
        "name": "Multimedia",
        "keywords": ["multimedia", "audio-visual", "interactive media"],
        "description": "Software for creating and manipulating multimedia content, including audio, video, and graphics.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Multimedia", "title": "Multimedia" }]
      },
      "tag+numeric": {
        "name": "Numeric Computation",
        "keywords": ["numeric computation", "numerical analysis", "scientific computing"],
        "description": "Software for performing numeric computations and algorithms.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Numeric_computation", "title": "Numeric Computation" }]
      },
      "tag+proofs": {
        "name": "Proof Assistant",
        "keywords": ["proof assistant", "formal verification", "theorem proving"],
        "description": "Software used to assist in proving mathematical theorems and verifying logical correctness.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Proof_assistant", "title": "Proof Assistant" }]
      },
      "tag+rad": {
        "name": "Rapid Application Development",
        "keywords": ["RAD", "rapid development", "software development methodology"],
        "description": "A software development methodology focused on rapid prototyping and iterative development.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Rapid_Application_Development", "title": "Rapid Application Development" }
        ]
      },
      "tag+ray-tracer": {
        "name": "Ray Tracer",
        "keywords": ["ray tracing", "ray tracer", "3D rendering", "graphics"],
        "description": "Software that uses ray tracing to generate realistic lighting and shadows in 3D environments.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Ray_tracing_(graphics)", "title": "Ray Tracer" }]
      },
      "tag+dsp": {
        "name": "Digital Signal Processing",
        "keywords": ["signal processing", "DSP", "data analysis"],
        "description": "Software for analyzing and manipulating signals, often used in audio and telecommunications.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Signal_processing", "title": "Signal Processing" }]
      },
      "tag+testing": {
        "name": "Test Automation",
        "keywords": ["test automation", "software testing", "quality assurance", "testing"],
        "description": "Tools that automatically execute tests on software to ensure quality and performance.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Test_automation", "title": "Test Automation" }]
      },
      "tag+shell": {
        "name": "Shell",
        "keywords": ["shell", "command-line interface", "CLI"],
        "description": "A command-line interface that interprets text commands to control the operating system.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Shell_(computing)", "title": "Shell" }]
      },
      "tag+editor": {
        "name": "Text Editor",
        "keywords": ["text editor", "code editor", "plain text", "editor"],
        "description": "Software used to create and edit text, often optimized for coding or document editing.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Text_editor", "title": "Text Editor" }]
      },
      "tag+uml": {
        "name": "Unified Modeling Language (UML)",
        "keywords": ["UML", "software design", "system modeling"],
        "description": "A standardized modeling language used in software engineering to visualize system architecture and design.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Unified_Modeling_Language", "title": "Unified Modeling Language (UML)" }
        ]
      },
      "tag+video": {
        "name": "Video Editor",
        "keywords": ["video editor", "video production", "multimedia"],
        "description": "Software used to edit video footage and produce multimedia projects.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Video_editing_software", "title": "Video Editor" }]
      },
      "tag+wavelet": {
        "name": "Wavelet Analysis",
        "keywords": ["wavelet analysis", "signal processing", "mathematics"],
        "description": "A mathematical technique used for analyzing waveforms and signals, often in signal processing.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Wavelet", "title": "Wavelet Analysis" }]
      },
      "tag+workflow": {
        "name": "Workflow Automation",
        "keywords": ["workflow automation", "business automation", "process automation"],
        "description": "Tools that automate business workflows to improve efficiency and reduce manual tasks.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Workflow_automation", "title": "Workflow Automation" }]
      }
    },
    "tool": {
      "tool+pixi": {
        "name": "Pixi",
        "keywords": ["package manager", "dependency manager", "package management"],
        "description": "Pixi is a package management tool for developers. It allows the developer to install libraries and applications in a reproducible way. Use pixi cross-platform, on Windows, Mac and Linux.",
        "websites": [{ "href": "https://pixi.sh/", "title": "Pixi", "kind": "homepage" }]
      },
      "tool+ruff": {
        "name": "Ruff",
        "keywords": ["linter", "formatter", "code quality"],
        "description": "An extremely fast Python linter and code formatter, written in Rust.",
        "websites": [{ "href": "https://docs.astral.sh/ruff/", "title": "Ruff", "kind": "homepage" }]
      },
      "tool+pyright": {
        "name": "Pyright",
        "keywords": ["type checker", "static analysis", "type inference"],
        "description": "Pyright is a full-featured, standards-compliant static type checker for Python. It is designed for high performance and can be used with large Python source bases.",
        "websites": [{ "href": "https://microsoft.github.io/pyright/", "kind": "homepage", "title": "Pyright" }]
      },
      "tool+vscode-python": {
        "name": "Python for Visual Studio Code",
        "keywords": ["intellisense", "debugging", "linting", "formatting", "refactoring"],
        "description": "Python language support with extension access points for IntelliSense (Pylance), Debugging (Python Debugger), linting, formatting, refactoring, unit tests, and more.",
        "websites": [
          {
            "href": "https://marketplace.visualstudio.com/items?itemName=ms-python.python",
            "title": "Python for Visual Studio Code",
            "kind": "homepage"
          }
        ]
      }
    },
    "tsys": {
      "tsys+affine": {
        "name": "Affine Type System",
        "keywords": ["affine"],
        "description": "An affine type system enforces that variables are used at most once, allowing for optimizations such as memory reuse.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Affine_type_system", "title": "Affine Type System" }]
      },
      "tsys+dependent": {
        "name": "Dependent Typing",
        "keywords": ["dependent"],
        "description": "Dependent typing is a type system where types depend on terms, allowing for more expressive type constraints.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Dependent_typing", "title": "Dependent Typing" }]
      },
      "tsys+duck": {
        "name": "Duck Typing",
        "keywords": ["duck"],
        "description": "Duck typing is a style of dynamic typing where an object's behavior determines its type rather than its inheritance.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Duck_typing", "title": "Duck Typing" }]
      },
      "tsys+dynamic": {
        "name": "Dynamic Typing",
        "keywords": ["dynamic"],
        "description": "Dynamic typing defers type checking until runtime, allowing variables to hold different types at different times.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Dynamic_typing", "title": "Dynamic Typing" }]
      },
      "tsys+flow": {
        "name": "Flow-Sensitive Typing",
        "keywords": ["flow"],
        "description": "Flow-sensitive typing is a type system where the types of variables can change based on control flow in the program.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Flow-sensitive_typing", "title": "Flow-Sensitive Typing" }]
      },
      "tsys+gradual": {
        "name": "Gradual Typing",
        "keywords": ["gradual"],
        "description": "Gradual typing allows mixing statically and dynamically typed code, progressively introducing type annotations.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Gradual_typing", "title": "Gradual Typing" }]
      },
      "tsys+inferred": {
        "name": "Inferred Type System",
        "keywords": ["implicit", "hindley", "milner", "inferred"],
        "description": "A type inference system where types are automatically deduced without requiring explicit type annotations.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Type_inference", "title": "Type Inference" },
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_system", "title": "Hindley-Milner Type System" }
        ]
      },
      "tsys+latent": {
        "name": "Latent Typing",
        "keywords": ["latent"],
        "description": "Latent typing is a dynamic typing model where type constraints are deferred until runtime, similar to duck typing.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Latent_typing", "title": "Latent Typing" }]
      },
      "tsys+manifest": {
        "name": "Manifest Typing",
        "keywords": ["manifest"],
        "description": "Manifest typing is a type system in which all variables are explicitly typed in the code, usually associated with static typing.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Manifest_typing", "title": "Manifest Typing" }]
      },
      "tsys+nominal": {
        "name": "Nominal Typing",
        "keywords": ["nominal", "nominative"],
        "description": "Nominal typing is a type system where compatibility between types is determined by explicit declarations or names, rather than structure.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Nominal_type_system", "title": "Nominal Typing" }]
      },
      "tsys+object": {
        "name": "Object-Oriented Typing",
        "keywords": ["object"],
        "description": "Object-oriented typing refers to type systems that manage and enforce types for objects and classes, focusing on inheritance and polymorphism.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Object_(computer_science)", "title": "Object-Oriented Typing" }]
      },
      "tsys+optional": {
        "name": "Optional Typing",
        "keywords": ["optional"],
        "description": "Optional typing allows for type annotations to be included or omitted, offering flexibility between static and dynamic typing.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Optional_typing", "title": "Optional Typing" }]
      },
      "tsys+polymorphic": {
        "name": "Polymorphic Typing",
        "keywords": ["polymorphic"],
        "description": "Polymorphic typing allows types to be parameterized and reused with different data types, enhancing code reusability.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Polymorphism_(computer_science)", "title": "Polymorphic Typing" }]
      },
      "tsys+rtti": {
        "name": "Run-Time Type Information (RTTI)",
        "keywords": ["rtti", "run-time"],
        "description": "RTTI is a feature that allows a program to retrieve type information about an object during runtime.",
        "websites": [
          { "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Run-time_type_information", "title": "Run-Time Type Information (RTTI)" }
        ]
      },
      "tsys+static": {
        "name": "Static Typing",
        "keywords": ["static"],
        "description": "Static typing checks type correctness at compile-time, reducing runtime errors by ensuring variables are properly typed before execution.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Static_typing", "title": "Static Typing" }]
      },
      "tsys+string": {
        "name": "String Typing",
        "keywords": ["string"],
        "description": "String typing refers to the type system's handling and validation of string data types in programming languages.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/String_(programming)", "title": "String Typing" }]
      },
      "tsys+strong": {
        "name": "Strong Typing",
        "keywords": ["strong", "strongly-typed"],
        "description": "Strong typing enforces strict type rules, ensuring that variables cannot be implicitly cast or used in an unintended way.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Strong_typing", "title": "Strong Typing" }]
      },
      "tsys+structural": {
        "name": "Structural Typing",
        "keywords": ["structural"],
        "description": "Structural typing bases type compatibility on the structure of data rather than explicit type declarations or names.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Structural_typing", "title": "Structural Typing" }]
      },
      "tsys+safe": {
        "name": "Type Safe",
        "keywords": ["safe"],
        "description": "Type safety ensures that operations are performed on compatible types, preventing unintended behavior and runtime errors.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Type_safety", "title": "Type Safety" }]
      },
      "tsys+uniqueness": {
        "name": "Uniqueness Typing",
        "keywords": ["unique"],
        "description": "Uniqueness typing enforces that certain values are used only once, allowing optimizations like in-place updates in functional programming.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Uniqueness_type", "title": "Uniqueness Typing" }]
      },
      "tsys+weak": {
        "name": "Weak Typing",
        "keywords": ["weak"],
        "description": "Weak typing allows for more flexible type conversions, where variables can be implicitly cast between types, sometimes leading to unexpected results.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Weak_typing", "title": "Weak Typing" }]
      },
      "tsys+untyped": {
        "name": "Untyped",
        "keywords": ["untyped"],
        "description": "Untyped systems lack explicit types, with variables and functions being dynamically interpreted based on their usage.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Type_system", "title": "Type System" }]
      },
      "tsys+generic": {
        "name": "Generic Programming",
        "keywords": ["generic"],
        "description": "Generic programming uses algorithms that can work with several different but related data types.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Generic_programming", "title": "Generic" }]
      },
      "tsys+algebraic": {
        "name": "Algebraic Data Types",
        "keywords": ["algebraic", "adt", "product types", "sum types", "variant", "unions"],
        "description": "In computer programming, especially functional programming and type theory, an algebraic data type (ADT) is a kind of composite type, i.e., a type formed by combining other types.",
        "websites": [{ "kind": "wikipedia", "href": "https://en.wikipedia.org/wiki/Algebraic_data_type", "title": "Algebraic Data Type" }]
      }
    }
  },
  "edges": {
    "app": { "pl+python": { "app+harlequin": {}, "app+glances": {}, "app+zulip": {}, "app+aider": {} } },
    "bundle": { "bundle+py-one": { "tool+pixi": {}, "tool+ruff": {}, "tool+pyright": {}, "tool+vscode-python": {} } },
    "compilesTo": { "pl+typescript": { "pl+javascript": {} } },
    "dialect": {
      "pl+ada": { "pl+pascal": {} },
      "pl+alice": { "pl+ml": {}, "pl+standard-ml": {} },
      "pl+assemblyscript": { "pl+javascript": {}, "pl+typescript": {} },
      "pl+c++": { "pl+c": {} },
      "pl+c-sharp": { "pl+c": {} },
      "pl+cilk": { "pl+c": {} },
      "pl+clojure": { "pl+lisp": {} },
      "pl+common-lisp": { "pl+lisp": {} },
      "pl+cython": { "pl+python": {} },
      "pl+datalog": { "pl+prolog": {} },
      "pl+datomic": { "pl+datalog": {} },
      "pl+delphi": { "pl+pascal": {} },
      "pl+emacs-lisp": { "pl+lisp": {} },
      "pl+f-sharp": { "pl+ml": {}, "pl+ocaml": {} },
      "pl+futhark": { "pl+ml": {} },
      "pl+gambit": { "pl+lisp": {} },
      "pl+haxe": { "pl+ecmascript": {} },
      "pl+hy": { "pl+lisp": {} },
      "pl+mlton": { "pl+ml": {}, "pl+standard-ml": {} },
      "pl+mzscheme": { "pl+lisp": {} },
      "pl+netlogo": { "pl+lisp": {} },
      "pl+newlisp": { "pl+lisp": {} },
      "pl+newspeak": { "pl+self": {}, "pl+squeak": {} },
      "pl+ocaml": { "pl+ml": {} },
      "pl+purebasic": { "pl+basic": {} },
      "pl+pypy": { "pl+python": {} },
      "pl+r5rs": { "pl+lisp": {} },
      "pl+racket": { "pl+lisp": {} },
      "pl+raku": { "pl+perl": {} },
      "pl+reason": { "pl+ml": {}, "pl+ocaml": {} },
      "pl+scheme": { "pl+lisp": {} },
      "pl+simula": { "pl+algol": {} },
      "pl+souffle": { "pl+datalog": {} },
      "pl+standard-ml": { "pl+ml": {} },
      "pl+turbo-pascal": { "pl+pascal": {} }
    },
    "impl": {
      "pl+.net": { "pl+c-sharp": {} },
      "pl+actionscript": { "pl+ecmascript": {} },
      "pl+c": { "pl+curry": {} },
      "pl+ciao": { "pl+prolog": {} },
      "pl+circuitpython": { "pl+python": {} },
      "pl+clang": { "pl+c": {}, "pl+c++": {} },
      "pl+clozure": { "pl+common-lisp": {} },
      "pl+cpython": { "pl+python": {} },
      "pl+dart": { "pl+sass": {} },
      "pl+delphi": { "pl+pascal": {} },
      "pl+flutter": { "pl+dart": {} },
      "pl+free-pascal": { "pl+pascal": {} },
      "pl+freebasic": { "pl+basic": {} },
      "pl+g95": { "pl+fortran": {} },
      "pl+gforth": { "pl+forth": {} },
      "pl+gnat": { "pl+ada": {} },
      "pl+graalvm": { "pl+ruby": {} },
      "pl+haskell": { "pl+curry": {} },
      "pl+intel-fortran-compiler": { "pl+fortran": {} },
      "pl+ironpython": { "pl+python": {} },
      "pl+javascript": { "pl+ecmascript": {} },
      "pl+javascriptcore": { "pl+javascript": {} },
      "pl+jruby": { "pl+ruby": {} },
      "pl+jython": { "pl+python": {} },
      "pl+luajit": { "pl+lua": {}, "pl+moonscript": {} },
      "pl+micropython": { "pl+python": {} },
      "pl+mlton": { "pl+standard-ml": {} },
      "pl+mono": { "pl+c-sharp": {}, "pl+visual-basic": {} },
      "pl+mruby": { "pl+ruby": {} },
      "pl+powerbasic": { "pl+basic": {} },
      "pl+prolog": { "pl+curry": {} },
      "pl+pypy": { "pl+python": {} },
      "pl+rakudo": { "pl+raku": {} },
      "pl+sbcl": { "pl+common-lisp": {} },
      "pl+swi-prolog": { "pl+prolog": {} },
      "pl+v8": { "pl+javascript": {} },
      "pl+xsb": { "pl+prolog": {} }
    },
    "influence": {
      "pl+actionscript": { "pl+javascript": {} },
      "pl+ada": { "pl+c++": {}, "pl+clu": {}, "pl+eiffel": {}, "pl+pascal": {} },
      "pl+agda": { "pl+coq": {}, "pl+haskell": {} },
      "pl+alice": { "pl+ml": {} },
      "pl+ampl": { "pl+awk": {}, "pl+c": {} },
      "pl+asm.js": { "pl+javascript": {} },
      "pl+assemblyscript": { "pl+javascript": {}, "pl+typescript": {} },
      "pl+awk": { "pl+c": {}, "pl+sed": {} },
      "pl+ballerina": { "pl+c-sharp": {}, "pl+go": {}, "pl+javascript": {}, "pl+rust": {} },
      "pl+basic": { "pl+fortran": {} },
      "pl+befunge": { "pl+forth": {} },
      "pl+boo": { "pl+c-sharp": {}, "pl+python": {} },
      "pl+boomerang": { "pl+ocaml": {} },
      "pl+c++": { "pl+ada": {}, "pl+apl": {}, "pl+c": {}, "pl+clu": {}, "pl+f-sharp": {}, "pl+ml": {}, "pl+simula": {} },
      "pl+c-sharp": {
        "pl+c": {},
        "pl+c++": {},
        "pl+d": {},
        "pl+eiffel": {},
        "pl+f-sharp": {},
        "pl+haskell": {},
        "pl+icon": {},
        "pl+ml": {},
        "pl+pascal": {},
        "pl+scala": {},
        "pl+visual-basic": {}
      },
      "pl+c": { "pl+algol": {}, "pl+fortran": {} },
      "pl+ceylon": { "pl+lisp": {}, "pl+ml": {}, "pl+scala": {}, "pl+whiley": {} },
      "pl+cg": { "pl+c": {} },
      "pl+ciao": { "pl+prolog": {} },
      "pl+cilk": { "pl+c": {} },
      "pl+clean": { "pl+haskell": {} },
      "pl+clojure": {
        "pl+c++": {},
        "pl+c-sharp": {},
        "pl+common-lisp": {},
        "pl+erlang": {},
        "pl+haskell": {},
        "pl+ml": {},
        "pl+mzscheme": {},
        "pl+prolog": {},
        "pl+r5rs": {},
        "pl+racket": {},
        "pl+ruby": {},
        "pl+scheme": {},
        "pl+wolfram-language": {}
      },
      "pl+clu": { "pl+lisp": {}, "pl+simula": {} },
      "pl+cobra": { "pl+c-sharp": {}, "pl+eiffel": {}, "pl+python": {} },
      "pl+coffeescript": { "pl+haskell": {}, "pl+javascript": {}, "pl+perl": {}, "pl+python": {}, "pl+ruby": {} },
      "pl+colorforth": { "pl+forth": {} },
      "pl+common-lisp": { "pl+lisp": {}, "pl+r5rs": {}, "pl+scheme": {} },
      "pl+coq": { "pl+ml": {}, "pl+ocaml": {} },
      "pl+crystal": { "pl+c": {}, "pl+c-sharp": {}, "pl+go": {}, "pl+python": {}, "pl+ruby": {}, "pl+rust": {} },
      "pl+curry": { "pl+haskell": {}, "pl+prolog": {} },
      "pl+cython": { "pl+c": {}, "pl+python": {} },
      "pl+d": { "pl+ada": {}, "pl+basic": {}, "pl+c": {}, "pl+c++": {}, "pl+c-sharp": {}, "pl+eiffel": {}, "pl+python": {}, "pl+ruby": {} },
      "pl+dart": { "pl+c": {}, "pl+c++": {}, "pl+c-sharp": {}, "pl+erlang": {}, "pl+javascript": {}, "pl+ruby": {}, "pl+typescript": {} },
      "pl+datalog": { "pl+prolog": {} },
      "pl+dylan": { "pl+algol": {}, "pl+common-lisp": {}, "pl+lisp": {}, "pl+r5rs": {}, "pl+scheme": {} },
      "pl+ecmascript": { "pl+awk": {}, "pl+c": {}, "pl+coffeescript": {}, "pl+perl": {}, "pl+python": {}, "pl+scheme": {}, "pl+self": {} },
      "pl+eiffel": { "pl+ada": {}, "pl+simula": {} },
      "pl+elixir": { "pl+clojure": {}, "pl+erlang": {}, "pl+lisp": {}, "pl+ruby": {} },
      "pl+emacs-lisp": { "pl+common-lisp": {} },
      "pl+erlang": { "pl+lisp": {}, "pl+ml": {}, "pl+prolog": {} },
      "pl+euphoria": { "pl+basic": {} },
      "pl+extempore": { "pl+impromptu": {}, "pl+lisp": {}, "pl+scheme": {} },
      "pl+f-sharp": {
        "pl+c-sharp": {},
        "pl+erlang": {},
        "pl+haskell": {},
        "pl+ml": {},
        "pl+ocaml": {},
        "pl+python": {},
        "pl+scala": {},
        "pl+standard-ml": {}
      },
      "pl+factor": { "pl+forth": {}, "pl+joy": {}, "pl+lisp": {}, "pl+self": {} },
      "pl+fantom": { "pl+c-sharp": {}, "pl+erlang": {}, "pl+ruby": {}, "pl+scala": {} },
      "pl+flix": { "pl+f-sharp": {}, "pl+go": {}, "pl+haskell": {}, "pl+ocaml": {}, "pl+scala": {} },
      "pl+forth": { "pl+lisp": {} },
      "pl+fortress": { "pl+fortran": {}, "pl+haskell": {}, "pl+scala": {} },
      "pl+fp": { "pl+apl": {} },
      "pl+freebasic": { "pl+c": {} },
      "pl+futhark": { "pl+apl": {}, "pl+haskell": {}, "pl+standard-ml": {} },
      "pl+gambit": { "pl+lisp": {}, "pl+scheme": {} },
      "pl+gdscript": { "pl+python": {} },
      "pl+gleam": { "pl+elixir": {}, "pl+erlang": {}, "pl+go": {}, "pl+javascript": {}, "pl+ocaml": {}, "pl+rust": {} },
      "pl+go": { "pl+apl": {}, "pl+c": {}, "pl+d": {}, "pl+erlang": {}, "pl+modula": {}, "pl+oberon": {}, "pl+pascal": {}, "pl+python": {} },
      "pl+gremlin": { "pl+sql": {}, "pl+xpath": {} },
      "pl+groovy": { "pl+perl": {}, "pl+python": {}, "pl+ruby": {} },
      "pl+hack": { "pl+c-sharp": {}, "pl+haskell": {}, "pl+ocaml": {}, "pl+scala": {} },
      "pl+haskell": { "pl+clean": {}, "pl+fp": {}, "pl+lisp": {}, "pl+ml": {}, "pl+r5rs": {}, "pl+raku": {}, "pl+scheme": {}, "pl+standard-ml": {} },
      "pl+haxe": {
        "pl+actionscript": {},
        "pl+c++": {},
        "pl+c-sharp": {},
        "pl+ecmascript": {},
        "pl+javascript": {},
        "pl+lua": {},
        "pl+ocaml": {},
        "pl+python": {}
      },
      "pl+hy": { "pl+clojure": {}, "pl+common-lisp": {} },
      "pl+icon": { "pl+algol": {} },
      "pl+idris": { "pl+agda": {}, "pl+clean": {}, "pl+coq": {}, "pl+f-sharp": {}, "pl+haskell": {}, "pl+ml": {}, "pl+rust": {} },
      "pl+impromptu": { "pl+lisp": {}, "pl+scheme": {} },
      "pl+io": { "pl+lisp": {}, "pl+lua": {}, "pl+moonscript": {}, "pl+python": {}, "pl+self": {} },
      "pl+isabelle": { "pl+haskell": {} },
      "pl+javascript": {
        "pl+awk": {},
        "pl+c": {},
        "pl+lisp": {},
        "pl+lua": {},
        "pl+moonscript": {},
        "pl+perl": {},
        "pl+python": {},
        "pl+r5rs": {},
        "pl+scheme": {},
        "pl+self": {}
      },
      "pl+joy": { "pl+forth": {}, "pl+fp": {}, "pl+scheme": {} },
      "pl+jq": { "pl+icon": {} },
      "pl+julia": {
        "pl+c": {},
        "pl+common-lisp": {},
        "pl+dylan": {},
        "pl+fortress": {},
        "pl+lisp": {},
        "pl+lua": {},
        "pl+moonscript": {},
        "pl+perl": {},
        "pl+python": {},
        "pl+r": {},
        "pl+r5rs": {},
        "pl+ruby": {},
        "pl+scheme": {},
        "pl+wolfram-language": {}
      },
      "pl+k": { "pl+apl": {}, "pl+scheme": {} },
      "pl+kotlin": { "pl+c-sharp": {}, "pl+eiffel": {}, "pl+groovy": {}, "pl+javascript": {}, "pl+ml": {}, "pl+python": {}, "pl+scala": {} },
      "pl+logtalk": { "pl+prolog": {} },
      "pl+lua": { "pl+awk": {}, "pl+c++": {}, "pl+clu": {}, "pl+lisp": {}, "pl+modula": {}, "pl+r5rs": {}, "pl+scheme": {}, "pl+self": {} },
      "pl+ml": { "pl+lisp": {} },
      "pl+mlton": { "pl+standard-ml": {} },
      "pl+modula": { "pl+pascal": {} },
      "pl+moonscript": { "pl+lua": {} },
      "pl+mzscheme": { "pl+eiffel": {}, "pl+scheme": {} },
      "pl+newlisp": { "pl+c": {}, "pl+common-lisp": {}, "pl+perl": {}, "pl+scheme": {} },
      "pl+newspeak": { "pl+self": {} },
      "pl+nim": { "pl+ada": {}, "pl+c": {}, "pl+c++": {}, "pl+lisp": {}, "pl+oberon": {}, "pl+python": {}, "pl+rust": {} },
      "pl+oberon": { "pl+pascal": {} },
      "pl+ocaml": { "pl+c": {}, "pl+ml": {}, "pl+pascal": {}, "pl+standard-ml": {} },
      "pl+pascal": { "pl+algol": {}, "pl+simula": {} },
      "pl+perl": { "pl+awk": {}, "pl+basic": {}, "pl+c": {}, "pl+c++": {}, "pl+lisp": {}, "pl+raku": {}, "pl+sed": {} },
      "pl+processing": { "pl+c": {} },
      "pl+pure": { "pl+alice": {}, "pl+haskell": {}, "pl+lisp": {} },
      "pl+purescript": { "pl+haskell": {}, "pl+javascript": {} },
      "pl+python": {
        "pl+ada": {},
        "pl+apl": {},
        "pl+c": {},
        "pl+c++": {},
        "pl+clu": {},
        "pl+dylan": {},
        "pl+haskell": {},
        "pl+icon": {},
        "pl+lisp": {},
        "pl+perl": {},
        "pl+r5rs": {},
        "pl+scheme": {},
        "pl+standard-ml": {}
      },
      "pl+r": { "pl+common-lisp": {}, "pl+lisp": {}, "pl+r5rs": {}, "pl+scheme": {} },
      "pl+r5rs": { "pl+algol": {}, "pl+lisp": {} },
      "pl+racket": { "pl+eiffel": {}, "pl+r5rs": {}, "pl+scheme": {} },
      "pl+raku": { "pl+haskell": {}, "pl+javascript": {}, "pl+perl": {}, "pl+ruby": {} },
      "pl+reason": { "pl+javascript": {}, "pl+ocaml": {} },
      "pl+rebol": { "pl+forth": {}, "pl+lisp": {}, "pl+self": {} },
      "pl+red": { "pl+lisp": {}, "pl+lua": {}, "pl+moonscript": {}, "pl+rebol": {}, "pl+scala": {} },
      "pl+ruby": {
        "pl+ada": {},
        "pl+basic": {},
        "pl+c++": {},
        "pl+clu": {},
        "pl+dylan": {},
        "pl+eiffel": {},
        "pl+lisp": {},
        "pl+lua": {},
        "pl+moonscript": {},
        "pl+perl": {},
        "pl+python": {},
        "pl+r5rs": {},
        "pl+scheme": {}
      },
      "pl+rust": {
        "pl+c": {},
        "pl+c++": {},
        "pl+c-sharp": {},
        "pl+cilk": {},
        "pl+erlang": {},
        "pl+haskell": {},
        "pl+ml": {},
        "pl+mzscheme": {},
        "pl+ocaml": {},
        "pl+r5rs": {},
        "pl+racket": {},
        "pl+ruby": {},
        "pl+scheme": {},
        "pl+standard-ml": {},
        "pl+swift": {}
      },
      "pl+scala": {
        "pl+common-lisp": {},
        "pl+eiffel": {},
        "pl+erlang": {},
        "pl+f-sharp": {},
        "pl+haskell": {},
        "pl+lisp": {},
        "pl+ml": {},
        "pl+ocaml": {},
        "pl+r5rs": {},
        "pl+scheme": {},
        "pl+standard-ml": {}
      },
      "pl+scheme": { "pl+algol": {}, "pl+lisp": {}, "pl+mzscheme": {}, "pl+racket": {} },
      "pl+scratch": { "pl+squeak": {} },
      "pl+scratchjr": { "pl+scratch": {} },
      "pl+seed7": { "pl+ada": {}, "pl+c": {}, "pl+c++": {}, "pl+pascal": {} },
      "pl+self": { "pl+apl": {} },
      "pl+shacl": { "pl+shex": {} },
      "pl+simula": { "pl+algol": {} },
      "pl+souffle": { "pl+datalog": {} },
      "pl+sql": { "pl+datalog": {} },
      "pl+squeak": { "pl+lisp": {}, "pl+self": {}, "pl+simula": {} },
      "pl+squirrel": { "pl+c++": {}, "pl+javascript": {}, "pl+lua": {}, "pl+moonscript": {}, "pl+python": {} },
      "pl+standard-ml": { "pl+ml": {}, "pl+pascal": {} },
      "pl+swift": {
        "pl+c": {},
        "pl+c-sharp": {},
        "pl+clu": {},
        "pl+d": {},
        "pl+haskell": {},
        "pl+lisp": {},
        "pl+python": {},
        "pl+ruby": {},
        "pl+rust": {}
      },
      "pl+tcl": { "pl+awk": {}, "pl+lisp": {} },
      "pl+typescript": { "pl+actionscript": {}, "pl+c-sharp": {}, "pl+f-sharp": {}, "pl+javascript": {} },
      "pl+v": { "pl+c": {}, "pl+go": {}, "pl+kotlin": {}, "pl+oberon": {}, "pl+python": {}, "pl+rust": {}, "pl+swift": {} },
      "pl+vala": { "pl+boo": {}, "pl+c": {}, "pl+c++": {}, "pl+c-sharp": {}, "pl+d": {} },
      "pl+visual-basic": { "pl+basic": {}, "pl+haskell": {}, "pl+visual-basic": {} },
      "pl+vvvv": { "pl+apl": {}, "pl+max-msp": {} },
      "pl+whiley": { "pl+c": {}, "pl+python": {}, "pl+rust": {} },
      "pl+wolfram-language": {
        "pl+apl": {},
        "pl+c": {},
        "pl+c++": {},
        "pl+fortran": {},
        "pl+lisp": {},
        "pl+pascal": {},
        "pl+prolog": {},
        "pl+simula": {}
      },
      "pl+xojo": { "pl+basic": {}, "pl+visual-basic": {} },
      "pl+xpath": { "pl+xslt": {} },
      "pl+xquery": { "pl+sql": {}, "pl+xpath": {}, "pl+xslt": {} },
      "pl+xsb": { "pl+prolog": {} },
      "pl+xslt": { "pl+boomerang": {} },
      "pl+xtend": { "pl+groovy": {}, "pl+scala": {} },
      "pl+zig": { "pl+c": {}, "pl+c++": {}, "pl+go": {}, "pl+javascript": {}, "pl+rust": {} }
    },
    "lib": { "pl+python": { "lib+msgspec": {}, "lib+flask": {} } },
    "license": {
      "pl+.net": { "license+mit": {} },
      "pl+agda": { "license+bsd": {} },
      "pl+alice": { "license+mit": {} },
      "pl+assemblyscript": { "license+apache": {} },
      "pl+ballerina": { "license+apache": {} },
      "pl+bash": { "license+gnu-gpl": {} },
      "pl+boo": { "license+bsd": {} },
      "pl+c-sharp": { "license+gnu-gpl": {}, "license+lgpl": {}, "license+mit": {} },
      "pl+ceylon": { "license+apache": {} },
      "pl+chuck": { "license+gnu-gpl": {} },
      "pl+ciao": { "license+gnu-gpl": {}, "license+lgpl": {} },
      "pl+circuitpython": { "license+mit": {} },
      "pl+clang": { "license+apache": {} },
      "pl+clean": { "license+bsd": {} },
      "pl+clozure": { "license+apache": {}, "license+lgpl": {} },
      "pl+cobra": { "license+mit": {} },
      "pl+coffeescript": { "license+mit": {} },
      "pl+colorforth": { "license+public-domain": {} },
      "pl+cpython": { "license+python": {} },
      "pl+crystal": { "license+apache": {} },
      "pl+csound": { "license+lgpl": {} },
      "pl+curry": { "license+bsd": {} },
      "pl+cython": { "license+apache": {} },
      "pl+d": { "license+boost": {} },
      "pl+dart": { "license+bsd": {} },
      "pl+datomic": { "license+apache": {} },
      "pl+elixir": { "license+apache": {} },
      "pl+emacs-lisp": { "license+gnu-gpl": {} },
      "pl+erlang": { "license+apache": {} },
      "pl+euphoria": { "license+bsd": {} },
      "pl+f-sharp": { "license+mit": {} },
      "pl+factor": { "license+bsd": {} },
      "pl+faust": { "license+gnu-gpl": {} },
      "pl+flix": { "license+apache": {} },
      "pl+flutter": { "license+bsd": {} },
      "pl+fortress": { "license+bsd": {} },
      "pl+freebasic": { "license+gnu-gpl": {} },
      "pl+futhark": { "license+isc": {} },
      "pl+g95": { "license+gnu-gpl": {} },
      "pl+gambit": { "license+apache": {}, "license+lgpl": {} },
      "pl+gdscript": { "license+mit": {} },
      "pl+gforth": { "license+gnu-gpl": {} },
      "pl+gleam": { "license+apache": {} },
      "pl+gnat": { "license+gnu-gpl": {} },
      "pl+go": { "license+bsd": {} },
      "pl+graalvm": { "license+gnu-gpl": {} },
      "pl+gremlin": { "license+apache": {} },
      "pl+groovy": { "license+apache": {} },
      "pl+hack": { "license+mit": {} },
      "pl+hackety-hack": { "license+mit": {} },
      "pl+haxe": { "license+gnu-gpl": {}, "license+mit": {} },
      "pl+high-level-assembly": { "license+public-domain": {} },
      "pl+hy": { "license+mit": {} },
      "pl+idris": { "license+bsd": {} },
      "pl+inform": { "license+artistic": {} },
      "pl+io": { "license+bsd": {} },
      "pl+ironpython": { "license+apache": {} },
      "pl+ironruby": { "license+apache": {} },
      "pl+isabelle": { "license+bsd": {} },
      "pl+javascriptcore": { "license+bsd": {} },
      "pl+jq": { "license+mit": {} },
      "pl+jruby": { "license+epl": {}, "license+gnu-gpl": {}, "license+lgpl": {} },
      "pl+julia": { "license+mit": {} },
      "pl+jython": { "license+python": {} },
      "pl+kornshell": { "license+isc": {}, "license+lgpl": {}, "license+public-domain": {} },
      "pl+kotlin": { "license+apache": {} },
      "pl+llvm": { "license+apache": {}, "license+bsd": {} },
      "pl+logtalk": { "license+apache": {}, "license+artistic": {} },
      "pl+lua": { "license+mit": {} },
      "pl+luajit": { "license+mit": {} },
      "pl+micropython": { "license+mit": {} },
      "pl+modelica": { "license+cc-by": {} },
      "pl+mono": { "license+mit": {} },
      "pl+moonscript": { "license+mit": {} },
      "pl+mruby": { "license+mit": {} },
      "pl+mzscheme": { "license+apache": {}, "license+mit": {} },
      "pl+netlogo": { "license+gnu-gpl": {} },
      "pl+newlisp": { "license+gnu-gpl": {} },
      "pl+newspeak": { "license+apache": {} },
      "pl+perl": { "license+artistic": {} },
      "pl+processing": { "license+gnu-gpl": {}, "license+lgpl": {} },
      "pl+puredata": { "license+bsd": {} },
      "pl+purescript": { "license+bsd": {} },
      "pl+pypy": { "license+mit": {} },
      "pl+python": { "license+python": {} },
      "pl+r": { "license+gnu-gpl": {} },
      "pl+racket": { "license+apache": {}, "license+mit": {} },
      "pl+raku": { "license+artistic": {} },
      "pl+rakudo": { "license+artistic": {} },
      "pl+rascal": { "license+epl": {} },
      "pl+reason": { "license+mit": {} },
      "pl+rebol": { "license+apache": {} },
      "pl+red": { "license+boost": {}, "license+bsd": {} },
      "pl+rust": { "license+apache": {}, "license+mit": {} },
      "pl+sass": { "license+mit": {} },
      "pl+sbcl": { "license+bsd": {}, "license+mit": {}, "license+public-domain": {} },
      "pl+scala": { "license+apache": {} },
      "pl+scratch": { "license+bsd": {}, "license+gnu-gpl": {} },
      "pl+seed7": { "license+gnu-gpl": {}, "license+lgpl": {} },
      "pl+self": { "license+bsd": {} },
      "pl+squeak": { "license+apache": {}, "license+mit": {} },
      "pl+squirrel": { "license+mit": {} },
      "pl+supercollider": { "license+gnu-gpl": {} },
      "pl+swi-prolog": { "license+bsd": {}, "license+lgpl": {} },
      "pl+swift": { "license+apache": {} },
      "pl+tcl": { "license+bsd": {} },
      "pl+tcsh": { "license+bsd": {} },
      "pl+tk": { "license+bsd": {} },
      "pl+typescript": { "license+apache": {} },
      "pl+v": { "license+mit": {} },
      "pl+v8": { "license+bsd": {} },
      "pl+visual-basic": { "license+apache": {} },
      "pl+whiley": { "license+bsd": {} },
      "pl+yabasic": { "license+mit": {} },
      "pl+yacc": { "license+mit": {} },
      "pl+zig": { "license+mit": {} }
    },
    "paradigm": {
      "pl+actionscript": {
        "paradigm+functional": {},
        "paradigm+imperative": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+prototype": {},
        "paradigm+scripting": {}
      },
      "pl+ada": {
        "paradigm+array": {},
        "paradigm+aspect": {},
        "paradigm+concurrent": {},
        "paradigm+distributed": {},
        "paradigm+imperative": {},
        "paradigm+metaprogramming": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+procedural": {},
        "paradigm+structured": {}
      },
      "pl+agda": { "paradigm+functional": {} },
      "pl+algol": { "paradigm+imperative": {}, "paradigm+procedural": {}, "paradigm+structured": {} },
      "pl+alice": {
        "paradigm+concurrent": {},
        "paradigm+constraint": {},
        "paradigm+distributed": {},
        "paradigm+functional": {},
        "paradigm+imperative": {},
        "paradigm+multi": {}
      },
      "pl+ampl": { "paradigm+declarative": {}, "paradigm+imperative": {}, "paradigm+multi": {} },
      "pl+apl": { "paradigm+array": {}, "paradigm+functional": {}, "paradigm+modular": {}, "paradigm+structured": {} },
      "pl+assembly": {
        "paradigm+imperative": {},
        "paradigm+macro": {},
        "paradigm+metaprogramming": {},
        "paradigm+oop": {},
        "paradigm+structured": {}
      },
      "pl+assemblyscript": { "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+multi": {}, "paradigm+oop": {} },
      "pl+awk": { "paradigm+data-driven": {}, "paradigm+procedural": {}, "paradigm+scripting": {} },
      "pl+basic": { "paradigm+oop": {}, "paradigm+procedural": {}, "paradigm+structured": {} },
      "pl+boo": { "paradigm+oop": {} },
      "pl+brainfuck": { "paradigm+esoteric": {}, "paradigm+imperative": {}, "paradigm+structured": {} },
      "pl+c++": {
        "paradigm+functional": {},
        "paradigm+imperative": {},
        "paradigm+modular": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+procedural": {}
      },
      "pl+c-sharp": {
        "paradigm+async": {},
        "paradigm+concurrent": {},
        "paradigm+event-driven": {},
        "paradigm+functional": {},
        "paradigm+imperative": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+reflective": {},
        "paradigm+structured": {}
      },
      "pl+c": { "paradigm+imperative": {}, "paradigm+multi": {}, "paradigm+procedural": {}, "paradigm+structured": {} },
      "pl+ceylon": { "paradigm+oop": {} },
      "pl+chuck": { "paradigm+multi": {} },
      "pl+ciao": { "paradigm+functional": {}, "paradigm+logic": {}, "paradigm+modular": {}, "paradigm+oop": {} },
      "pl+cilk": { "paradigm+concurrent": {}, "paradigm+imperative": {}, "paradigm+procedural": {}, "paradigm+structured": {} },
      "pl+clean": { "paradigm+functional": {} },
      "pl+clojure": {
        "paradigm+agents": {},
        "paradigm+concurrent": {},
        "paradigm+functional": {},
        "paradigm+logic": {},
        "paradigm+macro": {},
        "paradigm+multi": {},
        "paradigm+pipeline": {}
      },
      "pl+clu": { "paradigm+multi": {}, "paradigm+oop": {}, "paradigm+procedural": {} },
      "pl+cobra": { "paradigm+multi": {}, "paradigm+oop": {} },
      "pl+coffeescript": {
        "paradigm+functional": {},
        "paradigm+imperative": {},
        "paradigm+multi": {},
        "paradigm+prototype": {},
        "paradigm+scripting": {}
      },
      "pl+colorforth": { "paradigm+procedural": {}, "paradigm+stack-oriented": {} },
      "pl+common-lisp": {
        "paradigm+functional": {},
        "paradigm+metaprogramming": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+procedural": {},
        "paradigm+reflective": {}
      },
      "pl+crystal": { "paradigm+concurrent": {}, "paradigm+multi": {}, "paradigm+oop": {} },
      "pl+curry": { "paradigm+functional": {}, "paradigm+logic": {} },
      "pl+d": { "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+multi": {}, "paradigm+oop": {} },
      "pl+dart": { "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+multi": {}, "paradigm+oop": {}, "paradigm+reflective": {} },
      "pl+datalog": { "paradigm+declarative": {}, "paradigm+logic": {} },
      "pl+dylan": { "paradigm+functional": {}, "paradigm+multi": {}, "paradigm+oop": {} },
      "pl+ecmascript": { "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+multi": {}, "paradigm+prototype": {} },
      "pl+eiffel": { "paradigm+concurrent": {}, "paradigm+oop": {} },
      "pl+elixir": {
        "paradigm+concurrent": {},
        "paradigm+distributed": {},
        "paradigm+functional": {},
        "paradigm+multi": {},
        "paradigm+process-oriented": {}
      },
      "pl+emacs-lisp": { "paradigm+functional": {}, "paradigm+metaprogramming": {}, "paradigm+reflective": {} },
      "pl+erlang": { "paradigm+concurrent": {}, "paradigm+functional": {}, "paradigm+multi": {}, "paradigm+oop": {} },
      "pl+euphoria": { "paradigm+imperative": {}, "paradigm+procedural": {} },
      "pl+extempore": { "paradigm+functional": {}, "paradigm+multi": {} },
      "pl+f-sharp": {
        "paradigm+agents": {},
        "paradigm+concurrent": {},
        "paradigm+functional": {},
        "paradigm+imperative": {},
        "paradigm+metaprogramming": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+reflective": {}
      },
      "pl+factor": { "paradigm+concatenative": {}, "paradigm+functional": {}, "paradigm+multi": {}, "paradigm+oop": {} },
      "pl+fantom": { "paradigm+multi": {} },
      "pl+flix": { "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+logic": {}, "paradigm+multi": {} },
      "pl+forth": { "paradigm+concatenative": {}, "paradigm+procedural": {}, "paradigm+reflective": {} },
      "pl+fortran": {
        "paradigm+array": {},
        "paradigm+imperative": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+procedural": {},
        "paradigm+structured": {}
      },
      "pl+freebasic": { "paradigm+oop": {}, "paradigm+procedural": {} },
      "pl+frink": { "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+multi": {}, "paradigm+oop": {} },
      "pl+futhark": { "paradigm+array": {}, "paradigm+functional": {} },
      "pl+gambit": { "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+metaprogramming": {}, "paradigm+multi": {} },
      "pl+gleam": { "paradigm+concurrent": {}, "paradigm+functional": {}, "paradigm+multi": {} },
      "pl+go": { "paradigm+concurrent": {}, "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+multi": {}, "paradigm+oop": {} },
      "pl+groovy": {
        "paradigm+aspect": {},
        "paradigm+functional": {},
        "paradigm+imperative": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+scripting": {}
      },
      "pl+haskell": { "paradigm+functional": {} },
      "pl+haxe": { "paradigm+functional": {}, "paradigm+multi": {}, "paradigm+oop": {} },
      "pl+hy": {
        "paradigm+functional": {},
        "paradigm+metaprogramming": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+procedural": {},
        "paradigm+reflective": {}
      },
      "pl+icon": { "paradigm+multi": {}, "paradigm+structured": {} },
      "pl+idris": { "paradigm+functional": {} },
      "pl+impromptu": { "paradigm+functional": {}, "paradigm+multi": {} },
      "pl+io": { "paradigm+oop": {}, "paradigm+prototype": {} },
      "pl+javascript": {
        "paradigm+event-driven": {},
        "paradigm+functional": {},
        "paradigm+imperative": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+procedural": {}
      },
      "pl+joy": { "paradigm+concatenative": {}, "paradigm+functional": {}, "paradigm+multi": {}, "paradigm+stack-oriented": {} },
      "pl+jq": { "paradigm+functional": {}, "paradigm+point-free": {} },
      "pl+julia": {
        "paradigm+array": {},
        "paradigm+functional": {},
        "paradigm+imperative": {},
        "paradigm+metaprogramming": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+procedural": {},
        "paradigm+reflective": {},
        "paradigm+structured": {}
      },
      "pl+k": { "paradigm+array": {}, "paradigm+functional": {} },
      "pl+kotlin": {
        "paradigm+concurrent": {},
        "paradigm+declarative": {},
        "paradigm+functional": {},
        "paradigm+imperative": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+reflective": {},
        "paradigm+structured": {}
      },
      "pl+lisp": {
        "paradigm+functional": {},
        "paradigm+metaprogramming": {},
        "paradigm+multi": {},
        "paradigm+procedural": {},
        "paradigm+reflective": {}
      },
      "pl+logtalk": { "paradigm+logic": {}, "paradigm+oop": {}, "paradigm+prototype": {} },
      "pl+lua": {
        "paradigm+functional": {},
        "paradigm+imperative": {},
        "paradigm+metaprogramming": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+procedural": {},
        "paradigm+prototype": {},
        "paradigm+reflective": {},
        "paradigm+scripting": {}
      },
      "pl+minizinc": { "paradigm+constraint": {}, "paradigm+logic": {} },
      "pl+ml": { "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+multi": {} },
      "pl+mlton": { "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+multi": {} },
      "pl+modelica": { "paradigm+declarative": {} },
      "pl+modula": { "paradigm+imperative": {}, "paradigm+modular": {}, "paradigm+structured": {} },
      "pl+moonscript": {
        "paradigm+functional": {},
        "paradigm+imperative": {},
        "paradigm+metaprogramming": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+procedural": {},
        "paradigm+prototype": {},
        "paradigm+reflective": {},
        "paradigm+scripting": {}
      },
      "pl+mzscheme": {
        "paradigm+functional": {},
        "paradigm+imperative": {},
        "paradigm+logic": {},
        "paradigm+metaprogramming": {},
        "paradigm+modular": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+reflective": {}
      },
      "pl+netlogo": { "paradigm+agents": {}, "paradigm+educational": {}, "paradigm+multi": {}, "paradigm+procedural": {}, "paradigm+simulation": {} },
      "pl+netrexx": { "paradigm+multi": {}, "paradigm+oop": {}, "paradigm+procedural": {}, "paradigm+structured": {} },
      "pl+newspeak": { "paradigm+functional": {}, "paradigm+oop": {} },
      "pl+nim": {
        "paradigm+compiled": {},
        "paradigm+concurrent": {},
        "paradigm+functional": {},
        "paradigm+imperative": {},
        "paradigm+metaprogramming": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+procedural": {}
      },
      "pl+oberon": { "paradigm+imperative": {}, "paradigm+modular": {}, "paradigm+oop": {}, "paradigm+structured": {} },
      "pl+ocaml": { "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+modular": {}, "paradigm+multi": {}, "paradigm+oop": {} },
      "pl+pascal": { "paradigm+imperative": {}, "paradigm+structured": {} },
      "pl+perl": { "paradigm+multi": {} },
      "pl+processing": { "paradigm+oop": {} },
      "pl+prolog": { "paradigm+logic": {} },
      "pl+pure": { "paradigm+declarative": {}, "paradigm+functional": {}, "paradigm+rewriting": {} },
      "pl+purebasic": { "paradigm+imperative": {}, "paradigm+procedural": {}, "paradigm+structured": {} },
      "pl+purescript": { "paradigm+functional": {} },
      "pl+python": {
        "paradigm+functional": {},
        "paradigm+imperative": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+procedural": {},
        "paradigm+reflective": {},
        "paradigm+structured": {}
      },
      "pl+r": {
        "paradigm+array": {},
        "paradigm+functional": {},
        "paradigm+imperative": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+procedural": {},
        "paradigm+reflective": {}
      },
      "pl+r5rs": { "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+metaprogramming": {}, "paradigm+multi": {} },
      "pl+racket": {
        "paradigm+functional": {},
        "paradigm+imperative": {},
        "paradigm+logic": {},
        "paradigm+metaprogramming": {},
        "paradigm+modular": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+reflective": {}
      },
      "pl+raku": { "paradigm+multi": {} },
      "pl+reason": { "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+modular": {}, "paradigm+multi": {}, "paradigm+oop": {} },
      "pl+rebol": {
        "paradigm+data-exchange": {},
        "paradigm+functional": {},
        "paradigm+imperative": {},
        "paradigm+language-oriented": {},
        "paradigm+prototype": {}
      },
      "pl+red": { "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+multi": {}, "paradigm+symbolic": {} },
      "pl+ruby": { "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+multi": {}, "paradigm+oop": {}, "paradigm+reflective": {} },
      "pl+rust": { "paradigm+concurrent": {}, "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+structured": {} },
      "pl+scala": { "paradigm+concurrent": {}, "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+multi": {}, "paradigm+oop": {} },
      "pl+scheme": { "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+metaprogramming": {}, "paradigm+multi": {} },
      "pl+scratch": { "paradigm+event-driven": {}, "paradigm+visual": {} },
      "pl+sed": { "paradigm+scripting": {} },
      "pl+seed7": {
        "paradigm+extensible": {},
        "paradigm+imperative": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+reflective": {},
        "paradigm+structured": {}
      },
      "pl+self": { "paradigm+oop": {}, "paradigm+prototype": {} },
      "pl+shex": { "paradigm+validation": {} },
      "pl+simula": { "paradigm+imperative": {}, "paradigm+multi": {}, "paradigm+oop": {}, "paradigm+procedural": {}, "paradigm+structured": {} },
      "pl+souffle": { "paradigm+declarative": {}, "paradigm+logic": {} },
      "pl+sql": { "paradigm+declarative": {} },
      "pl+squeak": { "paradigm+oop": {} },
      "pl+squirrel": { "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+multi": {}, "paradigm+oop": {}, "paradigm+scripting": {} },
      "pl+standard-ml": { "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+modular": {}, "paradigm+multi": {} },
      "pl+swift": {
        "paradigm+concurrent": {},
        "paradigm+dataflow": {},
        "paradigm+declarative": {},
        "paradigm+distributed": {},
        "paradigm+functional": {},
        "paradigm+imperative": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+protocol": {},
        "paradigm+scientific": {},
        "paradigm+scripting": {},
        "paradigm+structured": {}
      },
      "pl+tcl": { "paradigm+event-driven": {}, "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+multi": {}, "paradigm+oop": {} },
      "pl+txl": { "paradigm+pattern-matching": {}, "paradigm+rewriting": {} },
      "pl+typescript": { "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+multi": {}, "paradigm+oop": {} },
      "pl+v": { "paradigm+concurrent": {}, "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+multi": {}, "paradigm+structured": {} },
      "pl+vala": { "paradigm+imperative": {}, "paradigm+multi": {}, "paradigm+oop": {}, "paradigm+structured": {} },
      "pl+visual-basic": {
        "paradigm+declarative": {},
        "paradigm+event-driven": {},
        "paradigm+imperative": {},
        "paradigm+multi": {},
        "paradigm+oop": {},
        "paradigm+reflective": {},
        "paradigm+structured": {}
      },
      "pl+vvvv": { "paradigm+visual": {} },
      "pl+whiley": { "paradigm+functional": {}, "paradigm+imperative": {} },
      "pl+wolfram-language": {
        "paradigm+array": {},
        "paradigm+functional": {},
        "paradigm+multi": {},
        "paradigm+procedural": {},
        "paradigm+rewriting": {}
      },
      "pl+xpath": { "paradigm+query": {} },
      "pl+xquery": { "paradigm+declarative": {}, "paradigm+functional": {}, "paradigm+modular": {} },
      "pl+xsb": { "paradigm+logic": {} },
      "pl+xslt": { "paradigm+declarative": {} },
      "pl+xtend": { "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+oop": {} },
      "pl+zig": { "paradigm+concurrent": {}, "paradigm+functional": {}, "paradigm+imperative": {}, "paradigm+multi": {}, "paradigm+procedural": {} }
    },
    "plBundle": { "pl+python": { "bundle+py-one": {} } },
    "plat": {
      "pl+.net": { "plat+android": {}, "plat+apple": {}, "plat+cross": {}, "plat+linux": {}, "plat+windows": {}, "plat+x86-64": {} },
      "pl+ada": { "plat+cross": {} },
      "pl+agda": { "plat+cross": {} },
      "pl+alice": { "plat+cross": {}, "plat+java": {} },
      "pl+ampl": { "plat+apple": {}, "plat+cross": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+apl": { "plat+cross": {} },
      "pl+awk": { "plat+cross": {} },
      "pl+ballerina": { "plat+cross": {} },
      "pl+bash": { "plat+apple": {}, "plat+windows": {} },
      "pl+boomerang": { "plat+linux": {} },
      "pl+borland-turbo-c": { "plat+dos": {}, "plat+windows": {} },
      "pl+c++": { "plat+cross": {} },
      "pl+c": { "plat+cross": {} },
      "pl+ceylon": { "plat+java": {}, "plat+nodejs": {} },
      "pl+chuck": { "plat+cross": {} },
      "pl+ciao": { "plat+cross": {}, "plat+windows": {} },
      "pl+clang": { "plat+arm": {}, "plat+x86-64": {} },
      "pl+clean": { "plat+cross": {} },
      "pl+clojure": { "plat+java": {}, "plat+nodejs": {} },
      "pl+clozure": { "plat+bsd": {}, "plat+cross": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+codemonkey": { "plat+cross": {} },
      "pl+coffeescript": { "plat+cross": {} },
      "pl+coldfusion": { "plat+cross": {} },
      "pl+common-lisp": { "plat+cross": {} },
      "pl+coq": { "plat+cross": {} },
      "pl+crystal": { "plat+apple": {}, "plat+arm": {}, "plat+bsd": {}, "plat+linux": {}, "plat+windows": {}, "plat+x86-64": {} },
      "pl+csound": { "plat+cross": {} },
      "pl+curry": { "plat+cross": {}, "plat+linux": {}, "plat+x86-64": {} },
      "pl+cython": { "plat+apple": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+d": { "plat+apple": {}, "plat+bsd": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+dart": { "plat+cross": {} },
      "pl+delphi": { "plat+android": {}, "plat+apple": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+dylan": { "plat+cross": {}, "plat+x86-64": {} },
      "pl+eiffel": { "plat+apple": {}, "plat+bsd": {}, "plat+cross": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+elixir": { "plat+erlang": {} },
      "pl+euphoria": { "plat+apple": {}, "plat+bsd": {}, "plat+cross": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+extempore": { "plat+linux": {}, "plat+windows": {} },
      "pl+f-sharp": { "plat+cross": {} },
      "pl+factor": { "plat+apple": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+faust": { "plat+linux": {}, "plat+windows": {} },
      "pl+flutter": { "plat+android": {}, "plat+apple": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+fortress": { "plat+cross": {}, "plat+java": {} },
      "pl+free-pascal": { "plat+cross": {}, "plat+embedded": {} },
      "pl+freebasic": { "plat+bsd": {}, "plat+dos": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+futhark": { "plat+cross": {} },
      "pl+gambit": { "plat+cross": {}, "plat+x86-64": {} },
      "pl+gdscript": { "plat+android": {}, "plat+apple": {}, "plat+bsd": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+gforth": { "plat+dos": {}, "plat+windows": {} },
      "pl+gleam": { "plat+apple": {}, "plat+bsd": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+gnat": { "plat+bsd": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+go": { "plat+apple": {}, "plat+bsd": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+graalvm": { "plat+apple": {}, "plat+java": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+gremlin": { "plat+cross": {} },
      "pl+groovy": { "plat+java": {} },
      "pl+hack": { "plat+cross": {} },
      "pl+hackety-hack": { "plat+apple": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+haskell": { "plat+cross": {} },
      "pl+haxe": { "plat+android": {}, "plat+apple": {}, "plat+arm": {}, "plat+linux": {}, "plat+windows": {}, "plat+x86-64": {} },
      "pl+high-level-assembly": { "plat+apple": {}, "plat+bsd": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+hotspot": { "plat+cross": {} },
      "pl+hy": { "plat+cross": {}, "plat+x86-64": {} },
      "pl+idris": { "plat+cross": {} },
      "pl+inform": { "plat+linux": {}, "plat+windows": {} },
      "pl+intel-fortran-compiler": { "plat+linux": {}, "plat+windows": {} },
      "pl+io": { "plat+.net": {}, "plat+apple": {}, "plat+windows": {}, "plat+x86-64": {} },
      "pl+ironpython": { "plat+apple": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+ironruby": { "plat+apple": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+isabelle": { "plat+apple": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+javascriptcore": { "plat+apple": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+jq": { "plat+cross": {} },
      "pl+jruby": { "plat+cross": {}, "plat+java": {} },
      "pl+julia": { "plat+apple": {}, "plat+bsd": {}, "plat+linux": {}, "plat+windows": {}, "plat+x86-64": {} },
      "pl+jython": { "plat+cross": {}, "plat+java": {} },
      "pl+kornshell": { "plat+apple": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+kotlin": {
        "plat+android": {},
        "plat+apple": {},
        "plat+cross": {},
        "plat+linux": {},
        "plat+nodejs": {},
        "plat+wasm": {},
        "plat+windows": {}
      },
      "pl+labview": { "plat+apple": {}, "plat+cross": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+llvm": { "plat+cross": {} },
      "pl+logtalk": { "plat+cross": {} },
      "pl+lua": { "plat+cross": {} },
      "pl+luajit": { "plat+android": {}, "plat+apple": {}, "plat+windows": {}, "plat+x86-64": {} },
      "pl+max-msp": { "plat+apple": {}, "plat+windows": {} },
      "pl+micropython": { "plat+esp32": {}, "plat+nodejs": {}, "plat+windows": {} },
      "pl+minizinc": { "plat+apple": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+modelica": { "plat+cross": {} },
      "pl+mono": { "plat+apple": {}, "plat+linux": {}, "plat+riscv": {}, "plat+windows": {}, "plat+x86-64": {} },
      "pl+moonscript": { "plat+cross": {} },
      "pl+mruby": { "plat+cross": {} },
      "pl+mzscheme": { "plat+cross": {} },
      "pl+netlogo": { "plat+cross": {}, "plat+x86-64": {} },
      "pl+netrexx": { "plat+android": {}, "plat+apple": {}, "plat+cross": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+newlisp": { "plat+cross": {}, "plat+windows": {}, "plat+x86-64": {} },
      "pl+newspeak": { "plat+android": {}, "plat+apple": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+nim": { "plat+arm": {}, "plat+cross": {}, "plat+riscv": {}, "plat+x86-64": {} },
      "pl+oberon": { "plat+linux": {}, "plat+windows": {}, "plat+x86-64": {} },
      "pl+ocaml": { "plat+apple": {}, "plat+cross": {}, "plat+linux": {}, "plat+riscv": {}, "plat+windows": {}, "plat+x86-64": {} },
      "pl+perl": { "plat+cross": {} },
      "pl+powerbasic": { "plat+dos": {}, "plat+windows": {} },
      "pl+pure": { "plat+apple": {}, "plat+bsd": {}, "plat+cross": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+purebasic": { "plat+apple": {}, "plat+linux": {}, "plat+raspberry": {}, "plat+windows": {} },
      "pl+pypy": { "plat+cross": {} },
      "pl+python": {
        "plat+android": {},
        "plat+apple": {},
        "plat+bsd": {},
        "plat+linux": {},
        "plat+raspberry": {},
        "plat+wasm": {},
        "plat+windows": {}
      },
      "pl+r": { "plat+arm": {}, "plat+x86-64": {} },
      "pl+racket": { "plat+cross": {} },
      "pl+raku": { "plat+cross": {} },
      "pl+rakudo": { "plat+bsd": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+rascal": { "plat+linux": {}, "plat+windows": {} },
      "pl+rebol": { "plat+cross": {} },
      "pl+red": { "plat+linux": {}, "plat+windows": {} },
      "pl+ruby": { "plat+cross": {} },
      "pl+rust": { "plat+cross": {} },
      "pl+sass": { "plat+cross": {} },
      "pl+sbcl": { "plat+bsd": {}, "plat+cross": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+scala": { "plat+java": {}, "plat+nodejs": {} },
      "pl+scratch": { "plat+android": {}, "plat+apple": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+scratchjr": { "plat+android": {}, "plat+apple": {} },
      "pl+scumm": { "plat+cross": {} },
      "pl+seed7": { "plat+bsd": {}, "plat+cross": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+self": { "plat+apple": {}, "plat+cross": {}, "plat+windows": {} },
      "pl+simula": { "plat+windows": {} },
      "pl+simulink": { "plat+apple": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+sql": { "plat+cross": {} },
      "pl+squeak": { "plat+apple": {}, "plat+cross": {}, "plat+windows": {} },
      "pl+squirrel": { "plat+cross": {} },
      "pl+supercollider": { "plat+apple": {}, "plat+bsd": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+swi-prolog": { "plat+cross": {} },
      "pl+swift": { "plat+android": {}, "plat+apple": {}, "plat+cross": {}, "plat+java": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+tcsh": { "plat+cross": {} },
      "pl+tex": { "plat+cross": {} },
      "pl+tk": { "plat+cross": {} },
      "pl+turbo-pascal": { "plat+dos": {}, "plat+windows": {} },
      "pl+v": { "plat+apple": {}, "plat+bsd": {}, "plat+linux": {}, "plat+windows": {}, "plat+x86-64": {} },
      "pl+v8": { "plat+arm": {}, "plat+x86-64": {} },
      "pl+vala": { "plat+cross": {} },
      "pl+visual-basic": { "plat+android": {}, "plat+apple": {}, "plat+bsd": {}, "plat+dos": {}, "plat+linux": {}, "plat+windows": {} },
      "pl+vvvv": { "plat+windows": {} },
      "pl+wolfram-language": { "plat+cross": {} },
      "pl+xojo": { "plat+android": {}, "plat+apple": {}, "plat+linux": {}, "plat+raspberry": {}, "plat+windows": {} },
      "pl+xquery": { "plat+cross": {} },
      "pl+xsb": { "plat+cross": {} },
      "pl+xtend": { "plat+cross": {}, "plat+java": {} },
      "pl+yabasic": { "plat+windows": {} },
      "pl+yacc": { "plat+cross": {} },
      "pl+zig": {
        "plat+arm": {},
        "plat+bsd": {},
        "plat+cross": {},
        "plat+linux": {},
        "plat+riscv": {},
        "plat+wasm": {},
        "plat+windows": {},
        "plat+x86-64": {}
      }
    },
    "post": { "pl+python": { "post+2024_09_15_python": {} } },
    "tag": {
      "pl+.net": { "tag+app": {}, "tag+cli": {}, "tag+compiler": {}, "tag+framework": {}, "tag+interpreter": {}, "tag+shell": {}, "tag+ui": {} },
      "pl+actionscript": {
        "tag+app": {},
        "tag+audio-dev": {},
        "tag+compiler": {},
        "tag+dbms": {},
        "tag+editor": {},
        "tag+framework": {},
        "tag+games": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+scripting": {}
      },
      "pl+ada": {
        "tag+app": {},
        "tag+compiler": {},
        "tag+dbms": {},
        "tag+embedded": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+ray-tracer": {},
        "tag+testing": {},
        "tag+viz": {}
      },
      "pl+agda": {
        "tag+automation": {},
        "tag+compiler": {},
        "tag+industrial": {},
        "tag+instrument_control": {},
        "tag+interpreter": {},
        "tag+proofs": {}
      },
      "pl+algol": { "tag+app": {}, "tag+compiler": {}, "tag+editor": {}, "tag+interpreter": {} },
      "pl+alice": { "tag+flow": {}, "tag+interpreter": {}, "tag+testing": {} },
      "pl+ampl": { "tag+industrial": {}, "tag+interpreter": {}, "tag+stats": {} },
      "pl+apl": {
        "tag+3dg": {},
        "tag+analysis": {},
        "tag+app": {},
        "tag+automation": {},
        "tag+compiler": {},
        "tag+dbms": {},
        "tag+editor": {},
        "tag+embedded": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+modeling": {},
        "tag+ray-tracer": {},
        "tag+server": {},
        "tag+viz": {},
        "tag+wavelet": {}
      },
      "pl+asm.js": { "tag+app": {}, "tag+asm": {}, "tag+compiler": {}, "tag+games": {}, "tag+interpreter": {} },
      "pl+assembly": {
        "tag+3dg": {},
        "tag+4gl": {},
        "tag+app": {},
        "tag+asm": {},
        "tag+compiler": {},
        "tag+embedded": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+viz": {}
      },
      "pl+assemblyscript": {
        "tag+4gl": {},
        "tag+app": {},
        "tag+asm": {},
        "tag+audio-dev": {},
        "tag+compiler": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+scripting": {}
      },
      "pl+awk": { "tag+dataflow": {}, "tag+editor": {}, "tag+interpreter": {}, "tag+scripting": {}, "tag+shell": {} },
      "pl+ballerina": { "tag+automation": {}, "tag+interpreter": {} },
      "pl+bash": {
        "tag+app": {},
        "tag+automation": {},
        "tag+compiler": {},
        "tag+editor": {},
        "tag+industrial": {},
        "tag+instrument_control": {},
        "tag+interpreter": {},
        "tag+scripting": {},
        "tag+shell": {},
        "tag+viz": {}
      },
      "pl+basic": {
        "tag+app": {},
        "tag+compiler": {},
        "tag+embedded": {},
        "tag+games": {},
        "tag+if": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+modeling": {},
        "tag+ray-tracer": {},
        "tag+ui": {},
        "tag+wavelet": {}
      },
      "pl+befunge": { "tag+compiler": {}, "tag+industrial": {}, "tag+interpreter": {} },
      "pl+boo": { "tag+app": {}, "tag+compiler": {}, "tag+games": {}, "tag+interpreter": {}, "tag+scripting": {} },
      "pl+boomerang": { "tag+interpreter": {} },
      "pl+borland-turbo-c": { "tag+app": {}, "tag+asm": {}, "tag+compiler": {}, "tag+editor": {}, "tag+interpreter": {}, "tag+ray-tracer": {} },
      "pl+brainfuck": { "tag+compiler": {}, "tag+interpreter": {} },
      "pl+c++": {
        "tag+app": {},
        "tag+compiler": {},
        "tag+dataq": {},
        "tag+embedded": {},
        "tag+games": {},
        "tag+industrial": {},
        "tag+instrument_control": {},
        "tag+interpreter": {},
        "tag+viz": {}
      },
      "pl+c-sharp": {
        "tag+app": {},
        "tag+cli": {},
        "tag+compiler": {},
        "tag+dbms": {},
        "tag+editor": {},
        "tag+framework": {},
        "tag+games": {},
        "tag+interpreter": {},
        "tag+scripting": {},
        "tag+shell": {},
        "tag+ui": {},
        "tag+viz": {}
      },
      "pl+c": {
        "tag+app": {},
        "tag+asm": {},
        "tag+compiler": {},
        "tag+embedded": {},
        "tag+flow": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+modeling": {},
        "tag+scripting": {},
        "tag+shell": {},
        "tag+testing": {},
        "tag+ui": {},
        "tag+viz": {},
        "tag+wavelet": {}
      },
      "pl+ceylon": { "tag+interpreter": {} },
      "pl+cg": {
        "tag+3dg": {},
        "tag+asm": {},
        "tag+compiler": {},
        "tag+editor": {},
        "tag+games": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+ray-tracer": {}
      },
      "pl+chuck": { "tag+app": {}, "tag+audio-dev": {}, "tag+industrial": {}, "tag+interpreter": {} },
      "pl+ciao": {
        "tag+3dg": {},
        "tag+compiler": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+scripting": {},
        "tag+shell": {},
        "tag+viz": {}
      },
      "pl+cilk": { "tag+compiler": {}, "tag+interpreter": {} },
      "pl+circuitpython": { "tag+compiler": {}, "tag+interpreter": {}, "tag+viz": {} },
      "pl+clang": {
        "tag+analysis": {},
        "tag+automation": {},
        "tag+cli": {},
        "tag+compiler": {},
        "tag+ray-tracer": {},
        "tag+shell": {},
        "tag+viz": {}
      },
      "pl+clean": { "tag+app": {}, "tag+compiler": {}, "tag+interpreter": {} },
      "pl+clojure": {
        "tag+app": {},
        "tag+automation": {},
        "tag+cli": {},
        "tag+games": {},
        "tag+industrial": {},
        "tag+instrument_control": {},
        "tag+interpreter": {},
        "tag+scripting": {},
        "tag+shell": {}
      },
      "pl+clozure": { "tag+compiler": {}, "tag+editor": {} },
      "pl+clu": { "tag+interpreter": {} },
      "pl+cobra": { "tag+interpreter": {} },
      "pl+codemonkey": { "tag+games": {}, "tag+industrial": {} },
      "pl+coffeescript": { "tag+compiler": {}, "tag+editor": {}, "tag+framework": {}, "tag+games": {}, "tag+industrial": {}, "tag+interpreter": {} },
      "pl+coldfusion": {
        "tag+3dg": {},
        "tag+app": {},
        "tag+dataflow": {},
        "tag+dataq": {},
        "tag+dbms": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+scripting": {},
        "tag+server": {},
        "tag+testing": {},
        "tag+viz": {}
      },
      "pl+colorforth": { "tag+compiler": {}, "tag+interpreter": {}, "tag+scripting": {} },
      "pl+common-lisp": {
        "tag+app": {},
        "tag+compiler": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+low-code": {},
        "tag+modeling": {},
        "tag+rad": {},
        "tag+scripting": {},
        "tag+shell": {},
        "tag+viz": {},
        "tag+wavelet": {}
      },
      "pl+coq": { "tag+interpreter": {}, "tag+proofs": {} },
      "pl+cpython": { "tag+app": {}, "tag+audio-dev": {}, "tag+compiler": {}, "tag+dbms": {}, "tag+interpreter": {}, "tag+ray-tracer": {} },
      "pl+crystal": { "tag+compiler": {}, "tag+interpreter": {}, "tag+scripting": {} },
      "pl+csound": { "tag+audio-dev": {}, "tag+industrial": {}, "tag+interpreter": {}, "tag+midi": {}, "tag+testing": {} },
      "pl+curry": { "tag+audio-dev": {}, "tag+interpreter": {}, "tag+testing": {} },
      "pl+cython": { "tag+cas": {}, "tag+compiler": {}, "tag+interpreter": {} },
      "pl+d": {
        "tag+analysis": {},
        "tag+app": {},
        "tag+asm": {},
        "tag+compiler": {},
        "tag+games": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+numeric": {},
        "tag+sci": {},
        "tag+ui": {},
        "tag+viz": {}
      },
      "pl+dart": {
        "tag+analysis": {},
        "tag+app": {},
        "tag+audio-dev": {},
        "tag+cli": {},
        "tag+editor": {},
        "tag+framework": {},
        "tag+interpreter": {},
        "tag+shell": {},
        "tag+ui": {}
      },
      "pl+datalog": {
        "tag+analysis": {},
        "tag+app": {},
        "tag+audio-dev": {},
        "tag+dbms": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+viz": {}
      },
      "pl+datomic": { "tag+dbms": {} },
      "pl+delphi": {
        "tag+asm": {},
        "tag+automation": {},
        "tag+compiler": {},
        "tag+dbms": {},
        "tag+editor": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+instrument_control": {},
        "tag+interpreter": {},
        "tag+rad": {},
        "tag+ui": {},
        "tag+uml": {},
        "tag+viz": {}
      },
      "pl+dylan": { "tag+compiler": {}, "tag+industrial": {}, "tag+interpreter": {}, "tag+testing": {} },
      "pl+ecmascript": {
        "tag+analysis": {},
        "tag+app": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+scripting": {},
        "tag+testing": {}
      },
      "pl+eiffel": {
        "tag+3dg": {},
        "tag+analysis": {},
        "tag+app": {},
        "tag+compiler": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+modeling": {},
        "tag+testing": {},
        "tag+viz": {},
        "tag+wavelet": {}
      },
      "pl+elixir": { "tag+analysis": {}, "tag+app": {}, "tag+interpreter": {}, "tag+shell": {} },
      "pl+emacs-lisp": {
        "tag+app": {},
        "tag+compiler": {},
        "tag+editor": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+scripting": {},
        "tag+shell": {}
      },
      "pl+erlang": { "tag+app": {}, "tag+compiler": {}, "tag+dbms": {}, "tag+framework": {}, "tag+interpreter": {} },
      "pl+euphoria": {
        "tag+app": {},
        "tag+compiler": {},
        "tag+dbms": {},
        "tag+interpreter": {},
        "tag+low-code": {},
        "tag+modeling": {},
        "tag+rad": {},
        "tag+ray-tracer": {},
        "tag+ui": {},
        "tag+wavelet": {}
      },
      "pl+extempore": { "tag+compiler": {}, "tag+dsp": {}, "tag+multimedia": {}, "tag+wavelet": {} },
      "pl+f-sharp": {
        "tag+app": {},
        "tag+automation": {},
        "tag+cli": {},
        "tag+compiler": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+ray-tracer": {},
        "tag+scripting": {},
        "tag+shell": {},
        "tag+viz": {}
      },
      "pl+factor": { "tag+compiler": {}, "tag+interpreter": {}, "tag+scripting": {} },
      "pl+fantom": { "tag+app": {}, "tag+interpreter": {} },
      "pl+faust": { "tag+app": {}, "tag+audio-dev": {}, "tag+compiler": {}, "tag+dsp": {}, "tag+interpreter": {}, "tag+ui": {}, "tag+wavelet": {} },
      "pl+flix": { "tag+audio-dev": {}, "tag+compiler": {}, "tag+industrial": {}, "tag+interpreter": {} },
      "pl+flutter": { "tag+3dg": {}, "tag+app": {}, "tag+framework": {}, "tag+industrial": {}, "tag+ray-tracer": {}, "tag+ui": {} },
      "pl+forth": {
        "tag+app": {},
        "tag+asm": {},
        "tag+compiler": {},
        "tag+dbms": {},
        "tag+dsp": {},
        "tag+editor": {},
        "tag+embedded": {},
        "tag+games": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+ray-tracer": {},
        "tag+shell": {},
        "tag+testing": {}
      },
      "pl+fortran": {
        "tag+analysis": {},
        "tag+app": {},
        "tag+asm": {},
        "tag+compiler": {},
        "tag+dsp": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+modeling": {},
        "tag+multivar": {},
        "tag+numeric": {},
        "tag+ray-tracer": {},
        "tag+sci": {},
        "tag+scripting": {},
        "tag+stats": {},
        "tag+testing": {},
        "tag+viz": {}
      },
      "pl+fortress": { "tag+compiler": {}, "tag+interpreter": {}, "tag+modeling": {}, "tag+wavelet": {} },
      "pl+fp": { "tag+interpreter": {} },
      "pl+free-pascal": {
        "tag+app": {},
        "tag+asm": {},
        "tag+compiler": {},
        "tag+dbms": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+ui": {}
      },
      "pl+freebasic": { "tag+app": {}, "tag+compiler": {}, "tag+interpreter": {}, "tag+ray-tracer": {}, "tag+viz": {} },
      "pl+frink": { "tag+interpreter": {} },
      "pl+futhark": { "tag+app": {}, "tag+compiler": {}, "tag+interpreter": {}, "tag+ray-tracer": {} },
      "pl+g95": { "tag+compiler": {}, "tag+interpreter": {} },
      "pl+gambit": { "tag+compiler": {}, "tag+interpreter": {} },
      "pl+gdscript": {
        "tag+3dg": {},
        "tag+audio-dev": {},
        "tag+dbms": {},
        "tag+editor": {},
        "tag+games": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+ray-tracer": {},
        "tag+scripting": {},
        "tag+testing": {},
        "tag+ui": {}
      },
      "pl+gforth": { "tag+interpreter": {} },
      "pl+gleam": { "tag+compiler": {}, "tag+framework": {}, "tag+interpreter": {} },
      "pl+gnat": { "tag+compiler": {}, "tag+framework": {}, "tag+interpreter": {} },
      "pl+go": { "tag+app": {}, "tag+compiler": {}, "tag+dbms": {}, "tag+industrial": {}, "tag+interpreter": {}, "tag+testing": {}, "tag+viz": {} },
      "pl+graalvm": { "tag+app": {}, "tag+compiler": {}, "tag+framework": {}, "tag+industrial": {}, "tag+interpreter": {} },
      "pl+gremlin": { "tag+compiler": {} },
      "pl+groovy": { "tag+compiler": {}, "tag+framework": {}, "tag+interpreter": {}, "tag+scripting": {}, "tag+testing": {} },
      "pl+hack": { "tag+audio-dev": {}, "tag+interpreter": {}, "tag+scripting": {} },
      "pl+hackety-hack": { "tag+edu": {}, "tag+interpreter": {}, "tag+ui": {} },
      "pl+haskell": { "tag+app": {}, "tag+compiler": {}, "tag+framework": {}, "tag+industrial": {}, "tag+interpreter": {} },
      "pl+haxe": { "tag+app": {}, "tag+compiler": {}, "tag+industrial": {}, "tag+instrument_control": {}, "tag+interpreter": {}, "tag+viz": {} },
      "pl+hhvm": { "tag+analysis": {}, "tag+interpreter": {}, "tag+viz": {} },
      "pl+high-level-assembly": {
        "tag+4gl": {},
        "tag+app": {},
        "tag+asm": {},
        "tag+compiler": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+shell": {},
        "tag+viz": {}
      },
      "pl+hotspot": { "tag+asm": {}, "tag+compiler": {}, "tag+interpreter": {} },
      "pl+hy": { "tag+interpreter": {} },
      "pl+icon": { "tag+app": {}, "tag+asm": {}, "tag+industrial": {}, "tag+interpreter": {}, "tag+scripting": {}, "tag+testing": {} },
      "pl+idris": { "tag+interpreter": {}, "tag+proofs": {} },
      "pl+impromptu": { "tag+audio-dev": {}, "tag+compiler": {}, "tag+editor": {}, "tag+interpreter": {}, "tag+ray-tracer": {} },
      "pl+inform": { "tag+compiler": {}, "tag+editor": {}, "tag+games": {}, "tag+if": {}, "tag+interpreter": {}, "tag+testing": {} },
      "pl+intel-fortran-compiler": {
        "tag+3dg": {},
        "tag+analysis": {},
        "tag+app": {},
        "tag+cli": {},
        "tag+compiler": {},
        "tag+shell": {},
        "tag+ui": {},
        "tag+viz": {}
      },
      "pl+io": { "tag+interpreter": {} },
      "pl+ironpython": {
        "tag+app": {},
        "tag+cli": {},
        "tag+compiler": {},
        "tag+framework": {},
        "tag+interpreter": {},
        "tag+scripting": {},
        "tag+shell": {}
      },
      "pl+ironruby": { "tag+app": {}, "tag+compiler": {}, "tag+framework": {}, "tag+interpreter": {}, "tag+scripting": {} },
      "pl+isabelle": {
        "tag+automation": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+instrument_control": {},
        "tag+interpreter": {},
        "tag+modeling": {},
        "tag+proofs": {},
        "tag+wavelet": {}
      },
      "pl+javascript": {
        "tag+app": {},
        "tag+asm": {},
        "tag+dbms": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+ray-tracer": {},
        "tag+scripting": {},
        "tag+shell": {},
        "tag+viz": {}
      },
      "pl+javascriptcore": {
        "tag+3dg": {},
        "tag+app": {},
        "tag+compiler": {},
        "tag+dbms": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+low-code": {},
        "tag+ray-tracer": {},
        "tag+scripting": {},
        "tag+shell": {},
        "tag+ui": {},
        "tag+viz": {}
      },
      "pl+joy": { "tag+interpreter": {} },
      "pl+jq": { "tag+app": {}, "tag+editor": {}, "tag+interpreter": {}, "tag+shell": {} },
      "pl+jruby": { "tag+app": {}, "tag+compiler": {}, "tag+framework": {}, "tag+interpreter": {}, "tag+scripting": {}, "tag+shell": {} },
      "pl+julia": {
        "tag+3dg": {},
        "tag+analysis": {},
        "tag+app": {},
        "tag+audio-dev": {},
        "tag+compiler": {},
        "tag+dbms": {},
        "tag+embedded": {},
        "tag+industrial": {},
        "tag+instrument_control": {},
        "tag+interpreter": {},
        "tag+modeling": {},
        "tag+numeric": {},
        "tag+sci": {},
        "tag+scripting": {},
        "tag+shell": {},
        "tag+ui": {},
        "tag+wavelet": {}
      },
      "pl+jython": { "tag+interpreter": {} },
      "pl+k": { "tag+analysis": {}, "tag+app": {}, "tag+dbms": {}, "tag+interpreter": {} },
      "pl+kornshell": { "tag+interpreter": {}, "tag+shell": {} },
      "pl+kotlin": {
        "tag+app": {},
        "tag+compiler": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+scripting": {},
        "tag+shell": {}
      },
      "pl+labview": {
        "tag+analysis": {},
        "tag+app": {},
        "tag+automation": {},
        "tag+compiler": {},
        "tag+dataflow": {},
        "tag+dataq": {},
        "tag+dsp": {},
        "tag+embedded": {},
        "tag+flow": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+instrument_control": {},
        "tag+interpreter": {},
        "tag+low-code": {},
        "tag+modeling": {},
        "tag+scripting": {},
        "tag+stats": {},
        "tag+testing": {},
        "tag+viz": {},
        "tag+wavelet": {}
      },
      "pl+lisp": {
        "tag+app": {},
        "tag+asm": {},
        "tag+compiler": {},
        "tag+editor": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+scripting": {},
        "tag+viz": {}
      },
      "pl+llvm": {
        "tag+analysis": {},
        "tag+asm": {},
        "tag+compiler": {},
        "tag+framework": {},
        "tag+interpreter": {},
        "tag+ray-tracer": {},
        "tag+shell": {},
        "tag+viz": {}
      },
      "pl+logtalk": { "tag+analysis": {}, "tag+compiler": {}, "tag+framework": {}, "tag+interpreter": {}, "tag+viz": {} },
      "pl+lua": {
        "tag+app": {},
        "tag+compiler": {},
        "tag+dbms": {},
        "tag+editor": {},
        "tag+games": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+ray-tracer": {},
        "tag+scripting": {},
        "tag+viz": {}
      },
      "pl+luajit": { "tag+asm": {}, "tag+compiler": {}, "tag+industrial": {}, "tag+interpreter": {} },
      "pl+max-msp": {
        "tag+3dg": {},
        "tag+app": {},
        "tag+audio-dev": {},
        "tag+dsp": {},
        "tag+flow": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+midi": {},
        "tag+modular": {},
        "tag+multimedia": {},
        "tag+ray-tracer": {},
        "tag+ui": {},
        "tag+video": {},
        "tag+viz": {},
        "tag+wavelet": {}
      },
      "pl+micropython": {
        "tag+app": {},
        "tag+asm": {},
        "tag+compiler": {},
        "tag+editor": {},
        "tag+embedded": {},
        "tag+interpreter": {},
        "tag+testing": {}
      },
      "pl+ml": { "tag+compiler": {}, "tag+genomics": {}, "tag+interpreter": {}, "tag+modeling": {}, "tag+proofs": {}, "tag+wavelet": {} },
      "pl+mlton": { "tag+compiler": {}, "tag+interpreter": {} },
      "pl+modelica": { "tag+app": {}, "tag+industrial": {}, "tag+interpreter": {}, "tag+modeling": {}, "tag+viz": {} },
      "pl+modula": { "tag+interpreter": {} },
      "pl+mono": {
        "tag+3dg": {},
        "tag+app": {},
        "tag+automation": {},
        "tag+cli": {},
        "tag+compiler": {},
        "tag+dataq": {},
        "tag+dbms": {},
        "tag+framework": {},
        "tag+games": {},
        "tag+scripting": {},
        "tag+shell": {},
        "tag+ui": {}
      },
      "pl+moonscript": { "tag+app": {}, "tag+compiler": {}, "tag+games": {} },
      "pl+mruby": { "tag+compiler": {}, "tag+interpreter": {} },
      "pl+mzscheme": {
        "tag+analysis": {},
        "tag+app": {},
        "tag+compiler": {},
        "tag+dbms": {},
        "tag+editor": {},
        "tag+framework": {},
        "tag+games": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+scripting": {},
        "tag+shell": {},
        "tag+testing": {},
        "tag+ui": {}
      },
      "pl+netlogo": { "tag+compiler": {}, "tag+interpreter": {}, "tag+modeling": {}, "tag+uml": {} },
      "pl+netrexx": { "tag+interpreter": {}, "tag+scripting": {} },
      "pl+newlisp": {
        "tag+analysis": {},
        "tag+app": {},
        "tag+dbms": {},
        "tag+industrial": {},
        "tag+multivar": {},
        "tag+ray-tracer": {},
        "tag+scripting": {},
        "tag+stats": {},
        "tag+ui": {}
      },
      "pl+newspeak": { "tag+compiler": {}, "tag+framework": {}, "tag+interpreter": {}, "tag+testing": {}, "tag+ui": {} },
      "pl+nim": {
        "tag+3dg": {},
        "tag+analysis": {},
        "tag+app": {},
        "tag+compiler": {},
        "tag+editor": {},
        "tag+games": {},
        "tag+interpreter": {},
        "tag+iot": {},
        "tag+ray-tracer": {},
        "tag+stats": {},
        "tag+viz": {}
      },
      "pl+oberon": { "tag+app": {}, "tag+compiler": {}, "tag+industrial": {}, "tag+interpreter": {} },
      "pl+ocaml": {
        "tag+analysis": {},
        "tag+automation": {},
        "tag+compiler": {},
        "tag+industrial": {},
        "tag+instrument_control": {},
        "tag+interpreter": {},
        "tag+proofs": {},
        "tag+viz": {}
      },
      "pl+pascal": {
        "tag+4gl": {},
        "tag+app": {},
        "tag+asm": {},
        "tag+compiler": {},
        "tag+framework": {},
        "tag+games": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+modeling": {},
        "tag+rad": {},
        "tag+viz": {},
        "tag+wavelet": {}
      },
      "pl+perl": {
        "tag+app": {},
        "tag+compiler": {},
        "tag+dbms": {},
        "tag+framework": {},
        "tag+genomics": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+scripting": {},
        "tag+shell": {},
        "tag+viz": {}
      },
      "pl+powerbasic": {
        "tag+app": {},
        "tag+asm": {},
        "tag+compiler": {},
        "tag+editor": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+ray-tracer": {},
        "tag+testing": {},
        "tag+ui": {}
      },
      "pl+processing": { "tag+app": {}, "tag+framework": {}, "tag+games": {}, "tag+industrial": {}, "tag+interpreter": {}, "tag+ray-tracer": {} },
      "pl+prolog": {
        "tag+analysis": {},
        "tag+app": {},
        "tag+audio-dev": {},
        "tag+compiler": {},
        "tag+dbms": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+low-code": {},
        "tag+modeling": {},
        "tag+proofs": {},
        "tag+ray-tracer": {},
        "tag+uml": {},
        "tag+viz": {},
        "tag+wavelet": {}
      },
      "pl+pure": {
        "tag+app": {},
        "tag+audio-dev": {},
        "tag+cas": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+multimedia": {},
        "tag+numeric": {},
        "tag+sci": {},
        "tag+video": {}
      },
      "pl+purebasic": { "tag+app": {}, "tag+asm": {}, "tag+compiler": {}, "tag+editor": {}, "tag+games": {}, "tag+interpreter": {}, "tag+ui": {} },
      "pl+puredata": {
        "tag+audio-dev": {},
        "tag+dataflow": {},
        "tag+dsp": {},
        "tag+flow": {},
        "tag+games": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+midi": {},
        "tag+multimedia": {},
        "tag+ray-tracer": {},
        "tag+ui": {},
        "tag+video": {},
        "tag+wavelet": {}
      },
      "pl+purescript": { "tag+app": {}, "tag+compiler": {}, "tag+editor": {}, "tag+interpreter": {} },
      "pl+pypy": { "tag+analysis": {}, "tag+compiler": {}, "tag+framework": {}, "tag+interpreter": {}, "tag+testing": {} },
      "pl+python": {
        "tag+analysis": {},
        "tag+app": {},
        "tag+cas": {},
        "tag+compiler": {},
        "tag+dbms": {},
        "tag+framework": {},
        "tag+games": {},
        "tag+if": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+modeling": {},
        "tag+numeric": {},
        "tag+sci": {},
        "tag+scripting": {},
        "tag+testing": {},
        "tag+ui": {},
        "tag+viz": {},
        "tag+wavelet": {}
      },
      "pl+r": {
        "tag+3dg": {},
        "tag+analysis": {},
        "tag+cli": {},
        "tag+dsp": {},
        "tag+genomics": {},
        "tag+interpreter": {},
        "tag+multivar": {},
        "tag+ray-tracer": {},
        "tag+scripting": {},
        "tag+shell": {},
        "tag+stats": {},
        "tag+ui": {},
        "tag+viz": {}
      },
      "pl+r5rs": { "tag+analysis": {}, "tag+compiler": {}, "tag+industrial": {}, "tag+interpreter": {}, "tag+scripting": {}, "tag+testing": {} },
      "pl+racket": {
        "tag+analysis": {},
        "tag+app": {},
        "tag+compiler": {},
        "tag+dbms": {},
        "tag+editor": {},
        "tag+framework": {},
        "tag+games": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+scripting": {},
        "tag+shell": {},
        "tag+testing": {},
        "tag+ui": {}
      },
      "pl+raku": { "tag+compiler": {}, "tag+interpreter": {}, "tag+testing": {} },
      "pl+rakudo": { "tag+compiler": {} },
      "pl+rascal": { "tag+analysis": {} },
      "pl+reason": { "tag+app": {}, "tag+compiler": {}, "tag+framework": {}, "tag+interpreter": {} },
      "pl+rebol": {
        "tag+3dg": {},
        "tag+app": {},
        "tag+audio-dev": {},
        "tag+dbms": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+multimedia": {},
        "tag+ray-tracer": {},
        "tag+ui": {},
        "tag+video": {}
      },
      "pl+red": { "tag+app": {}, "tag+asm": {}, "tag+dataflow": {}, "tag+flow": {}, "tag+interpreter": {}, "tag+ui": {} },
      "pl+ruby": {
        "tag+analysis": {},
        "tag+app": {},
        "tag+compiler": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+instrument_control": {},
        "tag+interpreter": {},
        "tag+scripting": {},
        "tag+ui": {},
        "tag+viz": {}
      },
      "pl+rust": {
        "tag+app": {},
        "tag+compiler": {},
        "tag+dataq": {},
        "tag+editor": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+iot": {},
        "tag+viz": {}
      },
      "pl+sass": { "tag+interpreter": {}, "tag+scripting": {} },
      "pl+sbcl": { "tag+compiler": {} },
      "pl+scala": {
        "tag+app": {},
        "tag+audio-dev": {},
        "tag+compiler": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+scripting": {},
        "tag+shell": {},
        "tag+testing": {}
      },
      "pl+scheme": { "tag+analysis": {}, "tag+compiler": {}, "tag+industrial": {}, "tag+interpreter": {}, "tag+scripting": {}, "tag+testing": {} },
      "pl+scratch": {
        "tag+audio-dev": {},
        "tag+editor": {},
        "tag+games": {},
        "tag+interpreter": {},
        "tag+multimedia": {},
        "tag+ray-tracer": {},
        "tag+stats": {},
        "tag+video": {},
        "tag+viz": {}
      },
      "pl+scratchjr": { "tag+editor": {}, "tag+interpreter": {}, "tag+modeling": {}, "tag+wavelet": {} },
      "pl+scumm": {
        "tag+audio-dev": {},
        "tag+compiler": {},
        "tag+editor": {},
        "tag+games": {},
        "tag+interpreter": {},
        "tag+midi": {},
        "tag+ray-tracer": {},
        "tag+scripting": {}
      },
      "pl+sed": { "tag+editor": {}, "tag+games": {}, "tag+industrial": {}, "tag+interpreter": {}, "tag+scripting": {}, "tag+shell": {} },
      "pl+seed7": { "tag+analysis": {}, "tag+compiler": {}, "tag+dbms": {}, "tag+interpreter": {}, "tag+ray-tracer": {} },
      "pl+self": {
        "tag+4gl": {},
        "tag+app": {},
        "tag+compiler": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+viz": {}
      },
      "pl+shacl": { "tag+dbms": {}, "tag+framework": {} },
      "pl+shex": { "tag+framework": {} },
      "pl+simula": {
        "tag+app": {},
        "tag+compiler": {},
        "tag+framework": {},
        "tag+interpreter": {},
        "tag+modeling": {},
        "tag+ray-tracer": {},
        "tag+viz": {}
      },
      "pl+simulink": {
        "tag+analysis": {},
        "tag+dsp": {},
        "tag+embedded": {},
        "tag+industrial": {},
        "tag+modeling": {},
        "tag+testing": {},
        "tag+wavelet": {}
      },
      "pl+souffle": { "tag+analysis": {}, "tag+compiler": {}, "tag+interpreter": {} },
      "pl+sql": {
        "tag+4gl": {},
        "tag+dbms": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+multimedia": {},
        "tag+testing": {},
        "tag+video": {},
        "tag+viz": {}
      },
      "pl+squeak": { "tag+interpreter": {} },
      "pl+squirrel": { "tag+app": {}, "tag+games": {}, "tag+interpreter": {}, "tag+scripting": {} },
      "pl+standard-ml": { "tag+app": {}, "tag+compiler": {}, "tag+industrial": {}, "tag+interpreter": {}, "tag+proofs": {}, "tag+ray-tracer": {} },
      "pl+supercollider": {
        "tag+app": {},
        "tag+audio-dev": {},
        "tag+dsp": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+ray-tracer": {},
        "tag+wavelet": {}
      },
      "pl+swi-prolog": {
        "tag+app": {},
        "tag+dbms": {},
        "tag+editor": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+testing": {},
        "tag+ui": {},
        "tag+viz": {}
      },
      "pl+swift": {
        "tag+app": {},
        "tag+compiler": {},
        "tag+dataflow": {},
        "tag+dbms": {},
        "tag+flow": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+scripting": {},
        "tag+ui": {}
      },
      "pl+tcl": {
        "tag+app": {},
        "tag+automation": {},
        "tag+dbms": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+instrument_control": {},
        "tag+interpreter": {},
        "tag+ray-tracer": {},
        "tag+scripting": {},
        "tag+testing": {},
        "tag+ui": {}
      },
      "pl+tcsh": { "tag+shell": {} },
      "pl+tex": {
        "tag+3dg": {},
        "tag+analysis": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+modeling": {},
        "tag+stats": {},
        "tag+testing": {},
        "tag+viz": {},
        "tag+wavelet": {}
      },
      "pl+tk": { "tag+3dg": {}, "tag+app": {}, "tag+framework": {}, "tag+interpreter": {}, "tag+scripting": {}, "tag+shell": {}, "tag+ui": {} },
      "pl+turbo-pascal": {
        "tag+app": {},
        "tag+asm": {},
        "tag+automation": {},
        "tag+compiler": {},
        "tag+editor": {},
        "tag+interpreter": {},
        "tag+rad": {},
        "tag+ray-tracer": {},
        "tag+ui": {}
      },
      "pl+txl": { "tag+analysis": {}, "tag+app": {}, "tag+industrial": {}, "tag+interpreter": {} },
      "pl+typescript": {
        "tag+analysis": {},
        "tag+app": {},
        "tag+automation": {},
        "tag+compiler": {},
        "tag+industrial": {},
        "tag+instrument_control": {},
        "tag+interpreter": {},
        "tag+viz": {}
      },
      "pl+v": { "tag+compiler": {}, "tag+interpreter": {} },
      "pl+v8": { "tag+app": {}, "tag+asm": {}, "tag+compiler": {}, "tag+interpreter": {} },
      "pl+vala": {
        "tag+app": {},
        "tag+asm": {},
        "tag+compiler": {},
        "tag+interpreter": {},
        "tag+multimedia": {},
        "tag+scripting": {},
        "tag+ui": {},
        "tag+video": {},
        "tag+viz": {}
      },
      "pl+visual-basic": {
        "tag+app": {},
        "tag+cli": {},
        "tag+compiler": {},
        "tag+dbms": {},
        "tag+editor": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+low-code": {},
        "tag+rad": {},
        "tag+shell": {},
        "tag+testing": {},
        "tag+ui": {}
      },
      "pl+vvvv": { "tag+3dg": {}, "tag+app": {}, "tag+audio-dev": {}, "tag+dataflow": {}, "tag+flow": {}, "tag+framework": {}, "tag+ray-tracer": {} },
      "pl+whiley": { "tag+compiler": {}, "tag+interpreter": {} },
      "pl+wolfram-language": { "tag+audio-dev": {}, "tag+cas": {}, "tag+cli": {}, "tag+games": {}, "tag+interpreter": {}, "tag+shell": {} },
      "pl+xojo": { "tag+app": {}, "tag+dbms": {}, "tag+editor": {}, "tag+framework": {}, "tag+industrial": {}, "tag+interpreter": {} },
      "pl+xpath": { "tag+app": {} },
      "pl+xquery": {
        "tag+analysis": {},
        "tag+app": {},
        "tag+dbms": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+scripting": {},
        "tag+viz": {}
      },
      "pl+xsb": { "tag+dbms": {}, "tag+interpreter": {} },
      "pl+xslt": { "tag+analysis": {}, "tag+app": {}, "tag+dbms": {}, "tag+editor": {}, "tag+framework": {}, "tag+industrial": {}, "tag+viz": {} },
      "pl+xtend": { "tag+editor": {}, "tag+interpreter": {} },
      "pl+yabasic": { "tag+games": {}, "tag+interpreter": {}, "tag+ui": {} },
      "pl+yacc": { "tag+analysis": {}, "tag+compiler": {}, "tag+interpreter": {} },
      "pl+zig": {
        "tag+app": {},
        "tag+asm": {},
        "tag+compiler": {},
        "tag+framework": {},
        "tag+industrial": {},
        "tag+interpreter": {},
        "tag+testing": {},
        "tag+viz": {}
      }
    },
    "tool": { "pl+python": { "tool+pixi": {}, "tool+ruff": {}, "tool+pyright": {}, "tool+vscode-python": {} } },
    "tsys": {
      "pl+actionscript": { "tsys+static": {}, "tsys+strong": {} },
      "pl+ada": { "tsys+nominal": {}, "tsys+safe": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+agda": { "tsys+dependent": {}, "tsys+inferred": {}, "tsys+manifest": {}, "tsys+nominal": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+algol": { "tsys+static": {}, "tsys+strong": {} },
      "pl+alice": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+apl": { "tsys+dynamic": {} },
      "pl+assemblyscript": { "tsys+static": {} },
      "pl+ballerina": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {}, "tsys+structural": {} },
      "pl+boo": { "tsys+duck": {}, "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+c++": { "tsys+inferred": {}, "tsys+nominal": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+c-sharp": { "tsys+dynamic": {}, "tsys+inferred": {}, "tsys+nominal": {}, "tsys+safe": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+c": { "tsys+manifest": {}, "tsys+nominal": {}, "tsys+static": {}, "tsys+weak": {} },
      "pl+ceylon": { "tsys+safe": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+chuck": { "tsys+strong": {} },
      "pl+cilk": { "tsys+manifest": {}, "tsys+static": {}, "tsys+weak": {} },
      "pl+clean": { "tsys+dynamic": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+clojure": { "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+clu": { "tsys+strong": {} },
      "pl+cobra": { "tsys+dynamic": {}, "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+coffeescript": { "tsys+dynamic": {} },
      "pl+common-lisp": { "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+crystal": { "tsys+duck": {}, "tsys+nominal": {}, "tsys+static": {} },
      "pl+curry": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+d": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+dart": { "tsys+inferred": {}, "tsys+optional": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+datalog": { "tsys+weak": {} },
      "pl+ecmascript": { "tsys+dynamic": {}, "tsys+weak": {} },
      "pl+eiffel": { "tsys+static": {} },
      "pl+elixir": { "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+emacs-lisp": { "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+erlang": { "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+extempore": { "tsys+dynamic": {}, "tsys+static": {} },
      "pl+f-sharp": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+factor": { "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+fantom": { "tsys+dynamic": {}, "tsys+static": {} },
      "pl+flix": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {}, "tsys+structural": {} },
      "pl+fortran": { "tsys+manifest": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+fortress": { "tsys+static": {} },
      "pl+freebasic": { "tsys+static": {} },
      "pl+futhark": { "tsys+dependent": {}, "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+gambit": { "tsys+dynamic": {}, "tsys+latent": {}, "tsys+strong": {} },
      "pl+gleam": { "tsys+inferred": {}, "tsys+safe": {}, "tsys+static": {} },
      "pl+go": { "tsys+inferred": {}, "tsys+nominal": {}, "tsys+static": {}, "tsys+strong": {}, "tsys+structural": {} },
      "pl+groovy": { "tsys+duck": {}, "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+hack": { "tsys+dynamic": {}, "tsys+gradual": {}, "tsys+static": {}, "tsys+weak": {} },
      "pl+haskell": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+haxe": { "tsys+dynamic": {}, "tsys+nominal": {}, "tsys+static": {} },
      "pl+icon": { "tsys+dynamic": {} },
      "pl+idris": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+impromptu": { "tsys+dynamic": {}, "tsys+static": {} },
      "pl+io": { "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+javascript": { "tsys+duck": {}, "tsys+dynamic": {}, "tsys+weak": {} },
      "pl+joy": { "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+julia": { "tsys+dynamic": {}, "tsys+inferred": {}, "tsys+nominal": {}, "tsys+optional": {}, "tsys+strong": {} },
      "pl+k": { "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+kotlin": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+lisp": { "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+lua": { "tsys+duck": {}, "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+ml": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+mlton": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+modula": { "tsys+safe": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+moonscript": { "tsys+duck": {}, "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+mzscheme": { "tsys+dynamic": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+netlogo": { "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+netrexx": { "tsys+safe": {}, "tsys+static": {}, "tsys+string": {}, "tsys+strong": {} },
      "pl+newspeak": { "tsys+dynamic": {}, "tsys+optional": {} },
      "pl+nim": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {}, "tsys+structural": {} },
      "pl+oberon": { "tsys+dynamic": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+ocaml": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {}, "tsys+structural": {} },
      "pl+pascal": { "tsys+safe": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+pure": { "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+purescript": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+python": { "tsys+duck": {}, "tsys+dynamic": {}, "tsys+optional": {}, "tsys+strong": {} },
      "pl+r": { "tsys+dynamic": {} },
      "pl+r5rs": { "tsys+dynamic": {}, "tsys+latent": {}, "tsys+strong": {} },
      "pl+racket": { "tsys+dynamic": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+raku": { "tsys+dynamic": {}, "tsys+gradual": {} },
      "pl+rebol": { "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+ruby": { "tsys+duck": {}, "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+rust": { "tsys+affine": {}, "tsys+inferred": {}, "tsys+nominal": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+sass": { "tsys+dynamic": {} },
      "pl+scala": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {}, "tsys+structural": {} },
      "pl+scheme": { "tsys+dynamic": {}, "tsys+latent": {}, "tsys+strong": {} },
      "pl+seed7": { "tsys+manifest": {}, "tsys+nominal": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+self": { "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+simula": { "tsys+nominal": {}, "tsys+static": {} },
      "pl+souffle": { "tsys+static": {} },
      "pl+sql": { "tsys+static": {}, "tsys+strong": {} },
      "pl+squeak": { "tsys+dynamic": {} },
      "pl+squirrel": { "tsys+dynamic": {} },
      "pl+standard-ml": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+swift": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+tcl": { "tsys+dynamic": {}, "tsys+string": {} },
      "pl+typescript": { "tsys+duck": {}, "tsys+gradual": {}, "tsys+structural": {} },
      "pl+v": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+vala": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {}, "tsys+structural": {} },
      "pl+visual-basic": { "tsys+nominal": {}, "tsys+safe": {}, "tsys+static": {}, "tsys+strong": {}, "tsys+weak": {} },
      "pl+vvvv": { "tsys+strong": {} },
      "pl+whiley": { "tsys+flow": {}, "tsys+safe": {}, "tsys+strong": {}, "tsys+structural": {} },
      "pl+wolfram-language": { "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+xquery": { "tsys+dynamic": {}, "tsys+strong": {} },
      "pl+xtend": { "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {} },
      "pl+zig": { "tsys+generic": {}, "tsys+inferred": {}, "tsys+static": {}, "tsys+strong": {}, "tsys+structural": {} }
    },
    "writtenIn": {
      "pl+.net": { "pl+c++": {}, "pl+c-sharp": {} },
      "pl+agda": { "pl+haskell": {} },
      "pl+bash": { "pl+c": {} },
      "pl+boo": { "pl+c-sharp": {} },
      "pl+circuitpython": { "pl+c": {} },
      "pl+clang": { "pl+c++": {} },
      "pl+codemonkey": { "pl+coffeescript": {}, "pl+javascript": {}, "pl+ruby": {} },
      "pl+coq": { "pl+ocaml": {} },
      "pl+cpython": { "pl+c": {}, "pl+python": {} },
      "pl+csound": { "pl+c": {} },
      "pl+cython": { "pl+python": {} },
      "pl+datomic": { "pl+clojure": {} },
      "pl+faust": { "pl+c++": {} },
      "pl+flutter": { "pl+c": {}, "pl+c++": {}, "pl+dart": {} },
      "pl+g95": { "pl+c": {} },
      "pl+gdscript": { "pl+c++": {} },
      "pl+gforth": { "pl+c": {}, "pl+forth": {} },
      "pl+gleam": { "pl+rust": {} },
      "pl+go": { "pl+assembly": {}, "pl+c++": {} },
      "pl+hackety-hack": { "pl+ruby": {} },
      "pl+haxe": { "pl+ocaml": {} },
      "pl+hhvm": { "pl+c++": {}, "pl+ocaml": {}, "pl+rust": {} },
      "pl+high-level-assembly": { "pl+assembly": {} },
      "pl+hotspot": { "pl+assembly": {}, "pl+c++": {} },
      "pl+ironpython": { "pl+c-sharp": {} },
      "pl+ironruby": { "pl+c-sharp": {} },
      "pl+isabelle": { "pl+scala": {}, "pl+standard-ml": {} },
      "pl+javascriptcore": { "pl+c++": {} },
      "pl+jq": { "pl+c": {}, "pl+go": {}, "pl+rust": {} },
      "pl+jruby": { "pl+ruby": {} },
      "pl+julia": { "pl+c": {}, "pl+c++": {}, "pl+llvm": {}, "pl+scheme": {} },
      "pl+jython": { "pl+python": {} },
      "pl+kornshell": { "pl+c": {} },
      "pl+labview": { "pl+c": {}, "pl+c++": {}, "pl+c-sharp": {} },
      "pl+llvm": { "pl+c++": {} },
      "pl+luajit": { "pl+c": {}, "pl+lua": {} },
      "pl+max-msp": { "pl+c": {}, "pl+c++": {} },
      "pl+micropython": { "pl+c": {} },
      "pl+minizinc": { "pl+c++": {} },
      "pl+mono": { "pl+c": {}, "pl+c-sharp": {} },
      "pl+mruby": { "pl+c": {}, "pl+ruby": {} },
      "pl+netlogo": { "pl+scala": {} },
      "pl+newspeak": { "pl+c++": {}, "pl+javascript": {} },
      "pl+nim": { "pl+pascal": {} },
      "pl+ocaml": { "pl+c": {} },
      "pl+perl": { "pl+c": {} },
      "pl+ruby": { "pl+c": {} },
      "pl+rust": { "pl+ocaml": {} },
      "pl+scratch": { "pl+actionscript": {}, "pl+javascript": {}, "pl+squeak": {} },
      "pl+sed": { "pl+c": {} },
      "pl+shex": { "pl+javascript": {}, "pl+scala": {} },
      "pl+supercollider": { "pl+c++": {} },
      "pl+swi-prolog": { "pl+c": {}, "pl+prolog": {} },
      "pl+tcsh": { "pl+c": {} },
      "pl+tex": { "pl+pascal": {} },
      "pl+tk": { "pl+c": {} },
      "pl+v8": { "pl+c++": {} },
      "pl+yacc": { "pl+c": {} }
    }
  }
}
